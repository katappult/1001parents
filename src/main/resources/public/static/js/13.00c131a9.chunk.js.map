{"version":3,"sources":["_services/business.rule.services.js","_components/_admin/BusinessClassAndTypeSelect/BusinessClassAndTypeSelect.js","_components/_admin/BusinessClassAndTypeSelect/BusinessEventSelectInput.js","_components/_admin/BusinessRules/BusinessRuleDetails/UpdateOrder.js","_services/businessRuleExclusion.services.js","_components/_admin/BusinessRules/Exclusions/Effectivity/AddEffectivity/AddEffectivity.js","_components/_admin/BusinessRules/Exclusions/Effectivity/Effectivities/Effectivities.js","_components/_admin/BusinessRules/BusinessRuleAdd/BusinessRuleAdd.js","_components/_admin/BusinessRules/BusinessRuleClasses/BusinessRuleClasses.js","_components/_admin/BusinessRules/BusinessRulesAll/BusinessRulesAll.js","_components/_admin/BusinessRules/BusinessRulesFilter/BusinessRulesFilter.js","_components/_admin/BusinessRules/BusinessRules/BusinessRules.js","_components/_admin/BusinessRules/Exclusions/Users/UserExclusionAdd/UserExclusionAdd.js","_components/_admin/BusinessRules/Exclusions/Users/UserExclusions/UserExclusions.js","_components/_admin/BusinessRules/Exclusions/Processors/ExclusionProcessorAdd/ExclusionProcessorAdd.js","_components/_admin/BusinessRules/Exclusions/Processors/ExclusionsProcessor/ExclusionsProcessor.js","_components/_admin/BusinessRules/Exclusions/Items/ItemsExclusionAdd/ItemsExclusionAdd.js","_components/_admin/BusinessRules/Exclusions/Items/ItemsExclusions/ItemsExclusions.js","_components/_admin/BusinessRules/Exclusions/AllExclusionsView/AllExclusionsView.js","_components/_admin/BusinessRules/BusinessRuleDetails/BusinessRuleDetails.js","_reducers/actions.js","_services/lifecycleManaged.services.js","_helpers/StatusHelper.js","_components/_admin/Lifecycles/LifecycleManagedActions/LifecycleManagedActions.js","_components/_admin/Lifecycles/LifecycleInfo/LifecycleInfo.js","_components/_admin/Lifecycles/LifecycleAdd/LifecycleAdd.js","_components/_admin/Lifecycles/Lifecycles/Lifecycles.js","_components/_admin/Lifecycles/LifecycleTransitions/LifecycleTransitions.js","_components/_admin/Lifecycles/LifecycleDetails/LifecycleDetails.js","_services/identifications.service.js","_services/type.services.js","_components/_admin/IdentificationsInfo/AddIdentification.js","_components/_admin/IdentificationsInfo/IdentificationsInfo.js","_services/entemplates.services.js","_components/_admin/EmailTemplates/EmailTemplateDetails/EmailTemplateDetails.js","_components/_admin/EmailTemplates/EmailTemplatesAdd/EmailTemplatesAdd.js","_components/_admin/EmailTemplates/EmailTemplates/EmailTemplates.js","_components/_admin/Types/TypeAdd/TypeAdd.js","_components/_admin/Types/TypeSetLifecycle/TypeSetLifecycle.js","_components/_admin/Types/TypeUpdateBaseClass/TypeUpdateBaseClass.js","_components/_admin/Types/TypeDetails/TypeDetailsBusinessRules.js","_components/_admin/Types/TypeDetails/TypeDetails.js","_components/_admin/Types/Types/Types.js","_components/_admin/Types/TypeInfo/TypeInfo.js","_components/_admin/Types/TypeSelectionList/TypeSelectionList.js","_services/folder.template.services.js","_components/_admin/FolderTemplates/FolderTemplateDetails/FolderTemplateDetails.js","_components/_admin/FolderTemplates/FolderTemplates/FolderTemplates.js","_components/_admin/TeamTemplates/TeamTemplates/TeamTemplates.js","_services/team.templates.services.js","_components/_admin/TeamTemplates/TeamTemplateDetails/TeamTemplateDetails.js","_services/batch.services.js","_components/_admin/Dataloader/DataImport/DataImport.js","_components/_admin/Dataloader/DataExport/DataExport.js","_components/_admin/Dataloader/DataLoaderHistory/DataLoaderHistory.js","_components/_admin/Dataloader/DataLoaderHistoryDetails/DataLoaderHistoryDetails.js","_services/installation.services.js","_components/_admin/AppVersions/AppVersions/AppVersions.js","_components/_admin/AppVersions/AppVersion/AppVersion.js","_components/_admin/Container/ContainerCreate/ContainerCreate.js","_components/_admin/Container/ContainerInfo/ContainerInfo.js","_components/_admin/Container/ContainerSettings/ContainerSettings.js","_components/_admin/Container/ContainerDeletion/ContainerDeletion.js","_components/_admin/Container/ContainerOwner/ContainerOwner.js","_components/_admin/Container/ContainersOfCurrent/ContainersOfCurrent.js","_components/_admin/Container/ContainerDetails/ContainerDetails.js","_components/_admin/Container/ContainerSwitcher/ContainerSwitcher.js","_services/DataExport.services.js","_components/_admin/DataExport/DataExportAdd/DataExportAdd.js","_components/_admin/DataExport/DataExportInstanceList/DataExportInstanceList.js","_components/_admin/DataExport/DataExportDetails/DataExportDetails.js","_components/_admin/DataExport/DataExportList/DataExportList.js","_services/CronTask.services.js","_components/_admin/CronTask/CronTaskAdd/CronTaskAdd.js","_components/_admin/CronTask/CronTaskInstanceList/CronTaskInstanceList.js","_components/_admin/CronTask/CronTaskDetails/CronTaskDetails.js","_components/_admin/CronTask/CronTaskList/CronTaskList.js","_services/errorCode.services.js","_components/_admin/ErrorCode/ErrorCodeList/ErrorCodeList.js","pages/AdminPages/GenericManagementPage/PlatformContextMenu.js","pages/AdminPages/GenericManagementPage/PrimaryContextMenu.js","_services/_generated/Credit.services.js","_generated/Credit/CreditAdd/CreditAdd.js","_components/_common/LifecycleAndTypeStatus/LifecycleAndTypeStatus.js","_components/_admin/Lifecycles/LifecycleManagedHistory/LifecycleManagedHistory.js","_generated/Credit/CreditDetails/CreditDetails.js","_generated/Credit/CreditList/CreditList.js","_services/_generated/Demande.services.js","_generated/Demande/DemandeAdd/DemandeAdd.js","_generated/Demande/DemandeDetails/DemandeDetails.js","_generated/Demande/DemandeList/DemandeList.js","_services/_generated/Replay.services.js","_generated/Replay/ReplayAdd/ReplayAdd.js","_generated/Replay/ReplayDetails/ReplayDetails.js","_generated/Replay/ReplayList/ReplayList.js","_services/_generated/Webinar.services.js","_generated/Webinar/WebinarAdd/WebinarAdd.js","_generated/Webinar/WebinarDetails/WebinarDetails.js","_generated/Webinar/WebinarList/WebinarList.js","_services/_generated/ExpertCategory.services.js","_generated/ExpertCategory/ExpertCategoryAdd/ExpertCategoryAdd.js","_generated/ExpertCategory/ExpertCategoryDetails/ExpertCategoryDetails.js","_generated/ExpertCategory/ExpertCategoryList/ExpertCategoryList.js","_services/_generated/AgentFacilitateurCategory.services.js","_generated/AgentFacilitateurCategory/AgentFacilitateurCategoryAdd/AgentFacilitateurCategoryAdd.js","_generated/AgentFacilitateurCategory/AgentFacilitateurCategoryDetails/AgentFacilitateurCategoryDetails.js","_generated/AgentFacilitateurCategory/AgentFacilitateurCategoryList/AgentFacilitateurCategoryList.js","_services/_generated/AmbassadeurCategory.services.js","_generated/AmbassadeurCategory/AmbassadeurCategoryAdd/AmbassadeurCategoryAdd.js","_generated/AmbassadeurCategory/AmbassadeurCategoryDetails/AmbassadeurCategoryDetails.js","_generated/AmbassadeurCategory/AmbassadeurCategoryList/AmbassadeurCategoryList.js","pages/AdminPages/GenericManagementPage/GenericManagementPage.js"],"names":["businessRulesService","getAllBusinessEvent","getApplicableRules","getById","activate","desactivate","deleteRule","setOrder","getAllBusinessClass","getAllBusinessTypes","businessRuleClasses","getAllBusinessRules","createBusinessRule","selectableRootTypes","selectableEntities","eventsOf","applicableRulesOnBusinessClass","allTypesOfBusinessClass","businessClass","containerId","uri","url","API_ROOT","_doGet","type","form","_doPost","JSON","stringify","page","pageSize","searchTermFilterForIdentifier","businessRuleId","_doDelete","formData","typeId","undefined","eventKey","p","buildURLQuery","concat","BusinessClassAndTypeSelect","props","state","businessClasses","businessTypes","searchBusinessRulesRX","businessType","onBusinessSubtypeChange","bind","onBusinessClassChange","value","this","updateFunction","updateSearchCriterias","setState","event","target","then","json","data","defaultSelection","businessClassOptions","map","item","push","attributes","id","displayName","Input","name","onChange","subtypesOptions","defaultBusinessType","e","response","defaultBusinessClass","businessTypesSelect","businessClassesSelect","display","displayFunction","Fragment","Component","defaultProps","connect","store","searchBusinessRules","disptach","actions","UpdateOrder","modal","oldOrder","order","formError","toggle","doUpdate","handleFormChange","updateSuccess","formadata","parse","prevState","onUpdateSuccess","Button","className","onClick","Modal","show","size","centered","Header","Body","Label","Form","InputGroup","placeholder","autoComplete","Footer","color","React","businessRuleExclusionService","createEntity","listEntity","deleteEntity","entityId","AddEffectivity","errors","create","attributesList","onSuccess","saveButtonTitle","onSubmit","dataField","placeHolder","required","loading","length","error","attributesListConfig","standardFooterActions","formMode","Effectivities","onCreateSuccess","tableActions","remove","wizardCloseFunction","loadDatas","datas","v","width","tableConfig","columnsConfig","dateFormat","headerClass","displayComponent","i","items","pagination","displayTotalElements","paginate","content","table","buttonTitle","buttonIcon","hideFooter","dialogSize","dialogTitle","dialogContentProvider","wizardContent","BusinessRuleAdd","phase","vetoable","displaySelectFunction","handleChange","rule","baseRule","identifier","description","onCreateSucess","toast","success","mandatorySubType","Check","style","checked","label","formId","getBusinessTypeAndClassSelect","evenement","lifecyclePhase","BusinessRuleClasses","metaData","goToPage","catch","console","newBusinessRuleWizardContent","padding","beanName","action","hover","tableClassName","BusinessRulesAll","processing","selectedRuleId","disactivateRule","activateRule","switchToView","refreshView","displayListView","getRootObjectForDetailsId","deleteRow","update","viewMode","componentDidMount","preventDefault","curformqueryFilters","queryFilters","prevProps","snapshot","searchTerm","rules","coreUri","backOfficeViewURL","history","selectRule","split","pop","vetoableIcon","inherited","commons","getWorkingContainerName","userContext","container","ButtonGroup","active","onConfirm","dialogMessage","row","ok","datatable","icon","goDetails","hideMainMessage","secondaryMessage","queryString","location","search","rootId","refreshListView","pushBreadCrumb","popBreadCrumb","buildResultDatatable","transactionPhase","margin","BusinessRulesFilter","loadingRules","rulesDatatable","typesOptions","types","key","SelectStyle","onTypeChange","onSelectableEntitiesChange","tables","groupedRules","reduce","r","a","Object","keys","k","paddingTop","allowMultipleExpanded","allowZeroExpanded","toolbar","RootStyle","selectableEntitiesSelect","businessTypeSelect","marginTop","marginLeft","BusinessRules","includeParentRules","hasRoleSuperAdmin","updateBusinessTypeFunction","businessEventChange","doSearch","currentFormQueryFilters","prevformqueryFilters","params","vet","Row","Group","as","Col","backOfficeUrl","d1","actionsRight","ButtonToolbar","includeParentsItem","includeParentsItemCheck","autocomplete","isSearching","UserExclusionAdd","isRequestError","toastError","UserExclusions","ExclusionProcessorAdd","ExclusionsProcessor","ItemsExclusionAdd","ItemsExclusions","AllExclusionsView","BusinessRuleDetails","deactivate","showView","view","reloadListView","loadData","hidden","prevtstate","prevQueryUrlParams","updateBread","title","updateApplicationConfigRX","workingContainer","d","toJSONObject","displayHeader","addHeaderMargin","headerActions","applicationConfig","payload","lifecycleManagedService","statesByAction","allStates","fireStateMailing","lifecycleName","lifecycleHistory","lifecycleManagedId","fromState","actionName","StatusHelper","getDisplay","getDisplayForStatus","getAction","uiDisplay","status","statusWithoutBlank","replace","toLowerCase","toUpperCase","LifecycleManagedActions","reachableStates","loadReachableState","confirmModalSetState","onCommentChange","nextProps","prevstate","currentState","byActionName","realState","startsWith","slice","endsWith","trim","comment","rows","maxLength","inlineButtons","modalSize","dialogContent","confirmDialogContent","buttonSize","lifecycleAction","buttonClassName","buttonColor","doSetState","bodyClassName","toggleModal","loaded","lifecycleService","setStateWithComment","refreshCallBack","lifecycleBySetStateActions","suite","DropdownButton","variant","lifecycleManagedActions","LifecycleInfo","join","lifecycle","lifecycleMasterId","lifecycleMasterFullId","lifecycleFullId","link","pathname","href","config","staticValue","AttributeListGroup","orientation","cardClassName","LifecycleAdd","createLifecycle","formData2","FormData","append","masterFile","pattern","Lifecycles","moreActions","val","setObsolete","moreActions2","selectLifecycle","editAction","workInfo","lockedSince","edit","linkTo","lifecycleNavCriterias","rowPerPage","updateLifecyclesCriteriasRX","lifecycleId","workableService","workingCopy","wcId","detailsViewUriProvider","archive","itemId","setNavCriteriasPage","contentHolderService","downloadPrimaryContent","blob","Blob","blobUrl","URL","createObjectURL","window","open","currentViewMode","containerService","getAllLifecycles","prevprops","commonHeader","defaultSortOrder","headerClassName","defaultValue","updateLifecyclesCriterias","LifecycleTransitions","lifecycleTransitions","transitions","transition","getToStates","toState","result","text","getTransitions","LifecycleDetails","detailsMode","xml","doRefreshListView","updateMasterDatas","renderItemActions","saveEditorContent","setXMLContent","setLoading","onAllIterationsSelected","onDetailsSelected","switchOriginFromToWorkingCopy","subviewMode","responseJson","masterAttributes","updateBreadCrumb","details","iterationId","updateMasterAttributes","RevControlledDetailsHeader","lifecycleCurrentState","businessTypeDisplayName","versionInfo","iterationInfo","headerActionsProvider","currentItemIdParam","showXML","showDetails","revControlledId","workableId","originalItemId","lifecycleStatusAttributesList","readOnly","canUpload","isWorkingCopy","canEdit","displayActions","rawcontent","contentHolderId","file","setPrimaryContentFile","contentXml","onValueChange","highlight","code","languages","markup","fontFamily","fontSize","renderAttributes","expanded","getTransitionsContent","masterAttributes_name","getXmlContent","getDetailsContent","renderItemSummary","identificationsService","getIdentifications","createIdentification","identified","typeService","getByPath","getSubtypeOf","getLifecycleOf","getSubtypeOfRecursive","getTypeOf","getLinkConstraintsOf","createType","setLifecycle","updateBaseClass","typePath","path","includeParentItems","fetchInParent","recursive","linkTypeId","forRoleALogicalPath","AddIdentification","useState","setFormData","setBusinessType","setTypes","setErrors","useEffect","rootType","firstElement","typeDatas","identifiedId","message","errorFamily","toastSuccess","typeSelectionChange","options","logicalPath","Control","typesSelect","formValidity","identification","newErrors","findFormErrors","invalidFeedBack","IdentificationsInfo","identifications","master","marginBottom","getCreatePage","disabled","enTemplateService","deleteTemplate","updateTemplate","seartTemplateByNameLike","listAllInContainer","formdata","_doPut","EmailTemplateDetails","editorMode","messageTitle","emailTemplateId","match","showSource","showHtml","onEditorStateChange","draftToHtml","convertToRaw","editorState","getCurrentContent","contentType","res","loadItem","subview","goBack","templateId","reader","FileReader","addEventListener","srcElement","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","EditorState","createWithContent","readAsText","getRestErrorMessage","chActions","rawDownload","switchToSubView","source","onMessageTitleChange","localization","locale","wrapperClassName","editorClassName","summaryAttributesList","userView","adminView","EmailTemplatesAdd","EmailTemplates","selectTemplate","viewPrimaryContent","updateEmailTemplatesNavCriteriasRX","emailTemplatesNavCriterias","getAllEmailTemplates","tabName","getValueFromUrl","rootObjectForDetailsId","onRowClick","searchTermUpdated","updateEmailTemplatesNavCriterias","TypeAdd","parentTypeId","parentTypeName","TypeSetLifecycle","TypeUpdateBaseClass","baseClass","TypeDetailsBusinessRules","vetoableBusinessRulesItems","grouped","vetoableTableConfig","tableCell","TypeDetails","activeTab","tabContent","vetoableBusinessRulesItemsMetaData","afterCommitSuccessBusinessRulesItems","afterCommitSuccessBusinessRulesItemsMetaData","afterCommitErrorBusinessRulesItems","afterCommitErrorBusinessRulesItemsMetaData","onCreateTypeSuccess","newContainerWizardContent","changeLifecycleWizardContent","onChangeFile","onsetLifecyleSuccess","updateBaseClassWizardContent","getFormQuery","lifecycleIterationId","loadVetoableBusinessRule","isRootType","downloadPrimaryContentBlob","FileSaver","saveAs","files","attributesGroup","Types","firstRender","selectedItemLink","dataRefreshed","getRootTypes","needRefreshTree","setTimeout","leftContent","rootItems","selectItem","rightContent","firstItem","ReactTree","onLoadData","treeNode","renderIcon","Promise","resolve","treeData","nodeKey","getChildrenTreeData","onSelect","info","currentNodeKey","defaultExpandedKeys","expandedKeys","defaultSelectedKeys","defaultCheckedKeys","refreshCurrentNode","curNodeKey","children","isLeaf","businessIcon","loop","newChildren","treedata","generateRootTreeData","ref","setTreeRef","showLine","defaultExpandParent","checkStrictly","showIcon","onCheck","eventkey","TypeInfo","folderTemplateService","FolderTemplateDetails","mode","getTemplateId","xs","sm","md","FolderTemplates","getAllFolderTemplates","selectedTemplate","enIcon","LinkTo","emptyMessage","TeamTemplates","getAllTeamTemplates","hideTableHeader","teamTemplateService","TeamTemplateDetails","batchService","getJobTypes","batchLoad","batchExport","jobCommands","getAllJobs","cancel","downloadMasterFile","downloadLogFile","importableTypes","jobId","_doGetText","job","forMapping","_doPostMp","DataImport","doBatchImport","masterFileUpdate","reinitParams","loadFileContent","selectChange","fileContent","importType","getWorkingContainerPath","fileName","fileInput","textFromFileLoaded","fileLoadedEvent","fileReader","onload","importableType","desc","marginRight","accept","importableTypesSelect","mainMessage","getExportByType","ExportCategory","ExportCatalog","ExportClientPrice","ExportProducts","ExportClientProfile","ExportProductsDesc","ExportProductsIllustration","ExportProductsTVA","command","DataLoaderHistory","selectHistory","jobType","query","sort","moment","format","cancelJob","itemActions","totalElements","DataLoaderHistoryDetails","wc","historyId","updateDatas","showMasterFile","showLogFile","installationService","getHistories","isDatapatchInstalledInContainer","moduleName","containerPath","AppVersions","to","selectId","selectedVersionId","updatable","AppVersion","versionHistoryId","ContainerCreate","createContainer","parentContainerId","currentContainerId","ownerId","getCurrentUserAccountOwnerId","ownerEmail","onCreateContainerSuccess","ContainerInfo","ContainerSettings","results","createForm","editingRow","canSynchronizeWithSellsy","updateEditedSetting","cancelEditedSetting","setEditingRow","formDataChange","updateContainerSetting","reloadAllContainerSettings","nameValue","settingsValue","rowAction","containerSettingsRX","systemSettings","systemSetting","displayGroup","settingsType","userSettings","settingsDatatable","containerSettings","settings","ContainerDeletion","ContainerOwner","accountService","accountOfParty","containerOwnerId","account","login","nickName","ContainersOfCurrent","currentContainerName","switchToParent","switchTo","emptyTableActions","getChildrenContainers","currentNavigatingContainer","switchUserContext","loginService","postLogin","sessionId","katappult_core_loginSuccess","updateUserContextRX","parentContainerPath","parentContainerName","getParentContainer","parentId","currentContainerPath","getContainersOfOwner","toChild","emptyMessageTitle","nameOf","bordered","striped","selectedContainerId","tableContent","updateUserContext","ContainerDetails","tab","tabItems","overviewTabContent","visible","accountSystemPrefsContent","paths","loadContainerDetails","thumbed","resize","thumbedId","leftPane","renderLeftPane","navTabItems","navTabContents","ritm","tabsConfigs","tabItem","Nav","Item","Link","classnames","toString","TabPane","tabId","TabContent","ContainerSwitcher","switchToRoot","rootContainerId","applicationContainer","loadChildrenContainer","getRootContainerId","currentContainer","switchToLink","manageLink","isRootContainer","manageApplication","with","ldsgrid","DataExportService","updateEntity","detailsEntity","searchEntity","getAllConfigs","runExport","listInstances","stopExport","dropExport","downloadExport","getByInternalName","_doPostWithoutResponse","instanceId","DataExportAdd","configs","emails","emailConfigs","internalName","enumProvider","exportConfigs","DataExportInstanceList","download","stop","refresh","refreshList","dataExportId","drop","user","tableActions2","DataExportDetails","DataExportList","displayDetails","delete","hash","substr","includes","launching","launchSync","dataExportConfig","forMappingFile","execution","objectforDetailsId","CronTaskService","stopTask","taskBeans","dropInstance","CronTaskAdd","beanSprings","beans","bean","CronTaskInstanceList","taskId","dropTask","CronTaskDetails","CronTaskList","log","errorCodeService","ErrorCodeList","PlatformContextMenu","viewName","menuContent","c","listGroupsItems","ListGroup","setDisplayedView","menuGroup","dividerAfter","lassName","PrimaryContextMenu","sidebarOpen","onSetSidebarOpen","sidebarContent","menu","rootClassName","sidebarClassName","overlayClassName","sidebar","onSetOpen","docked","CreditService","updateEntityMaster","CreditAdd","dateExpiration","consumed","quantity","LifecycleAndTypeStatus","lifecycleInfo","typeDisplay","TypeStyle","float","justifyContent","background","maxHeight","borderRadius","LifecycleManagedHistory","setItems","lmManagedId","createDate","cardTitle","cardSubtitle","date","creator","promoter","ownerSummary","toStatus","cardDetailedText","getItem","enableOutline","CreditDetails","setItem","LifecycleStyle","Tabs","defaultActiveKey","Tab","paddingBottom","CreditList","setDatas","setPage","setSubviewMode","setMetaData","setSearchTerm","exportConfig","index","statusFromUrl","deleteRowAction","buttonIconComp","forwardToDetailsUrl","itemsDatatableRowItemName","substring","typeOf","DemandeService","DemandeAdd","theme","DemandeDetails","ContentHolderPrimaryInfo","DemandeList","ReplayService","ReplayAdd","mediaType","externalLink","webinarSource","ReplayDetails","ReplayList","WebinarService","WebinarAdd","category","dateDePlanification","WebinarDetails","WebinarList","ExpertCategoryService","ExpertCategoryAdd","nom","ExpertCategoryDetails","ExpertCategoryList","AgentFacilitateurCategoryService","AgentFacilitateurCategoryAdd","AgentFacilitateurCategoryDetails","AgentFacilitateurCategoryList","AmbassadeurCategoryService","AmbassadeurCategoryAdd","AmbassadeurCategoryDetails","AmbassadeurCategoryList","GenericManagementPage","popView","selectHomePage","popBreadCrumbAt","breadItems","getViewContentToDisplay","stopPropagation","indexOf","comp","strechedPage","adminPageUrl","getSuperAdministratorMenu","entry","menuConfig","allMenuContent","getAllMenuItems","businessRules","lifecycles","errorCodes","mailTemplates","switchContainer","members","importDatas","export","cron","about","credit","demande","replay","webinar","expertcategory","agentfacilitateurcategory","ambassadeurcategory","queryUrlParams","eachMenuItem","containerName","contentClassName","hideVerticalMenu","goBackToListView","homeUrlAction","arg","homeLabel","setManagementPageSelectedTab","managementPageSelectedTab","navigationConfig"],"mappings":"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","file":"static/js/13.00c131a9.chunk.js","sourcesContent":["import { _doGet, _doPost, _doDelete, buildURLQuery, API_ROOT } from './utils/services.config';\n/**\n * Default Export\n */\nexport const businessRulesService = {\n    getAllBusinessEvent,\n    getApplicableRules,\n    getById,\n    activate,\n    desactivate,\n    deleteRule,\n    setOrder,\n    getAllBusinessClass,\n    getAllBusinessTypes,\n\tbusinessRuleClasses,\n\tgetAllBusinessRules,\n\tcreateBusinessRule,\n\tselectableRootTypes,\n\tselectableEntities,\n\teventsOf,\n\tapplicableRulesOnBusinessClass,\n\tallTypesOfBusinessClass\n}\n\n\nasync function allTypesOfBusinessClass(businessClass, containerId){\n\tconst uri = '/api/secured/v1/katappult/businessRules/allTypesOfBusinessClass?containerId=' + containerId + '&businessClass=' + businessClass;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\n\nasync function eventsOf(businessClass, containerId){\n\tconst uri = '/api/secured/v1/katappult/businessRules/eventsOf?containerId=' + containerId + '&businessClass=' + businessClass;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\n\nasync function applicableRulesOnBusinessClass(businessClass, type, containerId){\n\tconst uri = '/api/secured/v1/katappult/businessRules/businessClass/applicableRules?containerId=' + containerId + '&businessClass=' + businessClass + '&type=' + type;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\n\nasync function selectableEntities(containerId){\n\tconst uri = '/api/secured/v1/katappult/businessRules/selectableEntities?containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\n\nasync function createBusinessRule(form, containerId){\n\tconst uri = '/api/secured/v1/katappult/businessRules?containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doPost(url, JSON.stringify(form));\n}\nasync function getAllBusinessRules(page, pageSize, containerId, searchTermFilterForIdentifier){\n\tconst uri = '/api/secured/v1/katappult/businessRules/list?containerId=' + containerId + '&page=' + page + '&pageSize=' + pageSize + '&searchTermFilterForIdentifier=' + searchTermFilterForIdentifier;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\n\nasync function businessRuleClasses(page, pageSize, containerId){\n\tconst uri = '/api/secured/v1/katappult/businessRules/businessRuleClasses?containerId=' + containerId + '&page=' + page + '&pageSize=' + pageSize;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\n\nasync function deleteRule(businessRuleId, containerId){\n\tconst uri = '/api/secured/v1/katappult/businessRules/delete?containerId=' + containerId + '&businessRuleId=' + businessRuleId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doDelete(url);\n}\nasync function setOrder(businessRuleId, formData, containerId){\n\tconst uri = '/api/secured/v1/katappult/businessRules/setOrder?containerId=' + containerId + '&businessRuleId=' + businessRuleId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doPost(url, JSON.stringify(formData));\n}\nasync function activate(businessRuleId, containerId){\n\tconst uri = '/api/secured/v1/katappult/businessRules/activate?containerId=' + containerId + '&businessRuleId=' + businessRuleId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doPost(url);\n}\nasync function desactivate(businessRuleId, containerId){\n\tconst uri = '/api/secured/v1/katappult/businessRules/desactivate?containerId=' + containerId + '&businessRuleId=' + businessRuleId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doPost(url);\n}\n/**\n * Get all business events in application\n */\nasync function getById(businessRuleId, containerId){\n\tconst uri = '/api/secured/v1/katappult/businessRules/byId?containerId=' + containerId + '&businessRuleId=' + businessRuleId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n/**\n * @returns\n */\nasync function getAllBusinessEvent(containerId){\n\tconst uri = '/api/secured/v1/katappult/businessRules/businessEvents?containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n/**\n * @returns\n */\nasync function getAllBusinessClass(containerId){\n\tconst uri = '/api/secured/v1/katappult/businessRules/businessRuleClasses?containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function selectableRootTypes(containerId){\n\tconst uri = '/api/secured/v1/katappult/businessRules/selectableRootTypes?containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\n\nasync function getAllBusinessTypes(typeId, containerId){\n\tconst uri = \"/api/secured/v1/katappult/businessRules/businessTypes?&typeId=\" + typeId + '&containerId=' + containerId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n/**\n * Get applicable rule.\n *\n * @param formData\n * @returns\n */\nasync function getApplicableRules(formData, containerId){\n\tif(formData.eventKey === undefined) formData.eventKey = ''\n\n\tlet p = buildURLQuery(formData);\n\tconst uri = \"/api/secured/v1/katappult/businessRules/applicableRules?\".concat(p).concat('&containerId=' + containerId);\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n","import React, { Component } from 'react';\nimport {Input,} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { businessRulesService } from '_services/business.rule.services';\nimport * as actions from \"_actions/actions\";\nimport {connect} from \"react-redux\";\n\nconst propTypes = {\n  displayFunction: PropTypes.func,\n}\n\nconst defaultProps = {};\n\nconst mapStateToProps = store => ({\n    searchBusinessRulesRX : store.searchBusinessRules,\n    /*businessType: store.searchBusinessRules.businessType,\n    businessClass: store.searchBusinessRules.businessClass,\n    vetoable: store.searchBusinessRules.vetoable,\n    eventKey: store.searchBusinessRules.eventKey,\n    phase: store.searchBusinessRules.phase,\n    rules: store.searchBusinessRules.rules,\n    includeParentRules: store.searchBusinessRules.includeParentRules,*/\n})\n\nconst mapDispatchToProps = (disptach) => ({\n    updateSearchCriterias: (e) => disptach(actions.updateBusinessRulesSearchCriterias(e)),\n})\n\n/**\n * Displays two select:\n * 1. One to select business classes\n * 2. One to select business type\n *\n * Both items are linked and auto update\n *\n */\nclass BusinessClassAndTypeSelect extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            businessClasses: [],\n            businessTypes: [],\n            businessClass: this.props.searchBusinessRulesRX.businessClass ? this.props.searchBusinessRulesRX.businessClass : '',\n            businessType: this.props.searchBusinessRulesRX.businessType ? this.props.searchBusinessRulesRX.businessType : ''\n        }\n\n        this.onBusinessSubtypeChange = this.onBusinessSubtypeChange.bind(this)\n        this.onBusinessClassChange = this.onBusinessClassChange.bind(this)\n    }\n\n    onBusinessSubtypeChange(value){\n    \tif(this.props.updateFunction) {\n    \t\tthis.props.updateFunction(this.state.businessClass, value)\n    \t}\n\n        const searchBusinessRulesRX = {...this.props.searchBusinessRulesRX}\n        searchBusinessRulesRX.businessType = value\n        this.props.updateSearchCriterias(searchBusinessRulesRX)\n\n    \tthis.setState({businessType: value})\n    }\n\n    onBusinessClassChange(event) {\n    \tlet value = event.target.value;\n        if(this.props.updateFunction) this.props.updateFunction(value, null)\n\n        const searchBusinessRulesRX = {...this.props.searchBusinessRulesRX}\n        searchBusinessRulesRX.businessClass = value\n        this.props.updateSearchCriterias(searchBusinessRulesRX)\n\n        businessRulesService.getAllBusinessTypes(value, this.props.containerId).then(json => {\n            this.setState({\n                businessTypes: json.data,\n                businessType: '',\n                businessClass: value\n            })\n        })\n    }\n\n    /**\n     * Generates a select box with list of business classes.\n     */\n    businessClassesSelect(){\n        let defaultSelection = this.props.searchBusinessRulesRX.businessClass,\n        \tbusinessClassOptions = [];\n\n        this.state.businessClasses.map(item => {\n            businessClassOptions.push(<option value={item.attributes.id}>{item.attributes.displayName}</option>);\n        });\n\n        let selectBusinessClass = (\n            <Input value={defaultSelection} type=\"select\" name=\"business-class\"\n            \tid=\"business-class\"\n            \tonChange={this.onBusinessClassChange.bind(this)}>\n                <option value=\"\">Selectionnez une entité...</option>\n                {businessClassOptions}\n            </Input>\n        )\n\n        return selectBusinessClass;\n    }\n    /**\n     * When user selects a business class, fetch subtypes of that class and\n     * display it into a select box.\n     */\n    businessTypesSelect(){\n        let subtypesOptions = [];\n        subtypesOptions.push(<option value=''>Selectionnez un type métier...</option>);\n\n        if(this.state.businessTypes){\n\t        this.state.businessTypes.map(item => {\n                subtypesOptions.push(<option value={item.attributes.id}>{item.attributes.displayName}</option>);\n\t        });\n        }\n\n        let selectBusinessType = (\n            <Input value={this.props.defaultBusinessType}\n                   type=\"select\" name=\"business-type\" id=\"business-type\"\n                   onChange={(e) => this.onBusinessSubtypeChange(e.target.value)}>\n                {subtypesOptions}\n            </Input>\n        )\n\n        return selectBusinessType;\n    }\n\n    componentDidMount(){\n    \tbusinessRulesService.selectableRootTypes(this.props.containerId).then(response => {\n    \t\tthis.setState({businessClasses: response.data})\n    \t})\n\n        // reload list of subtypes if defaultBusinessType is not empty\n        if(this.props.defaultBusinessType){\n            businessRulesService.getAllBusinessTypes(this.props.defaultBusinessClass, this.props.containerId).then(json => {\n                this.setState({\n                    businessTypes: json.data,\n                })\n            })\n        }\n    }\n\n    render() {\n        const businessTypesSelect= this.businessTypesSelect();\n        let businessClassesSelect = this.businessClassesSelect();\n        const display = this.props.displayFunction(businessClassesSelect, businessTypesSelect);\n        return (\n            <React.Fragment>{display}</React.Fragment>\n        )\n    }\n}\n\nBusinessClassAndTypeSelect.propTypes = propTypes;\nBusinessClassAndTypeSelect.defaultProps = defaultProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps) (BusinessClassAndTypeSelect);\n","import React, { Component } from 'react';\nimport { Input} from 'reactstrap';\nimport { businessRulesService } from '_services/business.rule.services';\n\n/**\n * Business event select input\n */\nclass BusinessEventSelectInput extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state ={\n            items: '',\n        }\n\n        this.onChange = this.onChange.bind(this)\n    }\n\n    componentDidMount(){\n        businessRulesService.getAllBusinessEvent(this.props.containerId).then(json => {\n            return json;\n        })\n        .then(json => {\n        \tthis.setState({\n                items: JSON.stringify(json.metaData),\n            })\n        })\n        .catch(error => {\n        \tconsole.error(error);\n        });\n    }\n\n    onChange(e){\n    \tif(this.props.businessEventChangeFunction){\n    \t\tthis.props.businessEventChangeFunction(e)\n    \t}\n    }\n\n    render() {\n        const options = [];\n        if(this.state.items){\n            const items = JSON.parse(this.state.items);\n            items.event.map(i => {\n                options.push(<option value={i}>{i}</option>)\n            });\n        }\n\n        return (\n            <React.Fragment>\n                <Input className=\"admin-filters-search-input\"\n                \tvalue={this.props.defaultValue} type=\"select\"\n                \tname=\"select\" id=\"select\" onChange={this.onChange}>\n                    <option value=\"\">Tous les événements</option>\n                    {options}\n                </Input>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default BusinessEventSelectInput;\n","/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\nimport React from 'react';\nimport { Button,\n\tLabel,\n\tForm,\n\tInput, InputGroup,\n}\nfrom 'reactstrap';\nimport { businessRulesService } from '_services/business.rule.services';\nimport Modal from 'react-bootstrap/Modal'\n\nclass UpdateOrder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\t  modal: false,\n\t  businessRuleId: props.businessRuleId,\n\t  formData: {\n\t\t  oldOrder: props.oldOrder,\n\t\t  order: props.oldOrder,\n\t  },\n\t  formError: ''\n    };\n\n\tthis.toggle = this.toggle.bind(this);\n\tthis.doUpdate = this.doUpdate.bind(this);\n\tthis.handleFormChange = this.handleFormChange.bind(this)\n\tthis.updateSuccess = this.updateSuccess.bind(this)\n  }\n\n  handleFormChange(event) {\n\tlet formadata = JSON.parse(JSON.stringify(this.state.formData));\n\tformadata[event.target.name] = event.target.value\n\tthis.setState({\n\t\tformData: formadata,\n\t})\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  doUpdate(e) {\n  \tlet form = {};\n  \tform.order = this.state.formData.order;\n\n\tbusinessRulesService.setOrder(this.state.businessRuleId, form, this.props.containerId).then(response => {\n\t\tthis.updateSuccess();\n\t})\n  }\n\n  updateSuccess(){\n\tthis.toggle()\n\tif(this.props.onUpdateSuccess){\n\t\tthis.props.onUpdateSuccess(true);\n\t}\n  }\n\n  render() {\n    return (\n      <div>\n        <Button className=\"ml-2 mr-2 action-button\" onClick={this.toggle}><i className=\"fa fa-pencil fa-sm\"></i>&nbsp;ORDRE</Button>\n          <Modal show={this.state.modal}\n\t\t\t\t size={\"md\"}\n\t\t\t\t toggle={this.toggle} centered>\n         \t <Modal.Header toggle={this.toggle}>MODIFIER L'ORDRE</Modal.Header>\n         \t <div className=\"border-bottom\"/>\n\n          <Modal.Body>\n\t\t\t\t<Label className=\"form-error\">{this.state.formError}</Label>\n\t\t\t\t<Form>\n\t\t\t\t  <InputGroup>\n\t\t\t\t\t<Input type=\"number\" name=\"order\" placeholder=\"Order\" value={this.state.formData.order}\n\t\t\t\t\t\tautoComplete=\"new-order\" onChange={(e) => this.handleFormChange(e)}/>\n\t\t\t\t  </InputGroup>\n\t\t\t\t</Form>\n\t      </Modal.Body>\n\n\t      <div className=\"border-bottom\"/>\n          <Modal.Footer>\n            \t<Button color=\"primary\" onClick={(e) => this.doUpdate(e)}>MODIFIER</Button>{' '}\n            \t<Button color=\"secondary\" onClick={this.toggle}>ANNULER</Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\n\nexport default UpdateOrder;\n","import { _doPost,_doGet,_doPut, API_ROOT, _doDelete, buildURLQuery } from './utils/services.config';\n\nexport const businessRuleExclusionService = {\n    createEntity,\n    listEntity,\n    deleteEntity,\n}\nasync function createEntity(formData, containerId){\n    const uri = '/api/secured/v1/katappult/businessRuleExclusions/create';\n    let url = `${API_ROOT}` + uri + \"?containerId=\" + containerId\n    return _doPost(url, JSON.stringify(formData))\n}\n\nasync function listEntity(businessRuleId, type, containerId){\n    const uri = \"/api/secured/v1/katappult/businessRuleExclusions/list?businessRuleId=\" + businessRuleId + \"&type=\" +  type + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function deleteEntity(entityId, containerId){\n    const uri = \"/api/secured/v1/katappult/businessRuleExclusions/delete?entityId=\" + entityId + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doDelete(url);\n}\n\n","import React, {Component} from 'react';\nimport {AttributeListGroup, WaitingPane} from \"_components/_common\";\nimport {businessRuleExclusionService} from \"_services/businessRuleExclusion.services\";\n\nclass AddEffectivity extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            formData: {},\n            errors: []\n        }\n\n        this.create = this.create.bind(this)\n        this.attributesList = this.attributesList.bind(this);\n    }\n\n    create(formData) {\n        formData.businessRuleId = this.props.businessRuleId\n        formData.containerId = this.props.containerId\n        formData.type = \"E\"\n        businessRuleExclusionService.createEntity(formData, this.props.containerId).then(response => {\n            this.props.onSuccess()\n        })\n    }\n\n    attributesList() {\n        const attributesList = {\n            saveButtonTitle: 'CRÉER',\n            onSubmit: (formData) => this.create(formData),\n            attributes: [\n                {name: 'Début', dataField: 'from', placeHolder: 'Date de début', type: \"datetime\", required: true},\n                {name: 'Fin', dataField: 'to', placeHolder: 'Date de fin', type: \"datetime\", required: true}\n            ]\n        }\n\n        return attributesList;\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <WaitingPane/>\n        }\n\n        let errors = []\n        if (this.state.errors.length > 0) {\n            this.state.errors.map(error => {\n                errors.push(<p>{error}</p>)\n            })\n        }\n\n        let formData = {...this.state.formData}\n        return (\n            <div className=\"container-create-root\">\n                <div id=\"form-errors-section\" className=\"form-error\">\n                    {errors}\n                </div>\n                <AttributeListGroup\n                    attributesListConfig={this.attributesList()}\n                    data={formData}\n                    standardFooterActions=\"true\"\n                    formMode='create_object'/>\n            </div>\n        )\n    }\n}\n\nexport default AddEffectivity;\n","import React, { Component } from 'react';\nimport {DataTable, Wizard} from \"_components/_common\";\nimport AddEffectivity from \"_components/_admin/BusinessRules/Exclusions/Effectivity/AddEffectivity\";\nimport {businessRuleExclusionService} from \"_services/businessRuleExclusion.services\";\n\nclass Effectivities extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n        }\n\n        this.onCreateSuccess = this.onCreateSuccess.bind(this)\n        this.tableActions = this.tableActions.bind(this)\n        this.remove = this.remove.bind(this)\n    }\n\n    onCreateSuccess(wizardCloseFunction){\n        wizardCloseFunction()\n        this.loadDatas()\n    }\n\n    wizardContent(wizardCloseFunction){\n        return <AddEffectivity\n                    onSuccess={()=>this.onCreateSuccess(wizardCloseFunction)}\n                    {...this.props}/>\n    }\n\n    componentDidMount() {\n        this.loadDatas()\n    }\n\n    loadDatas(){\n        this.setState({loading: true})\n        businessRuleExclusionService.listEntity(this.props.businessRuleId, \"E\", this.props.containerId).then(response => {\n            this.setState({\n                loading: false,\n                datas: response.data\n            })\n        })\n    }\n\n    remove(id){\n        businessRuleExclusionService.deleteEntity(id, this.props.containerId).then(response => {\n            this.loadDatas()\n        })\n    }\n\n    tableActions(v, item){\n        return <td width={'20%'}>\n            <button onClick={() => this.remove(v.id)}><i className={'fa fa-minus fa-md'}></i>&nbsp;Supprimer</button>\n        </td>\n    }\n\n    tableConfig(){\n        const tableConfig = {\n            columnsConfig: [\n                {name:'Debut', dataField: 'attributes.from', dateFormat: 'DD-MM-YYYY hh:mm:ss', headerClass: 'td-left', className: 'td-left'},\n                {name:'Fin', dataField: 'attributes.to', dateFormat: 'DD-MM-YYYY hh:mm:ss', headerClass: 'td-left', className: 'td-left'},\n                {dataField: \"attributes\", displayComponent: (v,i) => this.tableActions(v, i), headerClass: 'td-left', className: 'td-left'},\n            ],\n        }\n        return tableConfig;\n    }\n\n    table(){\n        let tableConfig = this.tableConfig();\n        let datatable = <DataTable items={JSON.stringify(this.state.datas)}\n                                   tableConfig={tableConfig}\n                                   pagination={false}\n                                   displayTotalElements={false}\n                                   paginate={false}/>\n\n        return datatable\n    }\n\n\n    render() {\n        let content;\n        if(this.state.loading) {\n            content = <></>\n        }\n        else {\n            content = this.table();\n        }\n\n        return <div className={'business-rule-exclusion-pane'}>\n            <h4>Effectivité ({this.state.loading ? \"-\" : this.state.datas.length})</h4>\n            <div className={'btn-toolbar btn-toolbar-right'}>\n                <Wizard buttonTitle={'Ajouter'}\n                        buttonIcon={'fa fa-plus fa-md'}\n                        hideFooter={true}\n                        dialogSize=\"md\"\n                        dialogTitle=\"Ajouter une effectivité\"\n                        dialogContentProvider={(wizardCloseFunction)=>this.wizardContent(wizardCloseFunction)}/>\n            </div>\n            <div className={'business-rule-exclusion-pane-content'}>\n                <div className={'business-rule-exclusion-pane-content-list'}>\n                    {content}\n                </div>\n            </div>\n\n        </div>\n    }\n}\n\nexport default Effectivities;","import React, {Component} from 'react';\nimport {AttributeListGroup, WaitingPane} from '_components/_common';\nimport {BusinessClassAndTypeSelect} from \"_components/_admin\";\nimport {toast} from \"react-toastify\";\nimport {businessRulesService} from \"_services/business.rule.services\";\nimport {Form} from \"react-bootstrap\";\nimport {Input} from \"reactstrap\";\n\nclass BusinessRuleAdd extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            formData: {\n                phase: '0',\n                vetoable: true,\n                event: 'PRE_SET_STATE',\n                order: 10\n            },\n            errors: [],\n        }\n\n        this.createBusinessRule = this.createBusinessRule.bind(this)\n        this.displaySelectFunction = this.displaySelectFunction.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.onBusinessClassChange = this.onBusinessClassChange.bind(this)\n    }\n\n    async createBusinessRule(formData) {\n\n        let form = {...this.state.formData}\n        form.containerId = this.props.containerId;\n        form.order = formData.order\n        form.rule = this.props.baseRule.attributes.name\n        form.identifier = formData.identifier\n        form.description = formData.description\n\n        if (form.event && form.businessClass && form.identifier && form.order && form.order > 0 && form.rule) {\n            this.setState({loading: true})\n\n            businessRulesService.createBusinessRule(form, this.props.containerId).then(response => {\n                this.setState({loading: false})\n                this.props.onCreateSucess();\n                toast.success(\"La règle a été créée\")\n            })\n        }\n    }\n\n    getBusinessTypeAndClassSelect() {\n        const comp = <BusinessClassAndTypeSelect\n            {...this.props}\n            displayFunction={this.displaySelectFunction}\n            updateFunction={this.onBusinessClassChange}\n            mandatorySubType={false}/>\n\n        return comp;\n    }\n\n    onBusinessClassChange(businessClass, businessType) {\n        let formData = {...this.state.formData}\n        formData['businessClass'] = businessClass\n        formData['businessType'] = businessType ? businessType : ''\n        this.setState({formData: formData})\n    }\n\n    handleChange(event) {\n        let formData = {...this.state.formData}\n        formData[event.target.name] = event.target.value\n        this.setState({formData: formData})\n    }\n\n    vetoable() {\n        let vetoable;\n        if (this.state.formData.phase === '0') {\n            vetoable = <Form.Check style={{\n                'margin-top': '1.2rem',\n                'margin-bottom': '1.2rem',\n                'margin-left': '-0.5rem'\n            }}\n               id=\"vetoable_check\"\n               name=\"vetoable\"\n               onChange={this.handleChange}\n               value={this.state.formData.vetoable}\n               checked={this.state.formData.vetoable}\n               label=\"Cette règle annule tout le traitement\"\n            />\n        }\n\n        return vetoable;\n    }\n\n    lifecyclePhase() {\n        return (\n            <Input value={this.state.formData.phase} type=\"select\" name=\"phase\" id=\"phase\" onChange={this.handleChange}>\n                <option value=\"0\">Avant commit</option>\n                <option value=\"1\">Après commit</option>\n                <option value=\"2\">Après rollback (erreur de commit)</option>\n            </Input>\n        )\n    }\n\n    evenement() {\n        return (\n            <Input value={this.state.formData.event} type=\"select\" name=\"event\" id=\"event\" onChange={this.handleChange}>\n                <option value=\"PRE_SET_STATE\">PRE_SET_STATE</option>\n                <option value=\"PRE_SET_STATE\">PRE_SET_STATE</option>\n                <option value=\"POST_SET_STATE\">POST_SET_STATE</option>\n            </Input>\n        )\n    }\n\n    attributesList() {\n        const attributesList = {\n            formId: 'dt-form',\n            saveButtonTitle: 'CRÉER',\n            onSubmit: (formData) => this.createBusinessRule(formData),\n            attributes: [\n                {name: 'Ordre', dataField: 'order', required: true, placeHolder: 'ordre', type: 'number'},\n                {name: 'Identification', dataField: 'identifier', required: true, placeHolder: 'Identification'},\n                {name: 'Description', dataField: 'description', required: false, placeHolder: 'Description'}\n            ]\n        }\n\n        return attributesList;\n    }\n\n    displaySelectFunction(businessClass, businessTypes) {\n        return (<>\n                <div>{businessClass}</div>\n                <div>{businessTypes}</div>\n            </>\n        )\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <WaitingPane/>\n        }\n\n        let errors = []\n        if (this.state.errors.length > 0) {\n            this.state.errors.map(error => {\n                errors.push(<p>{error}</p>)\n            })\n        }\n\n        let formData = {...this.state.formData}\n        return (\n            <div className=\"container-create-root\">\n                <div id=\"form-errors-section\" className=\"form-error\">\n                    {errors}\n                </div>\n                <p style={{'margin-bottom': '2rem'}}><strong>Règle de\n                    base</strong> : {this.props.baseRule.attributes.name}\n                </p>\n\n                {this.getBusinessTypeAndClassSelect()}\n                {this.evenement()}\n                {this.lifecyclePhase()}\n                {this.vetoable()}\n\n                <AttributeListGroup\n                    attributesListConfig={this.attributesList()}\n                    data={formData}\n                    standardFooterActions=\"true\"\n                    formMode='create_object'/>\n            </div>\n        )\n    }\n}\n\nexport default BusinessRuleAdd;\n","import React, {Component} from 'react';\nimport {DataTable, WaitingPane} from '_components/_common';\nimport {businessRulesService} from \"_services/business.rule.services\";\nimport {Wizard} from \"_components/_common\";\nimport BusinessRuleAdd from \"_components/_admin/BusinessRules/BusinessRuleAdd\";\n\nclass BusinessRuleClasses extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n            metaData: '',\n            loading: true,\n            pageSize: 12\n        }\n\n        this.goToPage = this.goToPage.bind(this)\n        this.onCreateSuccess = this.onCreateSuccess.bind(this)\n    }\n\n    componentDidMount() {\n        this.loadDatas(0)\n    }\n\n    loadDatas(page) {\n        businessRulesService.businessRuleClasses(page, this.state.pageSize, this.props.containerId)\n            .then(json => {\n                return json;\n            }).then(\n                json => {\n\n                this.setState({\n                    loading: false,\n                    items: json.data,\n                    metaData: json.metaData,\n                    page: page\n                })\n        }).catch(error => {\n            console.error(error);\n            this.setState({loading: false,})\n        });\n    }\n\n    goToPage(page) {\n        this.loadDatas(page)\n    }\n\n    action(v, item) {\n        return <td>\n            <div className={'btn-toolbar'}>\n                <Wizard hideFooter={true}\n                        dialogSize=\"md\"\n                        buttonIcon=\"fa fa-sm fa-plus\"\n                        buttonTitle='Créer une règle à partir de cette classe'\n                        dialogTitle='Ajouter une règle'\n                        dialogContentProvider={(wizardCloseFunction) => this.newBusinessRuleWizardContent(wizardCloseFunction, item)}/>\n            </div>\n        </td>\n    }\n\n    onCreateSuccess(wizardCloseFunction) {\n        wizardCloseFunction()\n    }\n\n    newBusinessRuleWizardContent(wizardCloseFunction, item) {\n        return <BusinessRuleAdd\n            baseRule={item}\n            onCreateSucess={() => this.onCreateSuccess(wizardCloseFunction)} {...this.props}/>\n    }\n\n    name(v, i) {\n        return <>\n            <div className={'table-list-admin-root-list-div'}>\n                <div style={{padding: '0rem 0 0.2rem 0'}}>\n                    <p className={'table-link'}>{v.description}</p>\n                    <div className={'table-list-admin-root-list-desc1'}>{v.beanName}</div>\n                </div>\n            </div>\n        </>\n    }\n\n    render() {\n\n        if (this.state.loading) {\n            return <div className=\"portlet-content\">\n                <WaitingPane/>\n            </div>\n        }\n\n        let items = this.state.items;\n        const metaData = this.state.metaData;\n        const tableConfig = {\n            columnsConfig: [\n                {name: 'Nom', dataField: 'attributes', displayComponent: (v, i) => this.name(v, i)},\n                {dataField: 'attributes', displayComponent: (v, i) => this.action(v, i)}\n            ],\n        }\n\n        return <>\n            <div className={'header-btn-toolbar'}></div>\n            <DataTable items={JSON.stringify(items)}\n                       hover={true}\n                       tableClassName=\"data-table\"\n                       pagination={true}\n                       displayTotalElements={true}\n                       goToPage={this.goToPage}\n                       metaData={JSON.stringify(metaData)}\n                       tableConfig={tableConfig}\n            />\n        </>\n    }\n}\n\nexport default BusinessRuleClasses;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, ButtonGroup} from 'reactstrap';\nimport {\n\tDataTable,\n\tWaitingPane,\n\tEmptyPane\n}\nfrom '_components/_common';\nimport {BusinessRuleDetails} from '_components/_admin';\nimport { businessRulesService } from '_services/business.rule.services';\nimport { commons } from '_helpers/commons';\nimport { RiBriefcase4Line } from \"react-icons/ri\";\nimport queryString from 'query-string';\nimport {coreUri} from '_helpers/CoreUri'\nimport {WizardConfirm} from \"_components/_common\";\nimport {toast} from \"react-toastify\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = store => ({\n\tsearchBusinessRulesRX : store.searchBusinessRules,\n})\n\nconst mapDispatchToProps = (disptach) => ({\n})\n\n\nclass BusinessRulesAll extends Component {\n\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\terrors: '',\n\t\t\tprocessing: false,\n\t\t\tselectedRuleId : null,\n\t\t}\n\n\t\tthis.disactivateRule = this.disactivateRule.bind(this)\n\t\tthis.activateRule = this.activateRule.bind(this)\n\t\tthis.switchToView = this.switchToView.bind(this)\n\t\tthis.refreshView = this.refreshView.bind(this)\n\t\tthis.displayListView = this.displayListView.bind(this)\n\t\tthis.getRootObjectForDetailsId = this.getRootObjectForDetailsId.bind(this)\n\t\tthis.goToPage = this.goToPage.bind(this)\n\t\tthis.deleteRow = this.deleteRow.bind(this)\n\t}\n\n\tdisplayListView(update){\n\t\tthis.setState({viewMode: 'viewList',});\n\t\tif(update){\n\t\t\tthis.refreshView();\n\t\t}\n\t}\n\trefreshView(){\n\t\tthis.componentDidMount();\n\t}\n\n\tswitchToView(e, name){\n\t\te.preventDefault()\n\t\tthis.setState({\n\t\t\tviewMode: name\n\t\t})\n\t}\n\t\n\tdisactivateRule(e, i){\n\t\te.preventDefault();\n\t\tlet id = i.attributes.id;\n\n\t\tbusinessRulesService.desactivate(id, this.props.containerId).then(response => {\n\t\t\tlet curformqueryFilters = {...this.state.queryFilters}\n\t\t\tthis.loadDatas(curformqueryFilters);\n        }).catch(error => {\n        \tconsole.error(error);\n        })\n\t}\n\n\tactivateRule(e, i){\n\t\te.preventDefault()\n\t\tlet id = i.attributes.id;\n\n\t\tbusinessRulesService.activate(id, this.props.containerId).then(response => {\n\t\t\tlet curformqueryFilters = {...this.state.queryFilters}\n\t\t\tthis.loadDatas(curformqueryFilters);\n        }).catch(error => {\n        \tconsole.error(error);\n        })\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.loadDatas(0);\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\n\t\tif(prevProps.searchBusinessRulesRX.searchTerm !== this.props.searchBusinessRulesRX.searchTerm) {\n\t\t\tthis.loadDatas(0);\n\t\t}\n\t}\n\n\tloadDatas(page){\n\t\tthis.setState({processing: true});\n\t\tconst searchTerm = this.props.searchBusinessRulesRX.searchTerm;\n\t\tbusinessRulesService.getAllBusinessRules(page, 10, this.props.containerId, searchTerm).then(response => {\n\t\t\tthis.setState({\n\t\t\t\trules: response.data,\n\t\t\t\tmetaData: response.metaData,\n\t\t\t\terrors: '',\n\t\t\t\tprocessing: false,\n\t\t\t})\n\t\t}).catch(error =>{\n\t\t\tthis.setState({processing: false})\n\t\t})\n\t}\n\n\tgoToPage(i){\n\t\tthis.loadDatas(i);\n\t}\n\n    selectRule(e, id){\n    \tif(e) e.preventDefault();\n    \tconst url = coreUri.backOfficeViewURL(\"platform\", \"businessRules\", [\"rootId=\" + id]);\n\t\tthis.props.history.push(url);\n    }\n\n\tgoDetails (item, i) {\n\t\tconst id = i.attributes.id\n\t\treturn <td width={'5%'}>\n\t\t\t<Link onClick={e => this.selectRule(e,id)} style={{padding: '0.8rem'}}>\n\t\t\t\t<i className={'fa fa-chevron-right fa-lg'}></i>\n\t\t\t</Link>\n\t\t</td>\n\t}\n\n    name(v, i){\n\t\tlet className = v.businessClass.split('.').pop();\n\t\treturn <>\n\t\t\t<div className={'table-list-admin-root-list-div'}>\n\t\t\t\t<Link className={'table-link'} onClick={e=>this.selectRule(e, i.attributes.id)}>\n\t\t\t\t\t{className} - {v.description}\n\t\t\t\t</Link>\n\t\t\t\t<div style={{padding: '0rem 0 0.2rem 0'}}>\n\t\t\t\t\t<div  className={'table-list-admin-root-list-desc1'}>{v.identifier}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n    }\n\n\ticon(v,i){\n\t\treturn <td width={'5%'}>\n\t\t\t<div  className={'table-list-admin-root-list-desc2'}>{vetoableIcon(i)}</div>\n\t\t</td>\n\t}\n\n    actions(v,i){\n    \tlet currentContaineName = commons.getWorkingContainerName(this.props.userContext),\n    \t\tobjContainerName = i.container.name,\n    \t\tinherited = currentContaineName !== objContainerName;\n\n    \tlet actions;\n    \tif(inherited === true){\n    \t\tactions = <i className='fa fa-lg fa-arrow-circle-o-up'></i>;\n    \t}\n\n    \tif(!inherited){\n    \t\tactions = <ButtonGroup>\n\t\t\t\t{i.attributes.active && <Button color=\"primary\" size=\"sm\">ON</Button>}\n\t\t\t\t{!i.attributes.active  && <Button color=\"primary\" size=\"sm\">OFF</Button>}\n\t\t\t</ButtonGroup>\n    \t}\n\n    \treturn <td className=\"dt-center\">{actions}</td>;\n    }\n\n\tactionsRight(v,i){\n\t\treturn <td width={'5%'}>\n\t\t\t<div className={'btn-toolbar'}>\n\t\t\t\t<WizardConfirm\n\t\t\t\t\tbuttonTitle='Supprimer'\n\t\t\t\t\tonConfirm={() => this.deleteRow(i.attributes.id)}\n\t\t\t\t\tdialogMessage=\"Supprimer la règle?\"\n\t\t\t\t\tdialogTitle='Supprimer une règle'\n\t\t\t\t\t/>\n\t\t\t</div>\n\t\t</td>\n\t}\n\n\tdeleteRow(row){\n\t\tbusinessRulesService.deleteRule(row, this.props.containerId).then(response => {\n\t\t\tif(response.ok){\n\t\t\t\tthis.loadDatas(0)\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttoast.error(\"impossible de supprimer la règle\")\n\t\t\t}\n\t\t})\n\t}\n\n\torder(v,item){\n\t\treturn <td width={'5%'}>\n\t\t\t{item.attributes.order}\n\t\t</td>\n\t}\n\n\tbuildResultDatatable(){\n\t\tconst tableConfig = {\n\t\t\t\tcolumnsConfig: [\n\t\t\t\t\t{name:'Identification', dataField: 'attributes',  displayComponent: (v, i) => this.name(v, i)},\n\t\t\t\t\t{displayComponent: (v,i) => this.icon(v, i)},\n\t\t\t\t\t{displayComponent: (v,i) => this.order(v, i)},\n\t\t\t\t\t{displayComponent: (v,i) => this.goDetails(v, i)},\n\t\t\t\t],\n\t\t}\n\n    \tlet datatable;\n\t\tif(this.state.processing === true){\n\t\t\tdatatable = <div><WaitingPane /></div>\n\t\t}\n\t\telse {\n\t\t\tif(this.state.rules && this.state.rules.length > 0) {\n\t\t\t\tdatatable = <DataTable\n\t\t\t\t\t\t\t\titems={JSON.stringify(this.state.rules)}\n\t\t\t\t\t\t\t\ttableConfig={tableConfig}\n\t\t\t\t\t\t\t\tgoToPage={this.goToPage}\n\t\t\t\t\t\t\t\tmetaData={JSON.stringify(this.state.metaData)}\n\t\t\t\t\t\t\t\tdisplayTotalElements={true}\n\t\t\t\t\t\t\t\tpaginate={true}/>\n\t\t\t}\n\t\t\telse {\n\t\t    \treturn this.state.processing ?\n\t\t    \t\t<WaitingPane /> :\n\t\t    \t\t<EmptyPane hideMainMessage={true} secondaryMessage=\"No business rules found\"/>\n\t\t\t}\n\t\t}\n\n\t\treturn datatable;\n    }\n\n\tgetRootObjectForDetailsId(){\n\t\t\tconst queryUrlParams = queryString.parse(this.props.location.search);\n\t\t\tlet objectforDetailsId = queryUrlParams.rootId;\n\t\t\treturn objectforDetailsId\n\t}\n\n    render() {\n\t\t\tlet objectforDetailsId = this.getRootObjectForDetailsId()\n\t\t\tif(!objectforDetailsId){\n\t\t\t\treturn this.buildResultDatatable()\n\t\t\t}\n\n\t     \treturn <div>\n\t\t\t\t\t<BusinessRuleDetails\n\t\t\t\t\t\t{...this.props}\n\t\t\t\t\t\trefreshListView={this.refreshView}\n\t\t\t\t\t\tdisplayListView={this.displayListView}\n\t\t\t\t\t\tpushBreadCrumb={this.props.pushBreadCrumb}\n\t\t\t\t\t\tpopBreadCrumb={this.props.popBreadCrumb} />\n\t  \t\t</div>\n   }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (BusinessRulesAll);\n\nconst vetoableIcon = (rule) => {\n\tlet content;\n\tif(rule.attributes.vetoable){\n\t\tcontent = <i className={'fa fa-flash fa-lg'}></i>\n\t}\n\n\tif(!rule.attributes.vetoable && !rule.attributes.transactionPhase){\n\t\tcontent = <i></i>\n\t}\n\n\tif(!rule.attributes.vetoable && rule.attributes.transactionPhase === 'AFTER_COMMIT'){\n\t\tcontent = <i className={'fa fa-lg fa-check'}></i>\n\t}\n\n\tif(!rule.attributes.vetoable && rule.attributes.transactionPhase === 'AFTER_ROLLBACK'){\n\t\tcontent = <i className={'fa fa-lg fa-reply'}></i>\n\t}\n\n\treturn <div style={{margin: '0.5rem 0rem 0rem 0.5rem'}}>{content}</div>\n}","import React, {Component} from \"react\";\nimport {Input} from \"reactstrap\";\nimport {businessRulesService} from \"_services/business.rule.services\";\nimport {Link} from \"react-router-dom\";\nimport {DataTable, EmptyPane, WaitingPane} from \"_components/_common\";\nimport {coreUri} from \"_helpers/CoreUri\";\nimport {\n    Accordion,\n    AccordionItem,\n    AccordionItemButton,\n    AccordionItemHeading,\n    AccordionItemPanel,\n} from 'react-accessible-accordion';\nimport 'react-accessible-accordion/dist/fancy-example.css';\nimport * as actions from \"_actions/actions\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = store => ({\n    searchBusinessRulesRX: store.searchBusinessRules,\n})\n\nconst mapDispatchToProps = (disptach) => ({\n    updateSearchCriterias: (e) => disptach(actions.updateBusinessRulesSearchCriterias(e)),\n})\n\nclass BusinessRulesFilter extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loadingRules: false\n        }\n\n        this.rulesDatatable = this.rulesDatatable.bind(this)\n    }\n\n    componentDidMount() {\n        businessRulesService.selectableEntities(this.props.containerId).then(response => {\n            this.setState({\n                selectableEntities: response.metaData.selectableEntities\n            })\n        })\n    }\n\n    onTypeChange(item) {\n        this.setState({loadingRules: true})\n        const businessClass = this.props.searchBusinessRulesRX.businessClass\n        businessRulesService.applicableRulesOnBusinessClass(businessClass, item, this.props.containerId).then(response => {\n            const searchBusinessRulesRX = {...this.props.searchBusinessRulesRX}\n            searchBusinessRulesRX.businessType = item\n            searchBusinessRulesRX.rules = response.data\n            this.props.updateSearchCriterias(searchBusinessRulesRX)\n\n            this.setState({\n                loadingRules: false\n            })\n        })\n    }\n\n    businessTypeSelect() {\n        let typesOptions = [];\n        typesOptions.push(<option value=''>Selectionnez un type...</option>);\n\n        const types = this.props.searchBusinessRulesRX.types\n        if (types) {\n            types.map(item => {\n                let key = item.attributes.id\n                typesOptions.push(<option value={key}>{item.attributes.displayName}</option>);\n            });\n        }\n\n        let selectTypes = (\n            <Input value={this.props.searchBusinessRulesRX.businessType} style={SelectStyle}\n                   type=\"select\" name=\"business-event\" id=\"business-event\"\n                   onChange={(e) => this.onTypeChange(e.target.value)}>\n                {typesOptions}\n            </Input>\n        )\n\n        return selectTypes;\n    }\n\n    onSelectableEntitiesChange(value) {\n        businessRulesService.allTypesOfBusinessClass(value, this.props.containerId).then(types => {\n\n            businessRulesService.applicableRulesOnBusinessClass(value, '', this.props.containerId).then(rules => {\n                const searchBusinessRulesRX = {...this.props.searchBusinessRulesRX}\n                searchBusinessRulesRX.types = types.data\n                searchBusinessRulesRX.businessClass = value\n                searchBusinessRulesRX.rules = rules.data\n                searchBusinessRulesRX.businessType = ''\n                this.props.updateSearchCriterias(searchBusinessRulesRX)\n            }).catch(() => {\n                const searchBusinessRulesRX = {...this.props.searchBusinessRulesRX}\n                searchBusinessRulesRX.businessClass = value\n                searchBusinessRulesRX.rules = []\n                searchBusinessRulesRX.types = types.data\n                searchBusinessRulesRX.businessType = ''\n            })\n        })\n    }\n\n    selectableEntitiesSelect() {\n        let subtypesOptions = [];\n        subtypesOptions.push(<option value=''>Selectionnez une entité...</option>);\n\n        if (this.state.selectableEntities) {\n            this.state.selectableEntities.map(item => {\n                let split = item.split('.');\n                subtypesOptions.push(<option value={item}>{split[split.length - 1]}</option>);\n            });\n        }\n\n        let selectableEntities = (\n            <Input value={this.props.searchBusinessRulesRX.businessClass}\n                   type=\"select\" name=\"business-class\" id=\"business-class\"\n                   onChange={(e) => this.onSelectableEntitiesChange(e.target.value)}>\n                {subtypesOptions}\n            </Input>\n        )\n\n        return selectableEntities;\n    }\n\n    selectRule(e, id) {\n        if (e) e.preventDefault()\n        const url = coreUri.backOfficeViewURL(\"platform\", \"businessRules\", [\"rootId=\" + id]);\n        this.props.history.push(url)\n    }\n\n    name(v, i) {\n        let className = v.businessClass.split('.').pop()\n        return <>\n            <div className={'table-list-admin-root-list-div'}>\n                <Link className={'table-link'} onClick={e => this.selectRule(e, i.attributes.id)}>\n                    {className} - {v.description}\n                </Link>\n                <div style={{padding: '0rem 0 0.2rem 0'}}>\n                    <div className={'table-list-admin-root-list-desc1'}>{v.identifier}</div>\n                </div>\n            </div>\n        </>\n    }\n\n    icon(v, i) {\n        return <td width={'5%'}>\n            <div className={'table-list-admin-root-list-desc2'}>{vetoableIcon(i)}</div>\n        </td>\n    }\n\n    order(v, item) {\n        return <td width={'5%'}>\n            {item.attributes.order}\n        </td>\n    }\n\n    rulesDatatable() {\n        if (this.state.loadingRules) {\n            return <WaitingPane/>\n        }\n\n        const rules = this.props.searchBusinessRulesRX.rules;\n        if (rules && rules.length > 0) {\n            const tableConfig = {\n                columnsConfig: [\n                    {name: 'Identification', dataField: 'attributes', displayComponent: (v, i) => this.name(v, i)},\n                    {displayComponent: (v, i) => this.icon(v, i)},\n                    {displayComponent: (v, i) => this.order(v, i)},\n                    {displayComponent: (v, i) => this.goDetails(v, i)},\n                ],\n            }\n\n            let tables = []\n            let groupedRules = groupByEvent(rules);\n            Object.keys(groupedRules).map(function (k, v) {\n                let datas = groupedRules[k]\n                let table = <AccordionItem>\n                    <AccordionItemHeading>\n                        <AccordionItemButton>\n                            <div style={{\n                                'display': 'flex',\n                                'justify-content': 'space-between',\n                                'margin-top': '-21px',\n                                'margin-left': '3rem',\n                                'margin-right': '2rem'\n                            }}>\n                                <div style={{\n                                    paddingTop:'6px'\n                                }}>{k}</div>\n                                <div className={'accordion-rules-index'}>{datas.length}</div>\n                            </div>\n                        </AccordionItemButton>\n                    </AccordionItemHeading>\n                    <AccordionItemPanel>\n                        <DataTable items={JSON.stringify(datas)}\n                                   tableClassName=\"data-table\"\n                                   tableConfig={tableConfig}\n                                   paginate={false}/>\n                    </AccordionItemPanel>\n                </AccordionItem>\n                tables.push(table)\n            });\n\n            return <Accordion allowMultipleExpanded allowZeroExpanded>\n                {tables}\n            </Accordion>\n        }\n\n        return <div><EmptyPane/></div>\n    }\n\n    goDetails(item, i) {\n        const id = i.attributes.id\n        return <td width={'5%'}>\n            <Link onClick={e => this.selectRule(e, id)} style={{padding: '0.8rem'}}>\n                <i className={'fa fa-chevron-right fa-lg'}></i>\n            </Link>\n        </td>\n    }\n\n    render() {\n        return <>\n            <div className=\"admin-filters-root\">\n                {this.props.toolbar}\n                <div style={RootStyle}>\n                    {this.selectableEntitiesSelect()}\n                    {this.businessTypeSelect()}\n                </div>\n            </div>\n\n            <div className=\"portlet-content\">\n                <div className={'table-list-admin-root-list'}>\n                    {this.rulesDatatable()}\n                </div>\n            </div>\n        </>\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BusinessRulesFilter);\n\nconst RootStyle = {\n    display: 'flex',\n    marginTop: '1rem'\n}\n\nconst SelectStyle = {\n    marginLeft: '1rem'\n}\n\nconst vetoableIcon = (rule) => {\n    let content;\n    if (rule.attributes.vetoable) {\n        content = <i className={'fa fa-flash fa-lg'}></i>\n    }\n\n    if (!rule.attributes.vetoable && !rule.attributes.transactionPhase) {\n        content = <i></i>\n    }\n\n    if (!rule.attributes.vetoable && rule.attributes.transactionPhase === 'AFTER_COMMIT') {\n        content = <i className={'fa fa-lg fa-check'}></i>\n    }\n\n    if (!rule.attributes.vetoable && rule.attributes.transactionPhase === 'AFTER_ROLLBACK') {\n        content = <i className={'fa fa-lg fa-reply'}></i>\n    }\n\n    return <div style={{margin: '0.5rem 0rem 0rem 0.5rem'}}>{content}</div>\n}\n\nfunction groupByEvent(array) {\n    let group = array.reduce((r, a) => {\n        r[a.attributes.event] = [...r[a.attributes.event] || [], a];\n        return r;\n    }, {});\n    return group;\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Button,\n\tButtonGroup,\n\tButtonToolbar,\n\tInput, Col\n} from 'reactstrap';\nimport {\n\tDataTable,\n\tWizardConfirm,\n\tWaitingPane,\n\tEmptyPane\n}\nfrom '_components/_common';\nimport { businessRulesService } from '_services/business.rule.services';\nimport * as actions from '_actions/actions';\nimport { commons } from '_helpers/commons';\nimport { Form, } from 'react-bootstrap'\nimport { RiBriefcase4Line } from \"react-icons/ri\";\nimport queryString from 'query-string';\nimport {coreUri} from '_helpers/CoreUri'\nimport BusinessRuleClasses from \"_components/_admin/BusinessRules/BusinessRuleClasses\";\nimport BusinessRulesAll from \"_components/_admin/BusinessRules/BusinessRulesAll\";\nimport {BusinessRuleDetails} from \"_components/_admin\";\nimport BusinessRulesFilter from \"_components/_admin/BusinessRules/BusinessRulesFilter\";\n\nconst mapStateToProps = store => ({\n\tsearchBusinessRulesRX : store.searchBusinessRules,\n})\n\nconst mapDispatchToProps = (disptach) => ({\n\tupdateSearchCriterias: (e) => disptach(actions.updateBusinessRulesSearchCriterias(e)),\n})\n\n/**\n *\n * Business rules\n */\nclass BusinessRules extends Component {\n\n\tconstructor(props){\n\t\tsuper(props)\n\n\t\tlet includeParentRules = commons.hasRoleSuperAdmin(this.props.userContext) ? true : false\n\t\tif(this.props.searchBusinessRules && this.props.searchBusinessRules.includeParentRules != undefined){\n\t\t\tincludeParentRules = this.props.searchBusinessRules.includeParentRules\n\t\t}\n\n\t\tthis.state = {\n\t\t\tqueryFilters: {\n\t\t\t\tbusinessType: this.props.searchBusinessRulesRX.businessType ? this.props.searchBusinessRulesRX.businessType : '',\n\t\t\t\tbusinessClass: this.props.searchBusinessRulesRX.businessClass ? this.props.searchBusinessRulesRX.businessClass : '',\n\t\t\t\tvetoable: this.props.searchBusinessRulesRX.vetoable ? this.props.searchBusinessRulesRX.vetoable : true,\n\t\t\t\tincludeParentRules: includeParentRules,\n\t\t\t\teventKey: this.props.searchBusinessRulesRX.eventKey ? this.props.searchBusinessRulesRX.eventKey : '',\n\t\t\t\tphase: this.props.searchBusinessRulesRX.phase ? this.props.searchBusinessRulesRX.phase : '0',\n\t\t\t},\n\n\t\t\trules: this.props.searchBusinessRulesRX.rules ? this.props.searchBusinessRulesRX.rules : {},\n\t\t\terrors: '',\n\t\t\tprocessing: false,\n\n\t\t\tviewMode: 'allRules',\n\t\t\tselectedRuleId : null,\n\t\t}\n\n\t\tthis.updateBusinessTypeFunction = this.updateBusinessTypeFunction.bind(this)\n\t\tthis.businessEventChange = this.businessEventChange.bind(this)\n\t\tthis.handleChange = this.handleChange.bind(this)\n\t\tthis.disactivateRule = this.disactivateRule.bind(this)\n\t\tthis.activateRule = this.activateRule.bind(this)\n\t\tthis.switchToView = this.switchToView.bind(this)\n\t\tthis.refreshView = this.refreshView.bind(this)\n\t\tthis.displayListView = this.displayListView.bind(this)\n\t\tthis.loadDatas = this.loadDatas.bind(this)\n\t\tthis.getRootObjectForDetailsId = this.getRootObjectForDetailsId.bind(this)\n\t\tthis.doSearch = this.doSearch.bind(this)\n\t}\n\n\tdisplayListView(update){\n\t\tthis.setState({viewMode: 'viewList',});\n\n\t\tif(update){\n\t\t\tthis.refreshView();\n\t\t}\n\t}\n\n\trefreshView(){\n\t\tlet currentFormQueryFilters = {...this.state.queryFilters};\n\t\tthis.loadDatas(currentFormQueryFilters);\n\t}\n\n\tswitchToView(e, name){\n\t\te.preventDefault()\n\t\tthis.setState({\n\t\t\tviewMode: name\n\t\t})\n\t}\n\n\tdisactivateRule(e, i){\n\t\te.preventDefault()\n\t\tlet id = i.attributes.id\n\n\t\tbusinessRulesService.desactivate(id, this.props.containerId).then(response => {\n\t\t\tlet currentFormQueryFilters = {...this.state.queryFilters}\n\t\t\tthis.loadDatas(currentFormQueryFilters);\n        }).catch(error => {\n        \tconsole.error(error);\n        })\n\t}\n\n\tactivateRule(e, i){\n\t\te.preventDefault()\n\t\tlet id = i.attributes.id\n\n\t\tbusinessRulesService.activate(id, this.props.containerId).then(response => {\n\t\t\tlet currentFormQueryFilters = {...this.state.queryFilters}\n\t\t\tthis.loadDatas(currentFormQueryFilters);\n        }).catch(error => {\n        \tconsole.error(error);\n        })\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState){\n\t\tlet prevformqueryFilters = {...prevState.queryFilters}\n\t\tlet curformqueryFilters = {...this.state.queryFilters}\n\n\t\tif(JSON.stringify(prevformqueryFilters) !== JSON.stringify(curformqueryFilters)){\n\t\t\tif(this.state.queryFilters.businessClass === undefined ||\n\t\t\t\t(this.state.queryFilters.businessClass === '' && this.state.queryFilters.businessType === '')){\n\t\t\t\tthis.setState({\n\t\t\t\t\terrors: true,\n\t\t\t\t\tprocessing: false\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.loadDatas(curformqueryFilters)\n\t\t\t}\n\t\t}\n\t}\n\n\tloadDatas(params){\n\t\tif(params.phase !== '0'){\n\t\t\tparams.vetoable = false\n\t\t}\n\n\t\tthis.setState({processing: true})\n\t\tif(params.businessClass){\n\t\t\tbusinessRulesService.getApplicableRules(params, this.props.containerId).then(response => {\n\t\t\t\tthis.setState({\n\t\t\t\t\trules: response,\n\t\t\t\t\terrors: '',\n\t\t\t\t\tprocessing: false,\n\t\t\t\t\tqueryFilters: params\n\t\t\t\t})\n\t\t\t}).catch(error =>{\n\t\t\t\tthis.setState({processing: false})\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis.setState({\n\t\t\t\trules: null,\n\t\t\t\terrors: '',\n\t\t\t\tprocessing: false,\n\t\t\t\tqueryFilters: params\n\t\t\t})\n\t\t}\n\t}\n\n\thandleChange(e){\n\t\tlet value = e.target.value\n\t\tlet queryFilters = {...this.state.queryFilters}\n\t\tif(e.target.name === 'vetoable'){\n\t\t\tlet vet = !this.state.queryFilters.vetoable\n\t\t\tqueryFilters.vetoable = vet\n\t\t}\n\t\telse if(e.target.name === 'phase'){\n\t\t\tif(value === '1' || value === '2'){\n\t\t\t\tqueryFilters.phase = value\n\t\t\t\tqueryFilters.vetoable = false\n\t\t\t}\n\t\t\telse {\n\t\t\t\tqueryFilters.phase = value\n\t\t\t}\n\t\t}\n\t\telse if(e.target.name === 'includeParentRules'){\n\t\t\tqueryFilters.includeParentRules = e.target.checked\n\t\t}\n\n\t\tthis.setState({queryFilters: queryFilters})\n\t}\n\n\tbusinessEventChange(e){\n\t\tlet queryFilters = {...this.state.queryFilters}\n\t\tqueryFilters.eventKey = e.target.value\n\t\tthis.setState({\n\t\t\tqueryFilters: queryFilters,\n\t\t})\n\t}\n\n\tupdateBusinessTypeFunction(businessClass, businessType){\n\t\tlet queryFilters = {...this.state.queryFilters}\n\t\tqueryFilters.businessClass = businessClass ? businessClass : ''\n\t\tqueryFilters.businessType = businessType ? businessType : ''\n\t\tthis.loadDatas(queryFilters);\n\t}\n\n    displaySelectFunction(businessClass, businessTypes){\n        return (\n        \t<Form.Row>\n                <Form.Group as={Col}>\n                    <div>{businessClass}</div>\n                </Form.Group>\n                <Form.Group as={Col} style={{'margin-left':'0.5rem'}}>\n                    <div>{businessTypes}</div>\n                </Form.Group>\n             </Form.Row>\n        )\n    }\n\n    selectRule(e, id) {\n    \tif(e) e.preventDefault();\n    \tconst backOfficeUrl = coreUri.backOfficeViewURL(\"platform\", \"businessRules\", [\"rootId=\" + id]);\n\t\tthis.props.history.push(backOfficeUrl);\n    }\n\n\tname(v, i){\n\t\tlet phase = v.transactionPhase ? v.transactionPhase : '', event = v.event;\n\t\tlet d1 = <>\n\t\t\t{event +  (phase ? ', ' + phase : ' ')}\n\t\t</>\n\n\t\tlet className = v.businessClass.split('.').pop()\n\t\treturn <>\n\t\t\t<div className={'table-list-admin-root-list-div'}>\n\t\t\t\t<Link className={'table-link'} onClick={e=>this.selectRule(e, i.attributes.id)}>\n\t\t\t\t\t{v.identifier}\n\t\t\t\t</Link>\n\t\t\t\t<div style={{padding: '0rem 0 0.2rem 0'}}>\n\t\t\t\t\t<div  className={'table-list-admin-root-list-desc1'}>{v.description}</div>\n\t\t\t\t\t<div  className={'table-list-admin-root-list-desc2'}>{v.vetoable && <>\n\t\t\t\t\t\t<i className={'fa fa-flash fa-sm'}></i>&nbsp;{d1}&nbsp;{className}\n\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t}\n\n    actions(v,i){\n    \tlet currentContaineName = commons.getWorkingContainerName(this.props.userContext),\n    \t\tobjContainerName = i.container.name,\n    \t\tinherited = currentContaineName !== objContainerName;\n\n    \tlet actions;\n    \tif(inherited === true){\n    \t\tactions = <i className='fa fa-lg fa-arrow-circle-o-up'></i>;\n    \t}\n\n    \tif(!inherited){\n    \t\tactions = <ButtonGroup>\n\t\t\t\t{i.attributes.active && <Button color=\"primary\" size=\"sm\">ON</Button>}\n\t\t\t\t{!i.attributes.active  && <Button color=\"primary\" size=\"sm\">OFF</Button>}\n\t\t\t</ButtonGroup>\n    \t}\n\n    \treturn <td className=\"dt-center\">{actions}</td>;\n    }\n\n\tactionsRight(v,i){\n\t\treturn <td width={'5%'}>\n\t\t\t<div className={'btn-toolbar'}>\n\t\t\t\t<WizardConfirm\n\t\t\t\t\tbuttonTitle='Supprimer'\n\t\t\t\t\tonConfirm={() => this.deleteRow(i.attributes.id)}\n\t\t\t\t\tdialogMessage=\"Supprimer la règle?\"\n\t\t\t\t\tdialogTitle='Supprimer une règle'/>\n\t\t\t</div>\n\t\t</td>\n\t}\n\n\tgoDetails (item, i) {\n\t\tconst id = i.attributes.id\n\t\treturn <td width={'5%'}>\n\t\t\t<Link onClick={e => this.selectRule(e,id)} style={{padding: '0.8rem'}}>\n\t\t\t\t<i className={'fa fa-chevron-right fa-lg'}></i>\n\t\t\t</Link>\n\t\t</td>\n\t}\n\n    buildResultDatatable(){\n    \tconst items = this.state.rules ? this.state.rules.data : [];\n\t\tconst metaData = this.state.rules ? this.state.rules.metaData : {};\n\t\tconst tableConfig = {\n\t\t\t\tcolumnsConfig: [\n\t\t\t\t\t{name:'Identification', dataField: 'attributes',  displayComponent: (v, i) => this.name(v, i)},\n\t\t\t\t\t{displayComponent: (v,i) => this.actionsRight()},\n\t\t\t\t\t{displayComponent: (v,i) => this.goDetails(v, i)},\n\t\t\t\t],\n\t\t}\n\n    \tlet datatable, currentContainerName = commons.getWorkingContainerName(this.props.userContext);\n\t\tif(this.state.processing === true){\n\t\t\tdatatable = <div className=\"mt-5\"><WaitingPane /></div>\n\t\t}\n\t\telse {\n\t\t\tif(items && items.length > 0) {\n\t\t\t\tdatatable = <DataTable items={JSON.stringify(this.state.rules.data)}\n\t\t\t\t\t\t\t\ttableClassName=\"data-table\"\n\t\t\t\t\t\t\t\tmetaData={JSON.stringify(metaData)}\n\t\t\t\t\t\t\t\ttableConfig={tableConfig}\n\t\t\t\t\t\t\t\tdisplayTotalElements={true}\n\t\t\t\t\t\t\t\tpaginate={true}/>\n\t\t\t}\n\t\t\telse {\n\t\t    \treturn this.state.processing ?\n\t\t    \t\t<WaitingPane /> :\n\t\t    \t\t<EmptyPane hideMainMessage={true} secondaryMessage=\"No business rules found\"/>\n\t\t\t}\n\t\t}\n\n\t\treturn datatable;\n    }\n\n    header(){\n    \treturn <div className=\"\">\n\t\t    \t<ButtonToolbar  className=\"justify-content-between\">\n\t\t    \t\t<ButtonGroup>\n\t\t    \t\t\t<Button className=\"katappult-btn\" onClick={e=>this.switchToView(e, 'synch')}><i className=\"fa fa-md fa-cloud-upload\"></i> Upload</Button>\n\t\t    \t\t\t<Button className=\"katappult-btn\"  onClick={e=>this.switchToView(e, 'viewList')}><i className=\"fa fa-md fa-th-list\"></i> Navigate</Button>\n\t\t    \t\t\t<Button className=\"katappult-btn\" onClick={e=>this.refreshView()}><i className=\"fa fa-md fa-refresh\"></i> Refresh</Button>\n\t\t    \t\t</ButtonGroup>\n\t\t    \t\t<ButtonGroup style={{'padding-top':'0.5rem'}}>\n\t\t    \t\t\t<Form.Check\n\t                \t\ttype=\"switch\"\n\t                \t\tid=\"custom-switch\"\n\t                \t\tchecked={this.state.includeParentsItem}\n\t                \t\tvalue={this.state.includeParentsItem}\n\t                \t\tonChange={this.includeParentsItemCheck}\n\t                \t\tlabel=\"Parent items\"/>\n\t\t\t\t   </ButtonGroup>\n\t\t\t\t</ButtonToolbar>\n\t\t</div>\n    }\n\n\tgetRootObjectForDetailsId(){\n\t\t\tconst queryUrlParams = queryString.parse(this.props.location.search);\n\t\t\tlet objectforDetailsId = queryUrlParams.rootId;\n\t\t\treturn objectforDetailsId\n\t}\n\n\tbusinessRulesListView(){\n\t\tthis.setState({viewMode: 'businessRulesClassList'})\n\t}\n\n\tallRulesListView(){\n\t\tthis.setState({viewMode: 'allRules'})\n\t}\n\n\tdoSearch(event){\n\t\tlet searchTerm = event.target.value;\n\t\tthis.setState({viewMode: 'allRules'})\n\n\t\tconst searchBusinessRulesRX = {...this.props.searchBusinessRulesRX}\n\t\tsearchBusinessRulesRX.searchTerm = searchTerm\n\t\tthis.props.updateSearchCriterias(searchBusinessRulesRX)\n\t}\n\n\tisSearching(){\n\t\treturn this.props.searchBusinessRulesRX.searchTerm\n\t\t\t&& this.props.searchBusinessRulesRX.searchTerm .length > 0\n\t}\n\n    render() {\n    \tlet errors;\n\t\t\tif(this.state.errors !== ''){\n\t\t\t\terrors = <center><h6>Please select a business class</h6></center>\n\t\t\t}\n\n\t\t\tlet objectforDetailsId = this.getRootObjectForDetailsId()\n\t\t\tif(!objectforDetailsId){\n\n\t\t\t\tlet toolbar = <div className=\"admin-filters backend-root-panel\">\n\t\t\t\t\t\t\t<Input type=\"text\"\n\t\t\t\t\t\t\t\t   className=\"form-control\"\n\t\t\t\t\t\t\t\t   name=\"input1-group2\"\n\t\t\t\t\t\t\t\t   placeholder=\"Chercher une règle métier\"\n\t\t\t\t\t\t\t\t   autocomplete=\"off\"\n\t\t\t\t\t\t\t\t   onChange={this.doSearch}\n\t\t\t\t\t\t\t\t   value={this.props.searchBusinessRulesRX.searchTerm}/>\n\t\t\t\t</div>\n\n\t\t\t\tif(this.state.viewMode === 'businessRulesClassList'){\n\t\t\t\t\treturn <div className=\"\">\n\t\t\t\t\t\t<div className={'admin-filters-root'}>\n\t\t\t\t\t\t\t{toolbar}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"portlet-content\">\n\t\t\t\t\t\t\t<div className={'table-list-admin-root-list'}>\n\t\t\t\t\t\t\t\t<BusinessRuleClasses {...this.props}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\telse if(this.state.viewMode === 'allRules'){\n\t\t\t\t\tif(!this.isSearching()) {\n\t\t\t\t\t\treturn <BusinessRulesFilter {...this.props} toolbar={toolbar}/>\n\t\t\t\t\t}\n\n\t\t\t\t\treturn <>\n\t\t\t\t\t\t<div className={'admin-filters-root'}>{toolbar}</div>\n\t\t\t\t\t\t<div className=\"portlet-content\">\n\t\t\t\t\t\t\t<div className={'table-list-admin-root-list'}>\n\t\t\t\t\t\t\t\t<BusinessRulesAll {...this.props} searchTerm={this.props.searchBusinessRulesRX.searchTerm}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t}\n\n\t\t\t\treturn <></>\n\t\t\t}\n\n\t     \treturn <div>\n\t\t\t\t\t<BusinessRuleDetails\n\t\t\t\t\t\t{...this.props}\n\t\t\t\t\t\trefreshListView={this.refreshView}\n\t\t\t\t\t\tdisplayListView={this.displayListView}\n\t\t\t\t\t\tpushBreadCrumb={this.props.pushBreadCrumb}\n\t\t\t\t\t\tpopBreadCrumb={this.props.popBreadCrumb} />\n\t  \t\t</div>\n\n   }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (BusinessRules);\n\nfunction activeOrNot(v){\n\tif(v){\n\t\treturn <td> <i className=\"fa\">.</i></td>\n\t}\n\telse {\n\t\treturn <td> <i className=\"fa fa-ban fa-lg icon-red\"></i></td>\n\t}\n}\n\nconst icon = () => {\n\treturn <td className=\"dt-center\">\n\t\t<RiBriefcase4Line color=\"#EEEE\" size=\"1.3em\"/>\n\t</td>\n}\n","import React, { Component } from 'react';\nimport {AttributeListGroup, WaitingPane} from \"_components/_common\";\nimport {businessRuleExclusionService} from \"_services/businessRuleExclusion.services\";\nimport {commons} from \"_helpers/commons\";\nimport {toast} from \"react-toastify\";\n\nclass UserExclusionAdd extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            formData: {},\n            errors:[]\n        }\n\n        this.create = this.create.bind(this)\n        this.attributesList = this.attributesList.bind(this);\n    }\n\n    create(formData) {\n        formData.businessRuleId = this.props.businessRuleId\n        formData.containerId = this.props.containerId\n        formData.type = \"U\"\n        businessRuleExclusionService.createEntity(formData, this.props.containerId).then(response =>{\n            if(commons.isRequestError(response)){\n                toast.error(commons.toastError(response))\n            }\n            else {\n                this.props.onSuccess()\n            }\n        })\n    }\n\n    attributesList(){\n        const attributesList = {\n            saveButtonTitle: 'AJOUTER',\n            onSubmit: (formData) => this.create(formData),\n            attributes: [\n                {name: 'Login/Email', dataField: 'identifiant', required:true,  placeHolder: 'Login'},\n                {name: 'Début', dataField: 'from', placeHolder: 'Date de début', type: \"datetime\"},\n                {name: 'Fin', dataField: 'to', placeHolder: 'Date de fin', type: \"datetime\"}\n            ]\n        }\n\n        return attributesList;\n    }\n\n    render() {\n        if(this.state.loading){\n            return <WaitingPane/>\n        }\n\n        let errors = []\n        if(this.state.errors.length > 0) {\n            this.state.errors.map(error => {\n                errors.push(<p>{error}</p>)\n            })\n        }\n\n        let formData ={...this.state.formData}\n        return (\n            <div className=\"container-create-root\">\n                <div id=\"form-errors-section\" className=\"form-error\">\n                    {errors}\n                </div>\n                <AttributeListGroup\n                    attributesListConfig={this.attributesList()}\n                    data={formData}\n                    standardFooterActions=\"true\"\n                    formMode='create_object'/>\n            </div>\n        )\n    }\n}\n\nexport default UserExclusionAdd;\n","import React, {Component} from 'react';\nimport {DataTable, Wizard} from \"_components/_common\";\nimport UserExclusionAdd from \"_components/_admin/BusinessRules/Exclusions/Users/UserExclusionAdd\";\nimport {businessRuleExclusionService} from \"_services/businessRuleExclusion.services\";\nimport {commons} from \"_helpers/commons\";\nimport {toast} from \"react-toastify\";\n\nclass UserExclusions extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true\n        }\n\n        this.onCreateSuccess = this.onCreateSuccess.bind(this)\n        this.tableActions = this.tableActions.bind(this)\n        this.remove = this.remove.bind(this)\n        this.loadDatas = this.loadDatas.bind(this)\n    }\n\n    onCreateSuccess(wizardCloseFunction) {\n        wizardCloseFunction()\n        this.loadDatas()\n    }\n\n    wizardContent(wizardCloseFunction) {\n        return <UserExclusionAdd\n            onSuccess={() => this.onCreateSuccess(wizardCloseFunction)}\n            {...this.props}/>\n    }\n\n    componentDidMount() {\n        this.loadDatas()\n    }\n\n    loadDatas() {\n        this.setState({loading: true})\n        businessRuleExclusionService.listEntity(this.props.businessRuleId, \"U\", this.props.containerId).then(response => {\n            this.setState({\n                loading: false,\n                datas: response.data\n            })\n        })\n    }\n\n    remove(id) {\n        businessRuleExclusionService.deleteEntity(id, this.props.containerId).then(response => {\n            if (commons.isRequestError(response)) {\n                toast.error(commons.toastError(response))\n            } else {\n                this.loadDatas()\n            }\n        })\n    }\n\n    tableActions(v, item) {\n        return <td width={'20%'}>\n            <button onClick={() => this.remove(v.id)}><i className={'fa fa-minus fa-md'}></i>&nbsp;Supprimer</button>\n        </td>\n    }\n\n    tableConfig() {\n        const tableConfig = {\n            columnsConfig: [\n                {name: 'Login', dataField: 'attributes.identifiant', headerClass: 'td-left', className: 'td-left'},\n                {\n                    name: 'Debut',\n                    dataField: 'attributes.from',\n                    dateFormat: 'DD-MM-YYYY hh:mm:ss',\n                    headerClass: 'td-left',\n                    className: 'td-left'\n                },\n                {\n                    name: 'Fin',\n                    dataField: 'attributes.to',\n                    dateFormat: 'DD-MM-YYYY hh:mm:ss',\n                    headerClass: 'td-left',\n                    className: 'td-left'\n                },\n                {\n                    dataField: \"attributes\",\n                    displayComponent: (v, i) => this.tableActions(v, i),\n                    headerClass: 'td-left',\n                    className: 'td-left'\n                },\n            ],\n        }\n        return tableConfig;\n    }\n\n    table() {\n        let tableConfig = this.tableConfig();\n        let datatable = <DataTable items={JSON.stringify(this.state.datas)}\n                                   tableConfig={tableConfig}\n                                   pagination={false}\n                                   displayTotalElements={false}\n                                   paginate={false}/>\n\n        return datatable\n    }\n\n    render() {\n        let content;\n        if (this.state.loading) {\n            content = <></>\n        } else {\n            content = this.table();\n        }\n\n        return <div className={'business-rule-exclusion-pane'}>\n            <h4>Utilisateurs</h4>\n            <div className={'btn-toolbar btn-toolbar-right'}>\n                <Wizard buttonTitle={'Ajouter'}\n                        buttonIcon={'fa fa-plus fa-md'}\n                        hideFooter={true}\n                        dialogSize=\"md\"\n                        dialogTitle=\"Ajouter un login/email utilisateur\"\n                        dialogContentProvider={(wizardCloseFunction) => this.wizardContent(wizardCloseFunction)}/>\n            </div>\n            <div className={'business-rule-exclusion-pane-content'}>\n                <div className={'business-rule-exclusion-pane-content-list'}>\n                    {content}\n                </div>\n            </div>\n\n        </div>\n    }\n}\n\nexport default UserExclusions;","import React, { Component } from 'react';\nimport {AttributeListGroup, WaitingPane} from \"_components/_common\";\nimport {businessRuleExclusionService} from \"_services/businessRuleExclusion.services\";\nimport {commons} from \"_helpers/commons\";\nimport {toast} from \"react-toastify\";\n\nclass ExclusionProcessorAdd extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            formData: {},\n            errors:[]\n        }\n\n        this.create = this.create.bind(this)\n        this.attributesList = this.attributesList.bind(this);\n    }\n\n    create(formData) {\n        formData.businessRuleId = this.props.businessRuleId\n        formData.containerId = this.props.containerId\n        formData.type = \"P\"\n        businessRuleExclusionService.createEntity(formData, this.props.containerId).then(response =>{\n            if(commons.isRequestError(response)){\n                toast.error(commons.toastError(response))\n            }\n            else{\n                this.props.onSuccess()\n            }\n        })\n    }\n\n    attributesList(){\n        const attributesList = {\n            saveButtonTitle: 'AJOUTER',\n            onSubmit: (formData) => this.create(formData),\n            attributes: [\n                {name: 'Identifiant spring', dataField: 'identifiant', required:true,  placeHolder: 'Identifiant spring'},\n            ]\n        }\n\n        return attributesList;\n    }\n\n    render() {\n        if(this.state.loading){\n            return <WaitingPane/>\n        }\n\n        let errors = []\n        if(this.state.errors.length > 0) {\n            this.state.errors.map(error => {\n                errors.push(<p>{error}</p>)\n            })\n        }\n\n        let formData ={...this.state.formData}\n        return (\n            <div className=\"container-create-root\">\n                <div id=\"form-errors-section\" className=\"form-error\">\n                    {errors}\n                </div>\n                <AttributeListGroup\n                    attributesListConfig={this.attributesList()}\n                    data={formData}\n                    standardFooterActions=\"true\"\n                    formMode='create_object'/>\n            </div>\n        )\n    }\n}\n\nexport default ExclusionProcessorAdd;\n","import React, {Component} from 'react';\nimport {DataTable, Wizard} from \"_components/_common\";\nimport ExclusionProcessorAdd from \"_components/_admin/BusinessRules/Exclusions/Processors/ExclusionProcessorAdd\";\nimport {businessRuleExclusionService} from \"_services/businessRuleExclusion.services\";\n\nclass ExclusionsProcessor extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true\n        }\n\n        this.onCreateSuccess = this.onCreateSuccess.bind(this)\n        this.tableActions = this.tableActions.bind(this)\n        this.remove = this.remove.bind(this)\n    }\n\n    onCreateSuccess(wizardCloseFunction) {\n        wizardCloseFunction()\n        this.loadDatas()\n    }\n\n    wizardContent(wizardCloseFunction) {\n        return <ExclusionProcessorAdd\n            onSuccess={() => this.onCreateSuccess(wizardCloseFunction)}\n            {...this.props}/>\n    }\n\n    remove(id) {\n        businessRuleExclusionService.deleteEntity(id, this.props.containerId).then(response => {\n            this.loadDatas()\n        })\n    }\n\n    tableActions(v, item) {\n        return <td width={'20%'}>\n            <button onClick={() => this.remove(v.id)}><i className={'fa fa-minus fa-md'}></i>&nbsp;Supprimer</button>\n        </td>\n    }\n\n\n    componentDidMount() {\n        this.loadDatas()\n    }\n\n    loadDatas() {\n        this.setState({loading: true})\n        businessRuleExclusionService.listEntity(this.props.businessRuleId, \"P\", this.props.containerId).then(response => {\n            this.setState({\n                loading: false,\n                datas: response.data\n            })\n        })\n    }\n\n    tableConfig() {\n        const tableConfig = {\n            columnsConfig: [\n                {\n                    name: 'Identifiant',\n                    dataField: 'attributes.identifiant',\n                    headerClass: 'td-left',\n                    className: 'td-left'\n                },\n                {\n                    dataField: \"attributes\",\n                    displayComponent: (v, i) => this.tableActions(v, i),\n                    headerClass: 'td-left',\n                    className: 'td-left'\n                },\n            ],\n        }\n        return tableConfig;\n    }\n\n    table() {\n        let tableConfig = this.tableConfig();\n        let datatable = <DataTable items={JSON.stringify(this.state.datas)}\n                                   tableConfig={tableConfig}\n                                   pagination={false}\n                                   displayTotalElements={false}\n                                   paginate={false}/>\n\n        return datatable\n    }\n\n    render() {\n        let content;\n        if (this.state.loading) {\n            content = <></>\n        } else {\n            content = this.table();\n        }\n\n        return <div className={'business-rule-exclusion-pane'}>\n            <h4>Processeurs</h4>\n            <div className={'btn-toolbar btn-toolbar-right'}>\n                <Wizard buttonTitle={'Ajouter'}\n                        buttonIcon={'fa fa-plus fa-md'}\n                        hideFooter={true}\n                        dialogSize=\"md\"\n                        dialogTitle=\"Ajouter un bean spring\"\n                        dialogContentProvider={(wizardCloseFunction) => this.wizardContent(wizardCloseFunction)}/>\n            </div>\n            <div className={'business-rule-exclusion-pane-content'}>\n                <div className={'business-rule-exclusion-pane-content-list'}>\n                    {content}\n                </div>\n            </div>\n\n        </div>\n    }\n}\n\nexport default ExclusionsProcessor;\n\nconst datas = [\n    {attributes: {identifiant: 'Exclude.non.Org', id: 'XX'}},\n]","import React, { Component } from 'react';\nimport {AttributeListGroup, WaitingPane} from \"_components/_common\";\nimport {businessRuleExclusionService} from \"_services/businessRuleExclusion.services\";\nimport {commons} from \"_helpers/commons\";\nimport {toast} from \"react-toastify\";\n\nclass ItemsExclusionAdd extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            formData: {},\n            errors:[]\n        }\n\n        this.create = this.create.bind(this)\n        this.attributesList = this.attributesList.bind(this);\n    }\n\n    create(formData) {\n        formData.businessRuleId = this.props.businessRuleId\n        formData.containerId = this.props.containerId\n        formData.type = \"I\"\n        businessRuleExclusionService.createEntity(formData, this.props.containerId).then(response =>{\n            if(commons.isRequestError(response)){\n                toast.error(commons.toastError(response))\n            }\n            else {\n                this.props.onSuccess()\n            }\n        })\n    }\n\n    attributesList(){\n        const attributesList = {\n            saveButtonTitle: 'AJOUTER',\n            onSubmit: (formData) => this.create(formData),\n            attributes: [\n                {name: 'Identifiant', dataField: 'identifiant', required:true,  placeHolder: 'Identifiant'},\n                {name: 'Début', dataField: 'from', placeHolder: 'Date de début', type: \"datetime\"},\n                {name: 'Fin', dataField: 'to', placeHolder: 'Date de fin', type: \"datetime\"}\n            ]\n        }\n\n        return attributesList;\n    }\n\n    render() {\n        if(this.state.loading){\n            return <WaitingPane/>\n        }\n\n        let errors = []\n        if(this.state.errors.length > 0) {\n            this.state.errors.map(error => {\n                errors.push(<p>{error}</p>)\n            })\n        }\n\n        let formData ={...this.state.formData}\n        return (\n            <div className=\"container-create-root\">\n                <div id=\"form-errors-section\" className=\"form-error\">\n                    {errors}\n                </div>\n                <AttributeListGroup\n                    attributesListConfig={this.attributesList()}\n                    data={formData}\n                    standardFooterActions=\"true\"\n                    formMode='create_object'/>\n            </div>\n        )\n    }\n}\n\nexport default ItemsExclusionAdd;\n","import React, { Component } from 'react';\nimport {DataTable, Wizard} from \"_components/_common\";\nimport ItemsExclusionAdd from \"_components/_admin/BusinessRules/Exclusions/Items/ItemsExclusionAdd\";\nimport {businessRuleExclusionService} from \"_services/businessRuleExclusion.services\";\n\nclass ItemsExclusions extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true\n        }\n\n        this.onCreateSuccess = this.onCreateSuccess.bind(this)\n        this.tableActions = this.tableActions.bind(this)\n        this.remove = this.remove.bind(this)\n    }\n\n    onCreateSuccess(wizardCloseFunction){\n        wizardCloseFunction()\n        this.loadDatas()\n    }\n\n    wizardContent(wizardCloseFunction){\n        return <ItemsExclusionAdd\n                    onSuccess={()=>this.onCreateSuccess(wizardCloseFunction)}\n                    {...this.props}/>\n    }\n\n    componentDidMount() {\n        this.loadDatas()\n    }\n\n    loadDatas(){\n        this.setState({loading: true})\n        businessRuleExclusionService.listEntity(this.props.businessRuleId, \"I\", this.props.containerId).then(response => {\n            this.setState({\n                loading: false,\n                datas: response.data\n            })\n        })\n    }\n\n    remove(id){\n        businessRuleExclusionService.deleteEntity(id, this.props.containerId).then(response => {\n            this.loadDatas()\n        })\n    }\n\n    tableActions(v, item){\n        return <td width={'20%'}>\n            <button onClick={() => this.remove(v.id)}><i className={'fa fa-minus fa-md'}></i>&nbsp;Supprimer</button>\n        </td>\n    }\n\n    tableConfig(){\n        const tableConfig = {\n            columnsConfig: [\n                {name:'Identifiant', dataField: 'attributes.identifiant', headerClass: 'td-left', className: 'td-left'},\n                {name:'Debut', dataField: 'attributes.from', dateFormat: 'DD-MM-YYYY hh:mm:ss', headerClass: 'td-left', className: 'td-left'},\n                {name:'Fin', dataField: 'attributes.to', dateFormat: 'DD-MM-YYYY hh:mm:ss', headerClass: 'td-left', className: 'td-left'},\n                {dataField: \"attributes\", displayComponent: (v,i) => this.tableActions(v, i), headerClass: 'td-left', className: 'td-left'},\n            ],\n        }\n        return tableConfig;\n    }\n\n    table(){\n        let tableConfig = this.tableConfig();\n        let datatable = <DataTable items={JSON.stringify(this.state.datas)}\n                                   tableConfig={tableConfig}\n                                   pagination={false}\n                                   displayTotalElements={false}\n                                   paginate={false}/>\n\n        return datatable\n    }\n\n    render() {\n        let content;\n        if(this.state.loading) {\n            content = <></>\n        }\n        else {\n            content = this.table();\n        }\n\n        return <div className={'business-rule-exclusion-pane'}>\n            <h4>Items</h4>\n            <div className={'btn-toolbar btn-toolbar-right'}>\n                <Wizard buttonTitle={'Ajouter'}\n                        buttonIcon={'fa fa-plus fa-md'}\n                        hideFooter={true}\n                        dialogSize=\"lg\"\n                        dialogTitle=\"Ajouter un item\"\n                        dialogContentProvider={(wizardCloseFunction)=>this.wizardContent(wizardCloseFunction)}/>\n            </div>\n            <div className={'business-rule-exclusion-pane-content'}>\n                <div className={'business-rule-exclusion-pane-content-list'}>\n                    {content}\n                </div>\n            </div>\n\n        </div>\n    }\n}\n\nexport default ItemsExclusions;\n","import React, { Component } from 'react';\nimport {WaitingPane} from \"_components/_common\";\nimport Effectivities from \"_components/_admin/BusinessRules/Exclusions/Effectivity/Effectivities\";\nimport {UserExclusions} from \"_components/_admin/BusinessRules\";\nimport ExclusionsProcessor from \"_components/_admin/BusinessRules/Exclusions/Processors/ExclusionsProcessor\";\nimport ItemsExclusions from \"_components/_admin/BusinessRules/Exclusions/Items/ItemsExclusions\";\n\nclass AllExclusionsView extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n        }\n    }\n\n    render() {\n        if(this.state.loading) {\n            return <WaitingPane/>\n        }\n\n        return <div className={'business-rule-exclusions'}>\n            <UserExclusions {...this.props}/>\n            <ItemsExclusions {...this.props}/>\n            <Effectivities {...this.props}/>\n            <ExclusionsProcessor {...this.props}/>\n        </div>\n    }\n}\n\nexport default AllExclusionsView;\n\n\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Button} from 'reactstrap';\nimport * as actions from '_reducers/actions';\nimport {businessRulesService} from '_services/business.rule.services';\nimport {commons} from '_helpers/commons';\nimport {AttributeListGroup, PersistenceInfo, WaitingPane} from '_components/_common';\nimport UpdateOrder from './UpdateOrder.js';\nimport queryString from 'query-string';\nimport {AllExlusionsView} from \"_components/_admin/BusinessRules/Exclusions\";\nimport {toast} from \"react-toastify\";\n\nconst mapStateToProps = store => ({\n    applicationConfig: store.applicationConfig,\n});\nconst mapDispatchToProps = (disptach) => ({\n    updateApplicationConfigRX: (e) => disptach(actions.updateApplicationConfig(e)),\n})\n\n\n/**\n * Business rule details page\n */\nclass BusinessRuleDetails extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: {},\n            loading: true,\n            businessRuleId: this.getRootObjectForDetailsId(),\n            errors: [],\n            viewMode: 'exclusions'\n        }\n\n        this.activate = this.activate.bind(this)\n        this.deactivate = this.deactivate.bind(this)\n        this.deleteRule = this.deleteRule.bind(this)\n        this.onUpdateSuccess = this.onUpdateSuccess.bind(this)\n        this.getRootObjectForDetailsId = this.getRootObjectForDetailsId.bind(this)\n        this.showView = this.showView.bind(this)\n    }\n\n    showView(view) {\n        this.setState({viewMode: view})\n    }\n\n\n    deleteRule() {\n        businessRulesService.deleteRule(this.getRootObjectForDetailsId()).then(response => {\n            if (this.props.displayListView) {\n                this.props.popBreadCrumb(0);\n                this.props.displayListView(true);\n            }\n        })\n    }\n\n    activate(e) {\n        if (e) e.preventDefault()\n        const businessRuleId = this.getRootObjectForDetailsId()\n        const d = businessRulesService.activate(businessRuleId, this.props.containerId).then(response => {\n            if(commons.isRequestError(response)){\n                toast.error(commons.toastError(response));\n            }\n            else {\n                this.onUpdateSuccess();\n            }\n        })\n    }\n\n    deactivate(e) {\n        if (e) e.preventDefault()\n        const businessRuleId = this.getRootObjectForDetailsId()\n        const d = businessRulesService.desactivate(businessRuleId, this.props.containerId).then(response => {\n            if(commons.isRequestError(response)){\n                toast.error(commons.toastError(response));\n            }\n            else {\n                this.onUpdateSuccess();\n            }\n        })\n    }\n\n    onUpdateSuccess(reloadListView) {\n        this.loadData(this.getRootObjectForDetailsId(), false);\n        if (reloadListView) {\n            this.props.refreshListView();\n        }\n    }\n\n    headerActions() {\n        let canDoAction = true;\n        if (canDoAction === true) {\n            return (\n                <div className={'btn-toolbar btn-toolbar-right'}>\n                    <Button hidden={this.state.viewMode === 'exclusions'}\n                            onClick={() => this.showView('exclusions')}>Exclusions</Button>\n                    <Button hidden={this.state.viewMode === 'details'}\n                            onClick={() => this.showView('details')}>Details</Button>\n                    <Button hidden={this.state.item.data.attributes.active}\n                            onClick={() => this.activate()}>ACTIVER</Button>\n                    <Button hidden={!this.state.item.data.attributes.active}\n                            onClick={() => this.deactivate()}>DÉSACTIVER</Button>\n                    <UpdateOrder\n                        {...this.props}\n                        businessRuleId={this.getRootObjectForDetailsId()}\n                        onUpdateSuccess={this.onUpdateSuccess}\n                        oldOrder={this.state.item.data.attributes.order}/>\n                </div>\n            )\n        }\n\n        return <div></div>\n    }\n\n    componentDidMount() {\n        this.loadData(this.getRootObjectForDetailsId(), false)\n    }\n\n    componentDidUpdate(prevProps, prevtstate) {\n        const prevQueryUrlParams = queryString.parse(prevProps.location.search);\n        const queryUrlParams = queryString.parse(this.props.location.search);\n        let rootId = queryUrlParams.rootId;\n        let prevId = prevQueryUrlParams.rootId;\n        if (prevId !== rootId && rootId) {\n            this.loadData(rootId)\n        }\n    }\n\n    loadData(businessRuleId, updateBread) {\n\n        this.setState({\n            loading: true,\n            item: null,\n        })\n\n        if (businessRuleId) {\n            const d = businessRulesService.getById(businessRuleId, this.props.containerId).then(json => {\n\n                let location = json && json.data ? json.data.attributes.rule : '';\n                if (updateBread && this.props.pushBreadCrumb) {\n                    let item = {'href': '#', title: location}\n                    this.props.pushBreadCrumb(item)\n                }\n\n                this.props.updateApplicationConfigRX(location);\n                this.setState({\n                    item: json,\n                    loading: false\n                });\n\n            }).catch(error => {\n                console.error(error);\n            })\n        }\n    }\n\n    getRootObjectForDetailsId() {\n        const queryUrlParams = queryString.parse(this.props.location.search);\n        let objectforDetailsId = queryUrlParams.rootId;\n        return objectforDetailsId\n    }\n\n    workingContainer(v) {\n        return <td>\n            {commons.getWorkingContainerName(this.props.userContext)}\n        </td>\n    }\n\n    render() {\n\n        if (this.state.loading || !this.state.item) {\n            return <WaitingPane/>\n        }\n\n        const attributesList = {\n            attributes: [\n                {name: 'Nom', dataField: 'attributes.identifier'},\n                {name: 'Description', dataField: 'attributes.description'},\n                {name: 'Evènement déclencheur', dataField: 'attributes.event'},\n                {name: 'Entité', dataField: 'attributes.businessClass'},\n                {name: 'Applicable sur le type métier', dataField: 'attributes.businessType'},\n                {name: 'Règle', dataField: 'attributes.rule'},\n                {name: 'Ordre', dataField: 'attributes.order'},\n                {name: 'Phase', dataField: 'attributes.transactionPhase'},\n                {name: 'Vetoable', dataField: 'attributes.vetoable', type: 'bool'},\n                {name: 'Active', dataField: 'attributes.active', type: 'bool'},\n                {name: 'Conteneur', dataField: 'attributes', displayComponent: (v, i) => this.workingContainer(v, i)},\n            ]\n        };\n\n        let content;\n        const data = this.state.item.data;\n        const d = commons.toJSONObject(data);\n        if (this.state.viewMode === 'exclusions') {\n            content = <AllExlusionsView {...this.props} businessRuleId={this.state.item.data.attributes.id}/>\n        } else {\n            content = <>\n                <div className=\"\">\n                    <p className=\" form-error\">{this.state.errors}</p>\n                    <AttributeListGroup\n                        attributesListConfig={attributesList}\n                        data={d}\n                        displayHeader={true}\n                        addHeaderMargin=\"true\"/>\n                </div>\n\n                <div className=\"\">\n                    <p className=\" form-error\">{this.state.errors}</p>\n                    <PersistenceInfo\n                        {...this.props} data={d}\n                        displayHeader={true}\n                        addHeaderMargin=\"true\"/>\n                </div>\n            </>\n        }\n\n        return <div className={'business-rules-details'}>\n            <div className={'business-rules-details'}>\n                <div className=\"admin-details-header\">\n                    <p className=\"page-title\">{d.attributes.identifier}</p>\n                    {this.headerActions()}\n                </div>\n                {content}\n            </div>\n        </div>\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BusinessRuleDetails);\n","\nexport const updateApplicationConfig = (payload) => ({\n    type: 'UPDATE_APPLICATION_PROPERTIES_PAGE_TITLE',\n    payload: payload,\n});\n\nexport const addBase64imageToCache = (payload) => ({\n    type: 'ADD_BASE64_IMAGE_TO_CACHE',\n    payload: payload,\n});\n\nexport const clearImagesCache = (payload) => ({\n    type: 'CLEAR_IMAGE_CACHE',\n    payload: {},\n});\n","import { _doGet, buildURLQuery, API_ROOT, _doPost, _doPut } from './utils/services.config';\n\nexport const lifecycleManagedService = {\n\t\tstatesByAction,\n\t\tallStates,\n\t\tfireStateMailing,\n\t\tlifecycleName,\n\t\tlifecycleHistory\n}\nasync function lifecycleHistory(lifecycleManagedId, containerId){\n\tconst uri = '/api/secured/v1/katappult/lifecycleManaged/lifecycleHistory?containerId=' + containerId + '&entityId=' + lifecycleManagedId;\n\tlet url = `${API_ROOT}` + uri\n\treturn _doGet(url)\n}\nasync function lifecycleName(lifecycleManagedId, containerId){\n\tconst uri = '/api/secured/v1/katappult/lifecycleManaged/lifecycleName?containerId=' + containerId + '&entityId=' + lifecycleManagedId;\n    let url = `${API_ROOT}` + uri\n\treturn _doGet(url)\n}\nasync function statesByAction(lifecycleManagedId, fromState, actionName, containerId){\n\tconst uri = '/api/secured/v1/katappult/lifecycleManaged/statesByAction?fromState=' + fromState + '&actionName=' + actionName + '&containerId=' + containerId + '&entityId=' + lifecycleManagedId;\n    let url = `${API_ROOT}` + uri\n\treturn _doGet(url)\n}\nasync function allStates(lifecycleManagedId, containerId){\n\tconst uri = '/api/secured/v1/katappult/lifecycleManaged/allStates?containerId=' + containerId + '&entityId=' + lifecycleManagedId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\nasync function fireStateMailing(lifecycleManagedId, containerId){\n\tconst uri = '/api/secured/v1/katappult/lifecycleManaged/fireStateMailing?containerId=' + containerId + '&entityId=' + lifecycleManagedId;\n    let url = `${API_ROOT}` + uri\n\treturn _doPost(url)\n}\n","import React from 'react';\n\nexport const StatusHelper = {\n\tgetDisplay,\n\tgetDisplayForStatus,\n\tgetAction,\n\tuiDisplay\n}\n\nfunction getAction(action){\n\treturn  getDisplay()\n}\n\nfunction getDisplay(status) {\n\tif(status === 'NEW') return 'Nouveau'\n\tif(status === 'DRAFT') return 'Brouillon'\n\tif(status === 'ARCHIVED') return 'Archiver'\n\tif(status === 'CONFIRMED') return 'Confirmer'\n\tif(status === 'TO_DELIVER') return 'A Livrer'\n\tif(status === 'DELIVERED') return 'Livrer'\n\tif(status === 'CANCELED_BY_USER') return 'Annuler'\n\tif(status === 'CANCELED_BY_USR') return 'Annuler'\n\tif(status === 'CANCELED_BY_ADM') return 'Annuler'\n\tif(status === 'DELIVERING') return 'En cours de livraison'\n\tif(status === 'PUBLISHED') return 'Publier'\n\tif(status === 'PENDING') return 'En attente'\n\tif(status === 'PAYED') return 'Payer'\n\tif(status === 'CANCELLED') return 'Annuler'\n\tif(status === 'OUT_OF_STOCK') return 'En rupture de stock'\n\tif(status === 'SUSPENDED') return 'Suspendu'\n\tif(status === 'DISCONTINUED') return 'Indisponible'\n\tif(status === 'RETIRED') return 'Retirer'\n\tif(status === 'AVALAIBLE') return 'Disponible'\n\tif(status === 'AVAILABLE') return 'Disponible'\n\tif(status === 'IN_VALIDATION') return 'Valider'\n\tif(status === 'LOCKED_MEMBER') return 'Bloquer'\n\tif(status === 'DRAFT_STATE') return 'Brouillon'\n\tif(status === 'REQUEST_IN_PROGRESS') return 'En cours'\n\tif(status === 'RETIRED_MEMBER') return 'Retirer'\n\tif(status === 'OBSELETE_STATE') return 'Obsolete'\n\tif(status === 'PRE_RELEASE_STATE') return 'En attente de validation'\n\tif(status === 'IN_WORK') return 'Reserver'\n\tif(status === 'RELEASED_STATE') return 'Valider'\n\tif(status === 'VALID_MEMBER') return 'Membre'\n\tif(status === 'PROMOTE') return 'PROMOUVOIR LE STATUT'\n\tif(status === 'SET_STATE') return 'CHANGER LE STATUT'\n\tif(status === 'ADMIN_SET_STATE') return 'CHANGER LE STATUT'\n\tif(status === 'REVISE') return 'REVISER'\n\tif(status === 'ACCEPTED') return 'ACCEPTER'\n\tif(status === 'REFUSED') return 'REFUSER'\n\tif(status === 'CLOSED') return 'FERMER'\n\treturn status\n}\n\nfunction getDisplayForStatus(status) {\n\tif(!status) return \"\"\n\tif(status.toUpperCase() === 'NEW') return 'Nouveau'\n\tif(status.toUpperCase() === 'DRAFT') return 'Brouillon'\n\tif(status.toUpperCase() === 'ARCHIVED') return 'Archivé'\n\tif(status.toUpperCase() === 'CONFIRMED') return 'Confirmé'\n\tif(status.toUpperCase() === 'TO_DELIVER') return 'À livrer'\n\tif(status.toUpperCase() === 'DELIVERED') return 'Livré'\n\tif(status.toUpperCase() === 'CANCELED_BY_USER') return 'Annulé'\n\tif(status.toUpperCase() === 'CANCELED_BY_USR') return 'Annulé'\n\tif(status.toUpperCase() === 'CANCELED_BY_ADM') return 'Annulé'\n\tif(status.toUpperCase() === 'DELIVERING') return 'En livraison'\n\tif(status.toUpperCase() === 'PUBLISHED') return 'Publié'\n\tif(status.toUpperCase() === 'PENDING') return 'En attente'\n\tif(status.toUpperCase() === 'PAYED') return 'Payé'\n\tif(status.toUpperCase() === 'CANCELLED') return 'Annulé'\n\tif(status.toUpperCase() === 'OUT_OF_STOCK') return 'Rupture de stock'\n\tif(status.toUpperCase() === 'SUSPENDED') return 'Suspendu'\n\tif(status.toUpperCase() === 'DISCONTINUED') return 'Indisponible'\n\tif(status.toUpperCase() === 'RETIRED') return 'Retiré'\n\tif(status.toUpperCase() === 'AVALAIBLE') return 'Disponible'\n\tif(status.toUpperCase() === 'AVAILABLE') return 'Disponible'\n\tif(status.toUpperCase() === 'IN_VALIDATION') return 'Validation en cours'\n\tif(status.toUpperCase() === 'LOCKED_MEMBER') return 'bloqué'\n\tif(status.toUpperCase() === 'DRAFT_STATE') return 'Brouillon'\n\tif(status.toUpperCase() === 'REQUEST_IN_PROGRESS') return 'En cours'\n\tif(status.toUpperCase() === 'RETIRED_MEMBER') return 'Retiré'\n\tif(status.toUpperCase() === 'OBSELETE_STATE') return 'Obsolete'\n\tif(status.toUpperCase() === 'PRE_RELEASE_STATE') return 'En attente de validation'\n\tif(status.toUpperCase() === 'IN_WORK') return 'Copie de travail'\n\tif(status.toUpperCase() === 'RELEASED_STATE') return 'Validé'\n\tif(status.toUpperCase() === 'VALID_MEMBER') return 'Membre'\n\tif(status.toUpperCase() === 'VALID') return 'Validé'\n\tif(status.toUpperCase() === 'ACCEPTED') return 'Accepté'\n\tif(status.toUpperCase() === 'REFUSED') return 'Refusé'\n\tif(status.toUpperCase() === 'CLOSED') return 'Fermé'\n\treturn status\n}\n\nfunction uiDisplay(status){\n\tif(!status) return <></>\n\tconst statusWithoutBlank = status.replace(/\\s/g,'').toLowerCase();\n\treturn <div className={'status-display ' + 'status-display-' + statusWithoutBlank}>\n\t\t<i className={'fa fa-lg fa-tag'}></i>\n\t\t<span>{getDisplayForStatus(status)}</span>\n\t</div>\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { lifecycleService } from '_services/lifecycle.services';\nimport { lifecycleManagedService } from '_services/lifecycleManaged.services';\nimport {WizardConfirm} from '_components/_common';\nimport { DropdownButton} from 'react-bootstrap'\nimport {StatusHelper} from '_helpers/StatusHelper';\n\nconst propTypes = {\n\t\tlifecycleManagedId: PropTypes.string.isRequired,\n\t\tbyActionName: PropTypes.string.isRequired,\n\t\tcurrentState: PropTypes.string.isRequired,\n\t\trefreshCallBack: PropTypes.func,\n}\nconst defaultProps = {\n\t\trefreshCallBack: null,\n\t\tbyActionName: 'USER_SET_STATE'\n}\n/**\n * Actions for LifecycleManaged entity\n */\nclass LifecycleManagedActions extends Component {\n\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tmodal: '',\n\t\t\treachableStates: [],\n\t\t}\n\n\t\tthis.loadReachableState = this.loadReachableState.bind(this)\n\t\tthis.confirmModalSetState = this.confirmModalSetState.bind(this)\n\t\tthis.onCommentChange = this.onCommentChange.bind(this)\n\t}\n\t/**\n\t * Toggle the modal\n\t */\n\ttoggleModal(state) {\n\t\tthis.setState(prevState => ({\n    \t\tmodal: state\n\t\t})\n\t  )\n\t}\n\n\tcomponentWillUpdate(nextProps, prevstate){\n\t\tif(nextProps.currentState !== this.props.currentState){\n\t\t\tthis.loadReachableState(nextProps.currentState)\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.loadReachableState(this.props.currentState)\n\t}\n\n\tloadReachableState(status){\n\t\tlifecycleManagedService.statesByAction(this.props.lifecycleManagedId, status, this.props.byActionName, this.props.containerId).then(response => {\n\n\t\t\tlet reachableStates = [];\n\t\t\tif(response && response.data && response.data.attributes){\n\n\t\t\t\tif(response.data.attributes.statesByAction !== null &&\n\t\t\t\t\tresponse.data.attributes.statesByAction !== undefined){\n\n\t\t\t\t\tresponse.data.attributes.statesByAction.split(\";\").map(state => {\n\t\t\t\t\t\tlet realState = state;\n\t\t\t\t\t\tif(realState.startsWith(';')){\n\t\t\t\t\t\t\trealState = realState.slice(1, realState.length);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(realState.endsWith(';')){\n\t\t\t\t\t\t\trealState = realState.slice(0, realState.length - 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(realState && realState.trim().length > 0){\n\t\t\t\t\t\t\treachableStates.push(realState);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.setState({reachableStates: reachableStates})\n\t\t})\n\t}\n\n\tonCommentChange(e){\n\t\tthis.setState({\n\t\t\tcomment: e.target.value\n\t\t})\n\t}\n\n\tconfirmDialogContent(){\n\t\treturn <textarea rows={10}\n\t\t\t\t\t\t maxLength={500}\n\t\t\t\t\t\t onChange={e => this.onCommentChange(e)}\n\t\t\t\t\t\t name={'comment'}\n\t\t\t\t\t\t placeholder={'Votre commentaire'}/>\n\t}\n\n\tconfirmModalSetState(state, label, length){\n\t\tconst status = StatusHelper.getDisplay(state);\n\t\tconst className = this.props.inlineButtons ? '' : 'lifecycle-confirm-each';\n\t\treturn <WizardConfirm\n\t\t\t\t\tmodalSize='md'\n\t\t\t\t\tdialogContent={()=>this.confirmDialogContent()}\n\t\t\t\t\tbuttonSize={this.props.lifecycleAction && this.props.lifecycleAction.buttonSize ? this.props.lifecycleAction.buttonSize : \"sm\"}\n\t\t\t\t\tbuttonClassName={className}\n\t\t\t\t\tbuttonColor={this.props.lifecycleAction && this.props.lifecycleAction.buttonColor ? this.props.lifecycleAction.buttonColor : \"outline-secondary\"}\n\t\t\t\t\tbuttonTitle={status.toUpperCase()}\n\t\t\t\t\tonConfirm={() => this.doSetState(state)}\n\t\t\t\t\tdialogMessage=\"Commentaire\"\n\t\t\t\t\tbodyClassName={'lifecycle-confirm'}\n\t\t\t\t\tdialogTitle={status.toUpperCase()}/>\n\t}\n\n\tdoSetState(state){\n\t\tthis.toggleModal()\n\t\tthis.setState({\n\t\t\tloaded: false\n\t\t})\n\n\t\tconst form = {\n\t\t\tcomment: this.state.comment\n\t\t}\n\n\t\tlet lifecycleManagedId = this.props.lifecycleManagedId\n\t\tlifecycleService.setStateWithComment(lifecycleManagedId, state, form, this.props.containerId).then(response => {\n\t\t\tif(this.props.refreshCallBack){\n\t\t\t\tthis.props.refreshCallBack(response)\n\t\t\t}\n\t\t})\n\t}\n\n\tlifecycleManagedActions(){\n\t\tlet lifecycleBySetStateActions = []\n\t\tif(this.state.reachableStates.length > 1 ) {\n\t\t\tthis.state.reachableStates.map(state => {\n\t\t\t\tif(state && state.trim().length > 0){\n\t\t\t\t\tlifecycleBySetStateActions.push(\n\t\t\t\t\t\tthis.confirmModalSetState(state, state, this.state.reachableStates.length)\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif(this.state.reachableStates.length === 1 ) {\n\t\t\tconst status = this.state.reachableStates[0];\n\t\t\tlifecycleBySetStateActions.push(\n\t\t\t\t<WizardConfirm\n\t\t\t\t\tmodalSize='md'\n\t\t\t\t\tdialogContent={()=>this.confirmDialogContent()}\n\t\t\t\t\tbuttonSize={\"sm\"}\n\t\t\t\t\tbuttonClassName={\"btn btn-primary\"}\n\t\t\t\t\tbuttonTitle={status.toUpperCase()}\n\t\t\t\t\tonConfirm={() => this.doSetState(status)}\n\t\t\t\t\tdialogMessage=\"Commentaire\"\n\t\t\t\t\tbodyClassName={'lifecycle-confirm'}\n\t\t\t\t\tdialogTitle={status.toUpperCase()}/>\n\t\t\t)\n\t\t}\n\n\t\tif(lifecycleBySetStateActions.length > 0){\n\t\t\tif(lifecycleBySetStateActions.length === 1){\n\t\t\t\treturn lifecycleBySetStateActions;\n\t\t\t}\n\n\t\t\tlet size = this.props.buttonSize ? this.props.buttonSize : \"sm\";\n\n\t\t\tif(this.props.inlineButtons){\n\t\t\t\treturn lifecycleBySetStateActions;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst suite = <>\n\t\t\t\t\t<span>Suite</span>&nbsp;&nbsp;\n\t\t\t\t\t<i className={'fa fa-lg fa-angle-down'}></i>\n\t\t\t\t</>\n\t\t\t\treturn  <>\n\t\t\t\t\t<DropdownButton title={suite}\n\t\t\t\t\t\tvariant=\"outline-info\"\n\t\t\t\t\t\tsize={size}\n\t\t\t\t\t\tid=\"dropdown-basic-button\">\n\t\t\t\t\t  \t{lifecycleBySetStateActions}\n\t\t\t\t\t</DropdownButton>\n\t\t\t\t</>\n\t\t\t}\n\t\t}\n\n\t\treturn <></>;\n\t}\n\n\trender(){\n\t\treturn (<>\n\t\t\t\t{this.lifecycleManagedActions()}\n\t\t\t</>\n\t\t)\n\t}\n}\n\nLifecycleManagedActions.propTypes = propTypes;\nLifecycleManagedActions.defaultProps = defaultProps;\n\n\nexport default LifecycleManagedActions;\n","import React, { Component } from 'react';\nimport { Button,} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport AttributeListGroup from '_components/_common/AttributeListGroup';\nimport { lifecycleManagedService } from '_services/lifecycleManaged.services';\n\nconst propTypes = {\n\tdata: PropTypes.object,\n};\n\nconst defaultProps = {\n};\n/**\n * Displays lifecyle managed lifecycle informations panel\n */\nclass LifecycleInfo extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n        \tallStates: '',\n        \tlifecycleName: ''\n        }\n    }\n    \n    componentDidMount(){\n    \tconst item = this.props.data;\n    \tconst id = item.attributes.id\n    \t\n    \tlifecycleManagedService.allStates(id, this.props.containerId).then(response => {\n    \t\tif(response && response.data && response.data.attributes){\n    \t\t\tlet allStates = response.data.attributes.allStates\n    \t\t\tthis.setState({\n    \t\t\t\tallStates: allStates.split(',').join(', ')\n    \t\t\t})\n    \t\t}\n    \t})\n    \t\n    \tlifecycleManagedService.lifecycleName(id, this.props.containerId).then(response => {\n    \t\tif(response && response.data && response.data.attributes){\n    \t\t\tthis.setState({\n        \t\t\tlifecycleName: response.data.attributes.lifecycle,\n        \t\t\tlifecycleMasterId: response.data.attributes.lifecycleMasterFullId,\n        \t\t\tlifecycleFullId: response.data.attributes.lifecycleFullId\n        \t\t})\n    \t\t}\n    \t})\n    }\n\n    lifecycleName(){\n    \tif(this.state.lifecycleName === ''){\n    \t\treturn '-'\n    \t}\n    \telse {\n    \t\tconst uri = this.props.location ? this.props.location.pathname : '##',\n    \t\tlink = \"/#\" + uri + '/lifecycle/' + this.state.lifecycleFullId\n    \t\treturn <>\n    \t\t\t<Button className='btn-link katappult-link' color=\"white\" href={link}>{this.state.lifecycleName}</Button>\n    \t\t</>\n    \t}\n    }\n\n\trender() {\n\t\tconst item = this.props.data,\n\t\t\tallStates = this.state.allStates;\n\n\t\tconst config = {\n                title: 'Lifecycle infos',\n                icon: 'fa fa-info float-right',\n                attributes: [\n                    {name: 'Current state',  dataField: 'attributes.lifecycleInfo.currentState', type: 'text'},\n                    {name: 'All states', staticValue: allStates},\n                    {name: 'Lifecycle', displayComponent: () => this.lifecycleName()},\n                ],\n         };\n\n\t\tconst display = <AttributeListGroup {...this.props}\n                attributesListConfig={config} \n                data={item} \n                orientation=\"horizontal\" \n                displayHeader={this.props.displayHeader} \n                cardClassName={this.props.cardClassName}/>\n        \n\t\treturn (<React.Fragment>{display}</React.Fragment>)\n\t}\n}\n\nLifecycleInfo.propTypes = propTypes;\nLifecycleInfo.defaultProps = defaultProps;\n\nexport default LifecycleInfo;\n\n","import React, { Component } from 'react';\nimport { AttributeListGroup} from '_components/_common';\nimport {WaitingPane} from \"_components/_common\";\nimport {lifecycleService} from \"_services/lifecycle.services\";\nimport {toast} from \"react-toastify\";\n\nclass LifecycleAdd extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            formData: {},\n            errors:[]\n        }\n\n        this.createLifecycle = this.createLifecycle.bind(this)\n    }\n\n    async createLifecycle(formData) {\n        this.setState({loading:true})\n\n        formData.containerId = this.props.containerId;\n\n        let formData2 = new FormData()\n        formData2.append('file', formData.masterFile)\n        formData2.append('form', JSON.stringify(formData));\n\n        lifecycleService.createLifecycle(formData2, this.props.containerId).then(response => {\n            this.setState({loading: false})\n            this.props.onCreateSucess();\n            toast.success(\"Le cycle de vie a été créé\")\n        })\n    }\n\n    /**\n     * Attributes list\n     */\n    attributesList(){\n        const attributesList = {\n            formId: 'dt-form',\n            saveButtonTitle: 'CRÉER',\n            onSubmit: (formData) => this.createLifecycle(formData),\n            attributes: [\n                {name: 'Nom', dataField: 'name', required:true,  placeHolder: 'Nom', pattern:\"[-_ a-zA-Z0-9]+\"},\n                {name: 'Description', dataField: 'description',  required: true, placeHolder: 'Description'},\n                {name: 'Contenu', dataField: 'primary', type:'file' ,required: true, placeHolder: 'Contenu'},\n            ]\n        }\n\n        return attributesList;\n    }\n\n    render() {\n        if(this.state.loading){\n            return <WaitingPane/>\n        }\n\n        let errors = []\n        if(this.state.errors.length > 0) {\n            this.state.errors.map(error => {\n                errors.push(<p>{error}</p>)\n            })\n        }\n\n        let formData ={...this.state.formData}\n        return (\n            <div className=\"container-create-root\">\n                <div id=\"form-errors-section\" className=\"form-error\">\n                    {errors}\n                </div>\n                <AttributeListGroup\n                    attributesListConfig={this.attributesList()}\n                    data={formData}\n                    standardFooterActions=\"true\"\n                    formMode='create_object'/>\n            </div>\n        )\n    }\n}\n\nexport default LifecycleAdd;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {ButtonToolbar, ButtonGroup, Input} from 'reactstrap';\nimport { DataTable, EmptyPane, WaitingPane } from '_components/_common';\nimport { LifecycleDetails } from '_components/_admin';\nimport { containerService } from '_services/container.services';\nimport { connect } from 'react-redux';\nimport { workableService } from '_services/workable.services';\nimport {contentHolderService} from '_services/contentHolder.services'\nimport { Form } from 'react-bootstrap'\nimport Button from 'react-bootstrap/Button'\nimport queryString from 'query-string';\nimport {coreUri} from '_helpers/CoreUri'\nimport {WizardConfirm} from \"_components/_common\";\nimport LifecycleAdd from \"_components/_admin/Lifecycles/LifecycleAdd\";\nimport {lifecycleService} from \"_services/lifecycle.services\";\nimport {toast} from \"react-toastify\";\n\nconst mapStateToProps = store => ({\n\tlifecycleNavCriterias: store.applicationConfig.lifecycleNavCriterias,\n})\n\nconst mapDispatchToProps = (disptach) => ({\n\tupdateLifecyclesCriteriasRX: (e) => disptach(updateLifecyclesCriterias(e)),\n})\n\n/**\n * Lifecycles management page\n */\nclass Lifecycles extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tlet page = 0;\n\t\tlet includeParentsItem = false;\n\n\t\tif(this.props.lifecycleNavCriterias){\n\t\t\tpage = this.props.lifecycleNavCriterias.page\n\t\t}\n\n\t\tthis.state = {\n\t\t\tloading: true,\n\t\t\titems: [],\n\t\t\tmetaData: '',\n\n\t\t\tqueryFilters:{\n\t\t\t\trowPerPage: 20,\n\t\t\t\tpage: page,\n\t\t\t\tincludeParentsItem: includeParentsItem,\n\t\t\t},\n\t\t}\n\n\t\tthis.loadData = this.loadData.bind(this)\n\t\tthis.goToPage = this.goToPage.bind(this)\n\t\tthis.edit = this.edit.bind(this)\n\t\tthis.includeParentsItemCheck = this.includeParentsItemCheck.bind(this)\n\t\tthis.switchToView = this.switchToView.bind(this)\n\t\tthis.refreshView = this.refreshView.bind(this)\n\t\tthis.getRootObjectForDetailsId = this.getRootObjectForDetailsId.bind(this)\n\t\tthis.onCreateSuccess = this.onCreateSuccess.bind(this)\n\t}\n\n\trefreshView(viewMode){\n\t\tthis.loadData(viewMode)\n\t}\n\n\tswitchToView(e, name){\n\t\te.preventDefault()\n\t\tthis.setState({\n\t\t\tviewMode: name\n\t\t})\n\t}\n\n\tsetNavCriteriasPage(i){\n\t\tlet payload = {}\n\t\tpayload.page = i;\n\t\tpayload.includeParentsItem = this.state.includeParentsItem;\n\t\tthis.props.updateLifecyclesCriteriasRX(payload);\n\t}\n\n\tedit(e, lifecycleId){\n\t\te.preventDefault();\n\t\tworkableService.workingCopy(lifecycleId).then(response => {\n\t\t\tif(response && response.data){\n\t\t\t\tlet wcId = response.data.attributes.id, link;\n\t\t\t\tif(this.props.detailsViewUriProvider){\n\t\t\t\t\tlink = this.props.detailsViewUriProvider(wcId);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst uri = this.props.location.pathname\n\t\t\t\t\tlink = uri + wcId\n\t\t\t\t}\n\n\t\t\t\tthis.props.history.push(link)\n\t\t\t}\n\t\t})\n\t}\n\n\tsetObsolete(lifecycleId){\n\t\tthis.setState({loading: true})\n\t\tlifecycleService.archive(lifecycleId, this.props.containerId).then(response => {\n\t\t\tthis.setState({loading: false})\n\t\t\tif(response.ok){\n\t\t\t\ttoast.success(\"Le cycle de vie a été archivé\")\n\t\t\t\tthis.componentDidMount()\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttoast.error(\"Le cycle de vie n'a pas été archivé\")\n\t\t\t}\n\t\t})\n\t}\n\n\tmoreActions = (val) => {\n\t\treturn (\n\t\t\t<td className=\"td-left\">\n\t\t\t\t<div className={'btn-toolbar'}>\n\t\t\t\t\t<WizardConfirm\n\t\t\t\t\t\tbuttonTitle={\"Archiver\".toUpperCase()}\n\t\t\t\t\t\tonConfirm={() => this.setObsolete(val.id)}\n\t\t\t\t\t\tdialogMessage=\"Archiver le cycle de vie?\"\n\t\t\t\t\t\tdialogTitle={\"Archiver le cycle de vie\".toUpperCase()}/>\n\t\t\t\t</div>\n\t\t\t</td>\n\t\t)\n\t}\n\n\tmoreActions2 = (val) => {\n\t\treturn (\n\t\t\t<td className=\"td-left\" width={'5%'}>\n\t\t\t\t<div className={'btn-toolbar'}>\n\t\t\t\t\t<Link onClick={e => this.selectLifecycle(e, val.id)}>\n\t\t\t\t\t\t<i className={'fa fa-chevron-right fa-lg'}></i>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</td>\n\t\t)\n\t}\n\n\t/**\n\t * Generates context menu\n\t */\n\teditAction = (val) => {\n\t\tif(val.workInfo.lockedSince !== null && val.workInfo.lockedSince !== ''){\n\t\t\treturn (\n\t\t\t\t\t<td className=\"td-left\">\n\t\t\t\t\t\t<Button onClick={e => this.edit(e, val.id)}><i className=\"fa fa-edit\"></i>&nbsp;EDIT</Button>\n\t\t\t\t\t</td>\n\t\t\t)\n\t\t}\n\t\treturn <td></td>\n\t}\n\n\tselectLifecycle(e, id){\n\t\tif(e) e.preventDefault();\n\t\tconst url = coreUri.backOfficeViewURL(\"platform\", \"lifecycles\", [\"rootId=\" +  id]);\n\t\tthis.props.history.push(url)\n\t}\n\n\t /**\n\t * Generates href with link to details view\n\t */\n\tlinkTo = (val, item) => {\n\t\tlet link = this.url(item.attributes.id)\n\t\treturn <td>\n\t\t\t\t<Link className={'table-link'} onClick={e=>this.selectLifecycle(e,item.attributes.id)}>{val.name}</Link>\n\t\t</td>\n\t}\n\n\turl(itemId){\n\t\tlet link = null\n\t\tif(this.props.detailsViewUriProvider){\n\t\t\tlink = this.props.detailsViewUriProvider(itemId);\n\t\t}\n\t\telse {\n\t\t\tconst uri = this.props.location.pathname\n\t\t\tlink = uri + itemId\n\t\t}\n\t\treturn link\n\t}\n\n\tgoToPage(i){\n\t\tlet queryFilters = {...this.state.queryFilters}\n\t\tqueryFilters.page = i\n\t\tthis.setNavCriteriasPage(i)\n\t\tthis.setState({\n\t\t\tqueryFilters: queryFilters\n\t\t})\n\t}\n\n\tviewPrimaryContent(e, item){\n\t\te.preventDefault()\n\t\tcontentHolderService.downloadPrimaryContent(item.id, this.props.containerId).then( response => {\n\t\t\tlet blob = new Blob([response], { type: 'text/plain' });\n\t\t\tlet blobUrl = URL.createObjectURL(blob);\n\t\t\tlet w = window.open(blobUrl)\n\t\t})\n\t}\n\n\tloadData(viewMode){\n\n\t\tlet currentViewMode = this.state.viewMode;\n\t\tthis.setState({\n\t\t\tloading: true,\n\t\t\tviewMode: viewMode ? viewMode : currentViewMode\n\t\t})\n\n\t\tlet queryFilters = {...this.state.queryFilters}\n\t\t\tcontainerService.getAllLifecycles(this.props.containerId, queryFilters.page, queryFilters.rowPerPage, queryFilters.includeParentsItem).then(json => {\n\t\t\t\tthis.setState({\n\t\t\t\t\titems: json && json.data ? json.data : [],\n\t\t\t\t\tmetaData:  json && json.data ? json.metaData : {},\n\t\t\t\t\tloading: false,\n\t\t\t\t\tviewMode: viewMode ? viewMode : currentViewMode\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error);\n\t\t\t\tthis.setState({loading: false,})\n\t\t\t})\n\t}\n\n\tincludeParentsItemCheck(e){\n\t\tlet queryFilters = {...this.state.queryFilters}\n\t\tqueryFilters.includeParentsItem = e.target.checked\n\t\tthis.setState({\n\t\t\tqueryFilters: queryFilters\n\t\t})\n\t}\n\n\tcomponentDidUpdate(prevprops, prevState){\n\t\tif(prevState.queryFilters !== this.state.queryFilters){\n\t\t\tthis.loadData()\n\t\t}\n\n\t\tif(prevState.viewMode !== this.props.viewMode){\n\t\t\tthis.setState({viewMode: this.props.viewMode})\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.setNavCriteriasPage(0)\n\t\tthis.loadData()\n\t}\n\n\tcommonHeader(){\n\t\treturn ( <div className=\"katappult-admin-header shadowed-pane\">\n\t\t\t<div>\n\t\t\t    <ButtonToolbar  className=\"justify-content-between\">\n\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t<Button  onClick={e=>this.switchToView(e, 'synch')}><i className=\"fa fa-md fa-cloud-upload\"></i> Upload</Button>\n\t\t\t\t\t\t<Button  onClick={e=>this.refreshView()}><i className=\"fa fa-md fa-refresh\"></i> Refresh</Button>\n\t\t\t\t\t\t<Button  onClick={e=>this.switchToView(e, 'viewList')}><i className=\"fa fa-md fa-th-list\"></i> Navigate</Button>\n\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t<Form.Check\n\t\t\t        \t\ttype=\"switch\"\n\t\t\t        \t\tid=\"custom-switch\"\n\t\t\t        \t\tchecked={this.state.includeParentsItem}\n\t\t\t        \t\tvalue={this.state.includeParentsItem}\n\t\t\t        \t\tonChange={this.includeParentsItemCheck}\n\t\t\t        \t\tlabel=\"Parent items\"/>\n\t\t\t\t   </ButtonGroup>\n\t\t\t\t</ButtonToolbar>\n\t\t\t</div>\n\t\t</div>\n\t )\n\t}\n\n\tgetRootObjectForDetailsId(){\n\t\t\tconst queryUrlParams = queryString.parse(this.props.location.search);\n\t\t\tlet objectforDetailsId = queryUrlParams.rootId;\n\t\t\treturn objectforDetailsId\n\t}\n\n\tonCreateSuccess(wizardCloseFunction){\n\t\twizardCloseFunction()\n\t\tthis.componentDidMount()\n\t}\n\n\tnewLifecycleWizardContent(wizardCloseFunction){\n\t\treturn <>\n\t\t\t<LifecycleAdd onCreateSucess={()=>this.onCreateSuccess(wizardCloseFunction)}{...this.props}/>\n\t\t</>\n\t}\n\n\trender() {\n\t\tlet content,headerActions, header = this.commonHeader();\n\n\t\tlet objectforDetailsId = this.getRootObjectForDetailsId()\n\t\tif(!objectforDetailsId){\n\t\t\t\tconst items = this.state.items;\n\t\t\t\tconst metaData = this.state.metaData;\n\t\t\t\tconst tableConfig = {\n\t\t\t\t\t\tcolumnsConfig: [\n\t\t\t\t\t\t  \t{ name: 'Nom', displayComponent: (v, i) => this.linkTo(v,i), dataField: 'attributes', defaultSortOrder: 'asc', headerClassName: 'td-left', className: 'td-left' },\n\t\t\t\t\t\t  \t{ name:'Description', dataField: 'attributes.description', headerClassName: 'td-left', className: 'td-left'},\n\t\t        \t\t    { name:'Modification', dataField: 'attributes.lastModifiedDate', dateFormat: 'DD/MMM/YYYY', headerClassName: 'td-left', className: 'td-left' },\n\t\t\t\t\t\t  \t{ displayComponent: (e, v) => this.moreActions(e, v.id), dataField: 'attributes', headerClassName: 'td-left', className: 'td-left'},\n\t\t\t\t\t\t\t{ displayComponent: (e, v) => this.moreActions2(e, v.id), dataField: 'attributes', headerClassName: 'td-left', className: 'td-left'},\n\t\t\t\t\t\t],\n\t\t\t\t}\n\n\t\t\t\tif(this.state.loading === true){\n\t\t\t\t\tcontent = <WaitingPane />\n\t\t\t\t}\n\t\t\t\telse if(items !== null && items.length > 0){\n\t\t\t\t\tcontent = <DataTable items={JSON.stringify(items)}\n\t\t\t\t\t\t\t\ttableClassName=\"data-table\"\n\t\t\t\t\t\t\t\tgoToPage={this.goToPage}\n\t\t\t\t\t\t\t\tpagination={true}\n\t\t\t\t\t\t\t\tdisplayTotalElements={true}\n\t\t\t\t\t\t\t\tmetaData={JSON.stringify(metaData)}\n\t\t\t\t\t\t\t\ttableConfig={tableConfig}/>\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcontent = <EmptyPane hideMainMessage={true} secondaryMessage=\"Pas de cycle de vie dans le conteneur courant\" />\n\t\t\t\t}\n\n\t\t\treturn <div className=\"portlet-box lifecycles\">\n\t  \t\t\t\t<div className=\"admin-filters-root admin-filters-root-withPadding\">\n\t\t\t\t\t    \t<Input type=\"text\"\n\t\t\t\t\t    \t\tclassName=\"admin-hover-input\"\n\t\t\t\t\t    \t\tname=\"input1-group2\"\n\t\t\t\t\t    \t\tplaceholder=\"Chercher un élément\"\n\t\t\t\t\t    \t\tautocomplete=\"off\"\n\t\t\t\t\t    \t\tdefaultValue={this.state.searchTerm}/>\n\t\t\t\t    </div>\n    \t\t\t  <div className=\"portlet-content\">\n\t\t\t\t\t  {content}\n    \t\t\t  </div>\n    \t\t</div>\n\t\t}\n\n\t\treturn <LifecycleDetails\n\t\t\t\t\t{...this.props}\n\t\t\t\t\trefreshListView={this.refreshView}\n\t\t\t\t\tpushBreadCrumb={this.props.pushBreadCrumb}/>\n\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Lifecycles)\n\nexport const updateLifecyclesCriterias = (payload) => ({\n    type: 'APPLICATION_UPDATE_LIFECYCLE_NAV_CRITERIAS',\n    payload: payload\n});\n","import React, { Component } from 'react';\nimport {lifecycleService} from \"_services/lifecycle.services\";\nimport {StatusHelper} from \"_helpers/StatusHelper\";\n\nclass LifecycleTransitions extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(this.props.lifecycleId !== prevProps.lifecycleId && this.props.lifecycleId){\n            lifecycleService.lifecycleTransitions(this.props.lifecycleId, this.props.containerId).then(response => {\n            })\n        }\n    }\n\n    componentDidMount() {\n        lifecycleService.lifecycleTransitions(this.props.lifecycleId, this.props.containerId).then(response => {\n            //console.log('res:  '+ JSON.stringify(response))\n            this.setState({\n                transitions: response && response.data ? response.data : []\n            })\n        })\n    }\n\n    getTransitions(){\n        let transitions = [];\n        if(this.state.transitions){\n            this.state.transitions.map(transition => {\n                let action = transition.attributes.action\n                transitions.push(<div className={'lifecycle-transition-view'}>\n                        <div className={'from-state'}>{StatusHelper.getDisplayForStatus(transition.attributes.fromState)}</div>\n                        <div className={'action action_' + action}>{StatusHelper.getAction(action)}</div>\n                        <div className={'arrow-right'}></div>\n                        {this.getToStates(StatusHelper.getDisplayForStatus(transition.attributes.toState))}\n                    </div>\n                )\n            })\n        }\n        return transitions;\n    }\n\n    getToStates(toState){\n        let split = toState.split(\";\"), result = []\n        split.map(text => {\n            if(text) result.push(\n                <div className={'to-state'}>\n                    {StatusHelper.getDisplayForStatus(text)}\n                </div>\n            )\n        })\n\n        return result;\n    }\n\n    render() {\n        return <div className={'lifecycle-pane'}>\n            {this.props.lifecycleId && <>\n                    <div className={'type-details-title'}><h1>{this.props.lifecycleName}</h1></div>\n                    {this.getTransitions()}\n                </>\n            }\n\n            {!this.props.lifecycleId && <>\n                    <p>{'Pas de cycle de vie'}</p>\n                </>\n            }\n        </div>\n    }\n}\n\nexport default LifecycleTransitions;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {ButtonToolbar} from 'reactstrap';\nimport { AllIterations } from '_components/_common';\nimport { lifecycleService } from '_services/lifecycle.services';\nimport { contentHolderService } from '_services/contentHolder.services';\nimport { commons } from '_helpers/commons';\nimport {\n\tAttributeListGroup,\n\tWorkInfo,\n\tPersistenceInfo,\n\tWorkableAction,\n\tRevControlledAction,\n\tWaitingPane,\n}\nfrom '_components/_common';\nimport\n\tRevControlledDetailsHeader from '_components/_common/RevControlled/RevControlledDetailsHeader';\nimport { toast } from 'react-toastify';\nimport Button from 'react-bootstrap/Button'\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs';\nimport 'prismjs/components/prism-markup';\nimport 'prismjs/components/prism-css';\nimport 'prismjs/themes/prism-dark.css';\nimport queryString from 'query-string';\nimport {LifecycleTransitions} from \"_components/_admin/Lifecycles\";\nimport {Accordion} from \"_components/_common\";\n\nconst mapStateToProps = store => ({\n\n});\n\nconst mapDispatchToProps = (disptach) => ({\n\n})\n\nclass LifecycleDetails extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloading: true,\n\t\t\titem: {},\n\t\t\tdetailsMode: 'details',\n\t\t\txml: '<PleaseWait>Loading...</PleaseWait>',\n\t\t\titemId: this.getRootObjectForDetailsId(),\n\t\t}\n\n\t\tthis.doRefreshListView = this.doRefreshListView.bind(this)\n\t\tthis.updateMasterDatas = this.updateMasterDatas.bind(this)\n\t\tthis.loadDatas = this.loadDatas.bind(this)\n\t\tthis.renderItemActions = this.renderItemActions.bind(this)\n\t\tthis.saveEditorContent = this.saveEditorContent.bind(this)\n\t\tthis.setXMLContent = this.setXMLContent.bind(this)\n\t\tthis.setLoading = this.setLoading.bind(this)\n\t\tthis.onAllIterationsSelected = this.onAllIterationsSelected.bind(this)\n\t\tthis.onDetailsSelected = this.onDetailsSelected.bind(this)\n\t\tthis.getRootObjectForDetailsId = this.getRootObjectForDetailsId.bind(this)\n\t\tthis.switchOriginFromToWorkingCopy = this.switchOriginFromToWorkingCopy.bind(this)\n\t}\n\n\tshowXML(){\n\t\tthis.setState({detailsMode: 'xml'})\n\t}\n\n\tshowDetails(){\n\t\tthis.setState({detailsMode: 'details'})\n\t}\n\n\tonDetailsSelected(){\n\t\tthis.setState({subviewMode: 'details'})\n\t}\n\n\tonAllIterationsSelected(){\n\t\tthis.setState({subviewMode: 'allIterations'})\n\t}\n\n\tonAfterUndoCheckout(response){\n\n\t}\n\tgetBreadCrumbLabel(responseJson){\n\t\treturn responseJson.data.masterAttributes.name;\n\t}\n\tcomponentDidUpdate(prevProps, prevstate){\n\t\t\t\tconst prevQueryUrlParams = queryString.parse(prevProps.location.search);\n\t\t\t\tconst queryUrlParams = queryString.parse(this.props.location.search);\n\t\t\t\tlet rootId = queryUrlParams.rootId;\n\t\t\t\tlet prevId = prevQueryUrlParams.rootId;\n\t\t\t\tif(prevId !== rootId && rootId){\n\t\t\t\t\tthis.loadDatas(rootId, false)\n\t\t\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tlet itemId = this.getRootObjectForDetailsId();\n\t\tthis.loadDatas(itemId, false);\n\t}\n\n\tloadDatas(itemId, updateBreadCrumb){\n\t\tif(itemId){\n\t\t\tthis.setState({loading: true, item:null});\n\n\t\t\tlifecycleService.details(itemId, this.props.containerId).then(responseJson => {\n\n\t\t\t\tlet iterationId = responseJson.data.attributes.id\n\t\t\t\tif(updateBreadCrumb === true){\n\t\t\t\t\tlet location = responseJson.data.masterAttributes.name;\n\t\t\t\t\tif(this.props.pushBreadCrumb){\n\t\t\t\t\t\tlet item = {'href': '#', title: location}\n\t\t\t\t\t\tthis.props.pushBreadCrumb(item)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.setState({\n\t\t\t\t\titem: responseJson,\n\t\t\t\t\tloading: false\n\t\t\t\t});\n\n\t\t\t\treturn iterationId\n\t        }).then(iterationId => {\n\t\t\t\tcontentHolderService.downloadPrimaryContent(iterationId, this.props.containerId).then(blob => {\n\t\t\t\t\tthis.setState({xml: blob})\n\t\t\t\t});\n\t\t\t}).catch(error => {\n\t        \tconsole.error(error);\n\t        \tthis.setState({loading: false});\n\t        });\n\n\n\t\t}\n\t}\n\n\tupdateMasterDatas(formData){\n\t\tlifecycleService.updateMasterAttributes(formData.attributes.id, formData, this.props.containerId).then(response => {\n\t\t\tthis.loadDatas(this.getRootObjectForDetailsId(), false)\n\t\t})\n\t}\n\tsetLoading(){\n\t\tthis.setState({loading: true})\n\t}\n\trenderItemSummary(data){\n\t\treturn <RevControlledDetailsHeader\n\t\t\tcontainerId={this.props.containerId}\n\t\t\tdisplayName={data.masterAttributes.name}\n\t\t\tdescription={data.masterAttributes.description}\n\t\t\tlifecycleCurrentState=\"VALID\"\n\t\t\tbusinessTypeDisplayName=\"Standard Lifecycle\"\n\t\t\tversionInfo={data.attributes.versionInfo}\n\t\t\titerationInfo={data.attributes.iterationInfo}\n\t\t\tworkInfo={data.attributes.workInfo}\n\t\t\theaderActionsProvider={() => this.renderItemActions(data)}\n\t\t\theaderClassName=\"admin-details-header\"\n\t\t/>\n\t}\n\n\tdoRefreshListView(){\n\t\t//this.props.refreshListView('viewDetails')\n\t}\n\n\tswitchOriginFromToWorkingCopy(currentItemIdParam){\n    \tthis.props.history.replace('/admin?v=lifecycles&rootId=' + currentItemIdParam)\n\t}\n\n\trenderItemActions(data){\n\t\tif(this.state.subviewMode === 'allIterations') {\n\t\t\treturn <>\n\t\t\t\t<Button onClick={this.onDetailsSelected}>\n\t\t\t\t\t<i className=\"fa fa-arrow-left fa-sm\"></i>&nbsp;BACK</Button>\n\t\t\t</>\n\t\t}\n\n\t\treturn <>\n\t\t\t{(this.state.detailsMode === 'details') && <button onClick={this.showXML.bind(this)}>XML</button>}\n\t\t\t{(this.state.detailsMode === 'xml')&& <button onClick={this.showDetails.bind(this)}>DETAILS</button>}\n\t\t\t<RevControlledAction\n\t\t\t\tcontainerId={this.props.containerId}\n\t\t\t\tloadDatas={this.loadDatas}\n\t\t\t\tonAllIterationsSelected={() => this.onAllIterationsSelected()}\n\t\t\t\trevControlledId={data.attributes.id}\n\t\t\t\titerationInfo={data.attributes.iterationInfo}\n\t\t\t\trevControlledId={data.attributes.id}/>\n\t\t\t<WorkableAction\n\t\t\t\tcontainerId={this.props.containerId}\n\t\t\t\tworkInfo={data.attributes.workInfo}\n\t\t\t\titerationInfo={data.attributes.iterationInfo}\n\t\t\t\tworkableId={data.attributes.id}\n\t\t\t\tloadDatas={this.loadDatas}\n\t\t\t\trefreshListView={this.doRefreshListView}\n\t\t\t\toriginalItemId={this.props.itemId}/>\n\t\t</>\n\t}\n\trenderAttributes(){\n\t\tconst lifecycleStatusAttributesList = {\n\t\t\t    onSubmit: (formData) => this.updateMasterDatas(formData),\n\t\t\t    attributes: [\n\t\t\t    \t{name: 'Name', dataField: 'masterAttributes_name'},\n\t\t\t        {name: 'Number', dataField: 'masterAttributes_number', readOnly: true},\n\t\t\t        {name: 'Description', dataField: 'masterAttributes_description'},\n\t\t\t        {name: 'Initial state',  dataField: 'attributes.initialState', readOnly: true},\n\t\t\t        {name: 'Terminal state',  dataField: 'attributes.terminalState', readOnly: true},\n\t\t\t    ]\n\t\t}\n\n\t\tconst data = this.state.item.data;\n\t\tconst d = commons.toJSONObject(data);\n\t\tlet canUpload = d.attributes.workInfo.isWorkingCopy === true;\n\t\treturn <div className={'lifecycle-details'}>\n\t\t\t\t\t<AttributeListGroup\n\t\t\t\t\t\tcontainerId={this.props.containerId}\n\t\t\t\t\t\tattributesListConfig={lifecycleStatusAttributesList}\n\t\t\t\t\t\tdata={d}\n\t\t\t\t\t\tcanEdit={canUpload}\n\t\t\t\t\t\taddHeaderMargin=\"true\"\n\t\t\t\t\t\tstandardFooterActions={canUpload}\n\t\t\t\t\t\tdisplayHeader={true}/>\n\n\t\t\t\t\t<WorkInfo {...this.props} data={d}\n\t\t\t\t\t\tcontainerId={this.props.containerId}\n\t\t\t\t\t\tdisplayHeader={true}\n\t\t\t\t\t\taddHeaderMargin='true'\n\t\t\t\t\t\tdisplayActions='false'/>\n\n\t\t\t\t\t<PersistenceInfo\n\t\t\t\t\t\t{...this.props} data={d}\n\t\t\t\t\t\tcontainerId={this.props.containerId}\n\t\t\t\t\t\tdisplayHeader={true}\n\t\t\t\t\t\taddHeaderMargin=\"true\"/>\n\t\t</div>\n\t}\n\n\tsaveEditorContent(){\n    \tlet rawcontent = this.state.xml;\n\n    \tlet contentHolderId = this.state.item.data.attributes.id;\n    \tlet file = new Blob([rawcontent], {type: 'text/plain'});\n\t\tlet formData = new FormData();\n\t\tformData.append('file', file);\n\n\t\tcontentHolderService.setPrimaryContentFile(contentHolderId, formData, this.props.containerId).then( response => {\n\t\t\tlet errors = [];\n\t\t\tif(response.status === 'error'){\n\t\t\t\ttoast.success(commons.toastError(response))\n\t    \t\tthis.setState({\n    \t\t\t\terrors: errors,\n    \t\t\t\tloading: false\n    \t\t\t})\n\t    \t}\n\t    \telse {\n\t\t\t\ttoast.success(\"Le contenu a été enregistré\");\n\t\t\t\tthis.setState({\n    \t\t\t\terrors: [],\n    \t\t\t\tloading: false,\n    \t\t\t})\n\t    \t}\n    \t})\n    }\n\n    setXMLContent(contentXml){\n    \tthis.setState({\n    \t\txml: contentXml\n    \t})\n    }\n\n\tgetRootObjectForDetailsId(){\n\t\t\tconst queryUrlParams = queryString.parse(this.props.location.search);\n\t\t\tlet objectforDetailsId = queryUrlParams.rootId;\n\t\t\treturn objectforDetailsId\n\t}\n\n\tgetXmlContent(){\n\t\tconst data = this.state.item?.data;\n\t\tconst d = commons.toJSONObject(data);\n\t\tlet canUpload = d.attributes.workInfo.isWorkingCopy === true\n\n\t\tif(this.state.detailsMode === 'xml'){\n\t\t\treturn <>\n\t\t\t\t<div className=\"lifecycle-pane\">\n\t\t\t\t\t\t<Editor onValueChange={this.setXMLContent}\n\t\t\t\t\t\t\t\tvalue={this.state.xml}\n\t\t\t\t\t\t\t\thighlight={code => highlight(code, languages.markup, 'markup')}\n\t\t\t\t\t\t\t\tpadding={10}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tfontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n\t\t\t\t\t\t\t\t\tfontSize: 12,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t{ canUpload && <ButtonToolbar>\n\t\t\t\t\t\t<Button onClick={this.saveEditorContent}>SAVE CONTENT</Button>\n\t\t\t\t\t</ButtonToolbar>\n\t\t\t\t}\n\t\t\t</>\n\t\t}\n\n\t\treturn <></>\n\t}\n\n\tgetDetailsContent(){\n\t\tif(this.state.detailsMode === 'details'){\n\t\t\treturn <>\n\t\t\t\t<Accordion title={'Métadonnées'} content={this.renderAttributes()} expanded={false}/>\n\t\t\t\t<Accordion title={'Transitions'} content={this.getTransitionsContent()} expanded={true}/>\n\t\t\t</>\n\t\t}\n\n\t\treturn <></>\n\t}\n\n\tgetTransitionsContent(){\n\t\tconst data = this.state.item.data;\n\t\treturn <LifecycleTransitions {...this.props}\n\t\t\t\t\t lifecycleId={data.attributes.id}\n\t\t\t\t\t lifecycleName={data.attributes.masterAttributes_name}/>\n\t}\n\n\trender() {\n\n\t\tif(this.state.loading === true){\n\t\t\treturn <WaitingPane />\n\t\t}\n\n\t\tconst data = this.state.item?.data;\n\t\tif(data){\n\t\t\tlet content;\n\t\t\tif(this.state.subviewMode === 'allIterations'){\n\t\t\t\tcontent =  <AllIterations\n\t\t\t\t\t\t\t\tcontainerId={this.props.containerId}\n\t\t\t\t\t\t\t\tname={data.masterAttributes.name}\n\t\t\t\t\t\t\t\tdescription={data.masterAttributes.description}\n\t\t\t\t\t\t\t\trevControlledId={data.attributes.id}/>\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcontent = <>\n\t\t\t\t\t{this.getXmlContent()}\n\t\t\t\t\t{this.getDetailsContent()}\n\t\t\t\t</>\n\t\t\t}\n\n\t\t\treturn <>\n\t\t\t\t\t{this.renderItemSummary(data)}\n\t\t\t\t\t{content}\n\t\t\t</>\n\t\t}\n\n\t\treturn <></>\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (LifecycleDetails);\n","import {_doGet,  API_ROOT, _doPost} from './utils/services.config';\n\nexport const identificationsService = {\n    getIdentifications,\n    createIdentification\n};\n\nasync function getIdentifications(identified, containerId){\n    const uri = '/api/secured/v1/katappult/multiIdentifiable/identifications?containerId=' + containerId + '&multiIdentifiableId=' + identified;\n    const url = `${API_ROOT}` + uri\n    return _doGet(url)\n}\n\nasync function createIdentification(formData, identified, containerId){\n    const typeId = formData.typeId\n    const uri = '/api/secured/v1/katappult/multiIdentifiable/addIdentification?containerId=' + containerId + '&id=' + identified + \"&typeId=\" + typeId;\n    const url = `${API_ROOT}` + uri\n    return _doPost(url, JSON.stringify(formData))\n}\n","import {_doGet, buildURLQuery, API_ROOT, _doPost} from './utils/services.config';\n/**\n * Default Export\n */\nexport const typeService = {\n\tgetByPath,\n\tgetById,\n\tgetSubtypeOf,\n\tgetLifecycleOf,\n\tgetSubtypeOfRecursive,\n\tgetTypeOf,\n\tgetLinkConstraintsOf,\n\tcreateType,\n\tsetLifecycle,\n\tupdateBaseClass\n};\n\nasync function updateBaseClass(typeId, formData, containerId){\n\tconst uri = '/api/secured/v1/katappult/types/baseClass?containerId=' + containerId + '&typeId=' + typeId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doPost(url, JSON.stringify(formData));\n}\n\nasync function setLifecycle(typeId, id, containerId){\n\tconst uri = '/api/secured/v1/katappult/types/lifecycle?containerId=' + containerId + '&lifecycleId=' + id + '&typeId=' + typeId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doPost(url);\n}\n\nasync function createType(formData, containerId){\n\tconst uri = '/api/secured/v1/katappult/types?containerId=' + containerId ;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doPost(url, JSON.stringify(formData));\n}\n\nasync function getById(typeId, containerId){\n\tconst uri = \"/api/secured/v1/katappult/types/byId?containerId=\" + containerId + '&typeId=' + typeId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function getByPath(typePath, containerId){\n\tlet p = buildURLQuery({path: typePath});\n\tconst uri = \"/api/secured/v1/katappult/types/byPath?containerId=\" + containerId + '&'.concat(p);\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function getSubtypeOf(typeId, includeParentItems, containerId) {\n\tlet p = buildURLQuery({fetchInParent:includeParentItems});\n\tconst uri = \"/api/secured/v1/katappult/types/subtypes?containerId=\" + containerId  + '&typeId=' + typeId + '&'.concat(p);\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function getSubtypeOfRecursive(typeId, includeParentItems, containerId) {\n\tlet p = buildURLQuery({fetchInParent:includeParentItems, recursive: 'true'});\n\tconst uri = \"/api/secured/v1/katappult/types/subtypes?containerId=\" + containerId  + '&typeId=' + typeId + '&'.concat(p);\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function getLifecycleOf(typeId, containerId) {\n\tconst uri = \"/api/secured/v1/katappult/types/lifecycle?containerId=\" + containerId  + '&typeId=' + typeId\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\n\nasync function getLinkConstraintsOf(linkTypeId, forRoleALogicalPath, containerId){\n\tconst uri = '/api/secured/v1/katappult/typedObjectLink/linkConstraints?forRoleALogicalPath=' + forRoleALogicalPath + '&containerId=' + containerId + '&linkTypeId=' + linkTypeId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n\n}\n\nasync function getTypeOf(id, containerId){\n\tconst uri = \"/api/secured/v1/katappult/typeManaged/typeOf?containerId=\" + containerId + \"&id=\" + id;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\n","import React, {useEffect, useState} from 'react';\nimport {typeService} from \"_services/type.services\";\nimport Form from \"react-bootstrap/Form\";\nimport {identificationsService} from \"_services/identifications.service\";\nimport {commons} from \"_helpers/commons\";\nimport {toast} from \"react-toastify\";\nimport {AttributeListGroup} from \"_components/_common\";\n\nfunction AddIdentification(props) {\n\n    const [formData, setFormData] = useState()\n    const [businessType, setBusinessType] = useState()\n    const [types, setTypes] = useState()\n    const [errors, setErrors] = useState([])\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n        const rootType = 'com.katappult.id.Identification'\n        const containerId = props.containerId\n\n        typeService.getByPath(rootType, containerId).then(response => {\n            const id = response.data.attributes.id\n            const firstElement = [response.data]\n\n            typeService.getSubtypeOf(id, true, containerId).then(types => {\n                const typeDatas = types.data\n                setTypes(firstElement.concat(typeDatas))\n                setBusinessType(rootType)\n            })\n        })\n    }, [])\n\n    const findFormErrors = (form) => {\n        const {comment, identification} = form\n        const newErrors = {}\n\n        if (!comment || comment === '') newErrors.comment = 'Champs invalide';\n        if (!identification || identification === '') newErrors.identification = 'Champs invalide';\n        return newErrors;\n    }\n\n    const attributesList = () => {\n        const attributesList = {\n            saveButtonTitle: 'CRÉER',\n            onSubmit: (formData) => create(formData),\n            formValidity: (formData) => findFormErrors(formData),\n            attributes: [\n                {\n                    name: \"Identification\",\n                    dataField: \"identification\",\n                    required: true,\n                    placeHolder: \"Identification\",\n                    type: \"text\",\n                    invalidFeedBack: \"Veuillez renseigner ce champs\"\n                },\n                {\n                    name: \"Comment\",\n                    dataField: \"comment\",\n                    required: true,\n                    placeHolder: \"Comment\",\n                    type: \"text\",\n                    invalidFeedBack: \"Veuillez renseigner ce champs\"\n                },\n            ]\n        }\n\n        return attributesList;\n    }\n\n    const create = (formData) => {\n        setFormData(formData)\n        setLoading(true)\n\n        formData.containerId = props.containerId;\n        formData.businessType = businessType.split(':')[0]\n        formData.typeId = businessType.split(':')[1]\n\n        if(!formData.typeId) return\n\n        identificationsService.createIdentification(formData, props.identifiedId, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if (error) {\n                setLoading(false)\n                let message = response.errorFamily + ' - ' + response.message\n                toast.error(commons.toastError(response));\n                setErrors([message])\n            } else {\n                setLoading(false)\n                props.onCreateSuccess();\n                toast(commons.toastSuccess(\"Un élément a été créé\"));\n            }\n        })\n    }\n\n    const typeSelectionChange = (e) => {\n        setBusinessType(e.target.value)\n    }\n\n    const typesSelect = () => {\n        const options = types.map(type =>\n            <option value={type.attributes.logicalPath +  ':' + type.attributes.id}>{type.attributes.displayName}</option>\n        )\n\n        return <Form.Control as=\"select\" onChange={typeSelectionChange}>\n            {options}\n        </Form.Control>\n    }\n\n    if(!types) return <></>\n\n    const form = {...formData}\n    return <>\n        <div className=\"container-create-root\">\n            <p className=\" form-error\">{errors}</p>\n            <Form.Group className=\"field field-string attributes-list\">\n                <Form.Label>Type</Form.Label>\n                {typesSelect()}\n            </Form.Group>\n\n            <AttributeListGroup\n                attributesListConfig={attributesList()}\n                data={form}\n                standardFooterActions=\"true\"\n                formMode='create_object'/>\n        </div>\n    </>\n}\n\nexport default AddIdentification;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {identificationsService} from '_services/identifications.service';\nimport {DataTable, EmptyPane, Wizard} from \"_components/_common\";\nimport AddIdentification from \"_components/_admin/IdentificationsInfo/AddIdentification\";\n\nconst propTypes = {\n\tdata: PropTypes.object,\n};\n\nconst defaultProps = {\n};\n/**\n * Displays identification informations panel\n */\nclass IdentificationsInfo extends Component {\n\n    constructor(props){\n        super(props)\n        this.state  = {\n        \tidentifications: []\n        }\n    }\n\n    componentDidMount(){\n    \tthis.loadDatas()\n    }\n\n    loadDatas(wizardCloseFunction){\n    \tif(wizardCloseFunction)  wizardCloseFunction()\n\t\tidentificationsService.getIdentifications(this.props.identifiedId, this.props.containerId).then(response => {\n\t\t\tthis.setState({\n\t\t\t\tidentifications: response.data\n\t\t\t})\n\t\t})\n\t}\n\n\tgetCreatePage(wizardCloseFunction){\n\t\t\treturn <AddIdentification {...this.props}\n\t\t\t\t\t\t\t\t\t  onCreateSuccess={()=>this.loadDatas(wizardCloseFunction)}/>\n\t}\n\n\trender() {\n\t\tif(this.state.identifications.length > 0){\n\t\t\tconst tableConfig = {\n\t\t\t\tcolumnsConfig: [\n\t\t\t\t\t{name:'Comment', dataField: 'attributes.comment', headerClass: 'td-left', className: 'td-left'},\n\t\t\t\t\t{name:'Identification', dataField: 'attributes.identification', headerClass: 'td-left', className: 'td-left'},\n\t\t\t\t\t{name:'Master', dataField: 'attributes.master', headerClass: 'td-center', className: 'td-center', type: 'checkbox', displayComponent: (v,i) => master(v,i)},\n\t\t\t\t],\n\t\t\t}\n\n\t\t\treturn <>\n\t\t\t\t<div style={{marginBottom: '2rem'}}>\n\t\t\t\t\t<Wizard\n\t\t\t\t\t\tdialogSize=\"md\"\n\t\t\t\t\t\thideFooter={true}\n\t\t\t\t\t\tbuttonIcon=\"fa fa-sm fa-plus\"\n\t\t\t\t\t\tbuttonTitle='Ajouter une identification'\n\t\t\t\t\t\tdialogTitle=\"Ajouter une identification\"\n\t\t\t\t\t\tdialogContentProvider={(wizardCloseFunction)=>this.getCreatePage(wizardCloseFunction)}/>\n\t\t\t\t</div>\n\n\t\t\t\t<DataTable items={JSON.stringify(this.state.identifications)}\n\t\t\t\t\t\t   tableConfig={tableConfig}\n\t\t\t\t\t\t   displayTotalElements={false}\n\t\t\t\t\t\t   paginate={false}/>\n\n\t\t\t</>\n\n\t\t}\n\n\t\treturn <EmptyPane />\n\t}\n}\n\nIdentificationsInfo.propTypes = propTypes;\nIdentificationsInfo.defaultProps = defaultProps;\n\nexport default IdentificationsInfo;\n\n\nconst master = (v,i) => {\n\treturn <td className={'td-center'}>\n\t\t<input type={'checkbox'} value={v} checked={v} disabled/>\n\t</td>\n}\n","import {_doGet, _doDelete, _doPut, buildURLQuery, API_ROOT, _doPost} from './utils/services.config';\n/**\n * Default Export\n */\nexport const enTemplateService =  {\n    getById,\n    deleteTemplate,\n    updateTemplate,\n    seartTemplateByNameLike,\n    create,\n    listAllInContainer\n};\nasync function listAllInContainer(containerId){\n    let uri = '/api/secured/v1/katappult/enTemplates/listAllInContainer?containerId=' + containerId;\n    let url = `${API_ROOT}` + uri\n    return _doGet(url)\n}\nasync function create(formData, containerId){\n    let uri = '/api/secured/v1/katappult/enTemplates/create?containerId=' + containerId;\n    let url = `${API_ROOT}` + uri\n    return _doPost(url, JSON.stringify(formData))\n}\nasync function getById(id, containerId) {\n    const uri = \"/api/secured/v1/katappult/enTemplates/byId\".concat(\"?containerId=\").concat(containerId).concat(\"&id=\" + id);\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\nasync function deleteTemplate(id, containerId) {\n    const uri = \"/api/secured/v1/katappult/enTemplates/delete\".concat(\"?containerId=\").concat(containerId).concat(\"&id=\" + id);\n    const url = `${API_ROOT}` + uri;\n    return _doDelete(url);\n}\nasync function updateTemplate(id, formdata, containerId) {\n    const uri = \"/api/secured/v1/katappult/enTemplates/update\".concat(\"?containerId=\").concat(containerId).concat(\"&id=\" + id);\n    const url = `${API_ROOT}` + uri;\n    return _doPut(url, formdata);\n}\nasync function seartTemplateByNameLike(containerId, params){\n\tlet p = buildURLQuery(params);\n\tconst uri = \"/api/secured/v1/katappult/enTemplates/searchByNameLike?\".concat(p).concat('&containerId=' + containerId);\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n","import React  from 'react';\nimport {ButtonToolbar} from 'reactstrap';\nimport { commons } from '_helpers/commons';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n\tAttributeListGroup,\n\tPersistenceInfo,\n\tContentHolderAction,\n\tWizardConfirm,\n\tWaitingPane\n} from '_components/_common';\nimport { enTemplateService } from '_services/entemplates.services';\nimport {contentHolderService} from '_services/contentHolder.services'\nimport Button from 'react-bootstrap/Button';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport Form from 'react-bootstrap/Form'\nimport { toast } from 'react-toastify';\nimport queryString from 'query-string';\n\nconst mapStateToProps = store => ({\n\n});\nconst mapDispatchToProps = (disptach) => ({\n\n})\n\nconst propTypes = {\n    item: PropTypes.object,\n    subviewMode: PropTypes.string\n};\n\nconst defaultProps = {\n    subviewMode: 'editor'\n};\n\n/**\n * Email Template details page\n */\nclass EmailTemplateDetails extends React.Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n        \tloading:true,\n        \titem: {},\n            subviewMode: 'editor',\n            editorMode: 'html',\n            messageTitle:'',\n            errors: [],\n            emailTemplateId: this.props.emailTemplateId ? this.props.emailTemplateId :\n\t\t\t\tthis.props.match ? this.props.match.params.id : null,\n        };\n\n        this.saveEditorContent = this.saveEditorContent.bind(this);\n        this.showSource = this.showSource.bind(this);\n        this.showHtml = this.showHtml.bind(this);\n\t\t\t\tthis.onEditorStateChange = this.onEditorStateChange.bind(this);\n\t\t\t\tthis.getRootObjectForDetailsId = this.getRootObjectForDetailsId.bind(this);\n    }\n\n    showSource(){\n     \tthis.setState({editorMode: 'source'})\n    }\n\n    showHtml(){\n    \tthis.setState({editorMode: 'html'})\n    }\n\n    saveEditorContent(){\n    \tthis.setState({\n    \t\tloading: true\n    \t})\n\n    \tlet title = this.state.messageTitle;\n    \tif(!title || 0 === title.length){\n    \t\tthis.setState({\n    \t\t\terrors: ['Message title is mandatory! Please provide one.']\n    \t\t})\n    \t\treturn;\n    \t}\n\n    \tlet rawcontent = draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()));\n\n    \tlet id = this.state.item.data.attributes.id;\n    \tlet file = new Blob([rawcontent], {type: 'text/plain'});\n\t\tlet formData = new FormData();\n\t\tformData.append('file', file);\n\n\t\tcontentHolderService.setPrimaryContentFile(this.state.emailTemplateId, formData, this.props.containerId).then( response => {\n\t\t\tif(commons.isRequestError(response)){\n\t\t\t\ttoast.error(commons.toastError(response))\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet form = {};\n\t\t\t\tform.displayName = this.state.item.data.attributes.displayName;\n\t\t\t\tform.messageTitle = this.state.messageTitle;\n\t\t\t\tform.description = this.state.item.data.attributes.description;\n\t\t\t\tform.contentType = this.state.item.data.attributes.contentType;\n\n\t\t\t\tlet id = this.state.item.data.attributes.id;\n\t\t\t\tenTemplateService.updateTemplate(id, form, this.props.containerId).then(res => {\n\t\t\t\t\tthis.loadItem(id, false);\n\t\t\t\t\tif(commons.isRequestError(response)){\n\t\t\t\t\t\ttoast.error(commons.toastError(response))\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n    }\n\n    onEditorStateChange (editorState) {\n\t    this.setState({editorState});\n\t};\n\n\tonMessageTitleChange(e) {\n\t\tthis.setState({messageTitle: e.target.value});\n\t};\n\n\tswitchToSubView(subview) {\n\t\tthis.setState({subviewMode: subview});\n\t};\n\n    deleteItem(e){\n    \tif(e) e.preventDefault();\n    \tlet id = this.state.emailTemplateId\n\n    \tenTemplateService.deleteTemplate(id, this.props.containerId).then(response => {\n\t\t\tif(commons.isRequestError(response)){\n\t\t\t\ttoast.error(commons.toastError(response))\n\t\t\t}\n\t\t\telse {\n    \t\t\tthis.props.history.goBack();\n    \t\t}\n    \t})\n    }\n\n    componentDidUpdate(prevprops, prevstate){\n\t\t\t\tconst prevQueryUrlParams = queryString.parse(prevprops.location.search);\n\t\t\t\tconst queryUrlParams = queryString.parse(this.props.location.search);\n\t\t\t\tlet rootId = queryUrlParams.rootId;\n\t\t\t\tlet prevId = prevQueryUrlParams.rootId;\n\t\t\t\tif(prevId !== rootId && rootId){\n\t\t\t\t\tthis.loadItem(rootId, false)\n\t\t\t\t}\n    }\n\n    componentDidMount(){\n\t\t\tlet rootId = this.getRootObjectForDetailsId()\n\t\t\tthis.loadItem(rootId, true);\n\t\t}\n\n\t\tgetRootObjectForDetailsId(){\n\t\t\tconst queryUrlParams = queryString.parse(this.props.location.search);\n\t\t\tlet objectforDetailsId = queryUrlParams.rootId;\n\t\t\treturn objectforDetailsId\n\t\t}\n\n    loadItem(templateId, updateBread){\n    \tif(templateId){\n\t\t\tenTemplateService.getById(templateId, this.props.containerId).then(json => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tloading:false,\n\t                item: json,\n\t                errors: [],\n\t                emailTemplateId: templateId,\n\t                messageTitle: json.data.attributes.messageTitle\n\t            });\n\t        })\n\n\t        contentHolderService.downloadPrimaryContent(templateId, this.props.containerId).then( response => {\n\t\t\t\tlet blob = new Blob([response], { type: 'text/plain' });\n\t\t\t\tconst reader = new FileReader();\n\n\t\t\t\t// This fires after the blob has been read/loaded.\n\t\t\t\treader.addEventListener('loadend', (e) => {\n\t\t\t\t  const text = e.srcElement.result;\n\t\t\t\t  //console.log(text);\n\n\t\t\t\t  //const contentBlock = htmlToDraft(text);\n\t\t\t\t  const contentBlock = htmlToDraft(text);\n\t\t\t\t  if(contentBlock){\n\t\t\t\t  \tconst contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n      \t\t\t  \tconst editorState = EditorState.createWithContent(contentState);\n      \t\t\t  \tthis.setState({editorState})\n\t\t\t\t  }\n\n\t\t\t\t});\n\n\t\t\t\t// Start reading the blob as text.\n\t\t\t\treader.readAsText(blob);\n\t\t\t})\n    \t}\n    }\n    updateTemplate(formData){\n    \tthis.setState({\n\t\t\tloading: true\n\t\t})\n\n    \tlet form = {};\n\t\tform.displayName = formData.attributes.displayName;\n\t\tform.messageTitle = formData.attributes.messageTitle;\n\t\tform.description = formData.attributes.description;\n\t\tform.contentType = formData.attributes.contentType;\n\n    \tlet id = this.state.item.data.attributes.id;\n    \tenTemplateService.updateTemplate(id, form, this.props.containerId).then(res => {\n    \t\tif(commons.isRequestError(res)){\n    \t\t\tthis.setState({\n    \t\t\t\terrors: commons.getRestErrorMessage(res),\n    \t\t\t\tloading: false\n    \t\t\t})\n    \t\t}\n    \t\telse {\n    \t\t\tthis.loadItem(id, false);\n    \t\t}\n    \t})\n    }\n    headerActions(){\n    \tif(this.state.item && this.state.item.data){\n    \t\tlet data = this.state.item.data;\n    \t\tlet deleteButton =\t<WizardConfirm\n\t\t\t\tbuttonColor=\"danger\"\n\t\t\t\tbuttonTitle=\"SUPPRIMER\"\n\t\t\t\tonConfirm={() => this.deleteItem()}\n\t\t\t\tdialogMessage=\"VOULEZ SOUS SUPPRIMER CE TEMPLATE DE MAIL?\"\n\t\t\t\tdialogTitle=\"SUPPRIMER UN TEMPLATE DE MAIL\"/>\n\t\t\tlet chActions = <ContentHolderAction\n\t\t\t\t\t\t\t\tcanUpload={false}\n\t\t\t\t\t\t\t\trawDownload={false}\n\t\t\t\t\t\t\t\tcontentHolderId={data.attributes.id}/>\n\n\t\t\treturn <div className=\"admin-filters-root\" style={{marginBottom: '12px'}}>\n\t\t\t\t<div className={'btn-toobar btn-toolbar-right'}>\n\t\t\t\t\t{this.state.subviewMode === 'editor' &&\n\t\t\t\t\t\t<Button onClick={()=>this.switchToSubView('admin')}>INFOS</Button>\n\t\t\t\t\t}\n\t\t\t\t\t{this.state.subviewMode === 'admin' &&\n\t\t\t\t\t\t<Button onClick={()=>this.switchToSubView('editor')}>ÉDITEUR</Button>\n\t\t\t\t\t}\n\t\t\t\t\t{chActions}\n\t\t\t\t\t{/*deleteButton*/}\n\t\t\t\t</div>\n\t\t\t</div>\n    \t}\n\n    \treturn <></>\n    }\n    userView(){\n    \tlet content;\n    \tif(this.state.item && this.state.item.data){\n\n    \t\tif(this.state.editorMode === 'source'){\n    \t\t\tlet source = this.state.editorState ? draftToHtml(convertToRaw(this.state.editorState.getCurrentContent())) : 'ERROR';\n    \t\t\tcontent = <div className=\"\">\n    \t\t\t\t<div className=\"html-editor html-source-editor\">{source}</div>\n\t\t\t\t\t<div className={'btn-toolbar'}>\n    \t\t\t\t\t<Button className=\"btn-toolbar\" onClick={e=>this.showHtml()}>VUE HTML</Button>\n\t\t\t\t\t</div>\n    \t\t\t</div>\n    \t\t}\n\n    \t\telse if(this.state.editorMode === 'html'){\n\t    \t\tconst data = this.state.item.data;\n\t    \t\tconst { editorState } = this.state;\n\n\t    \t\tcontent = <div className={'accordion-pane'} style={{padding: '16px'}}>\n\t\t\t\t\t<strong className=\"form-error\">{this.state.errors}</strong>\n\n\t\t\t\t\t<Form.Control size=\"md\" type=\"text\"\n\t\t\t\t\t\t\tclassName=\"admin-hover-input form-control\"\n\t\t\t\t\t\t\tplaceholder=\"Email object\"\n\t\t\t\t\t\t\tvalue={this.state.messageTitle} onChange={this.onMessageTitleChange}/>\n\n\t\t\t\t\t<div className=\"panel bordered-panel html-editor\">\n\t\t\t\t\t\t<Editor localization={{ locale: 'fr' }}\n\t\t\t\t\t\t\twrapperClassName=\"html-editor-wrapper\"\n\t\t\t\t\t\t\teditorClassName=\"\"\n\t\t\t\t\t\t\tonEditorStateChange={this.onEditorStateChange}\n\t\t\t\t\t\t\teditorState={editorState}/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<ButtonToolbar className={'footer-btn-toolbar'}>\n\t\t\t\t\t\t<Button onClick={e=>this.saveEditorContent()}>SAUVEGARDER</Button>\n\t\t\t\t\t\t<Button onClick={e=>this.showSource()}>VUE SOURCE</Button>\n\t\t\t\t\t</ButtonToolbar>\n\t    \t\t</div>\n\t    \t}\n    \t}\n\n    \treturn content\n    }\n    adminView(){\n    \tif(this.state.item && this.state.item.data){\n    \t const d = commons.toJSONObject(this.state.item.data);\n    \t const summaryAttributesList = {\n            onSubmit: (formData) => this.updateTemplate(formData),\n            attributes: [\n\t\t\t\t{name: 'Nom interne', dataField: 'attributes.internalName', readOnly: true},\n\t\t\t\t{name: 'Type', dataField: 'attributes.type', readOnly: true},\n                {name: 'Nom', dataField: 'attributes.displayName'},\n                {name: 'Description', dataField: 'attributes.description', type: 'textarea'},\n                {name: 'Titre du message', dataField: 'attributes.messageTitle'},\n                {name: 'Type du contenu', dataField: 'attributes.contentType'},\n            ]\n        };\n\n    \treturn <div>\n\t\t\t\t<AttributeListGroup {...this.props}\n\t\t\t\t\tattributesListConfig={summaryAttributesList}\n\t\t\t\t\tcanEdit={true}\n\t\t\t\t\tstandardFooterActions=\"true\"\n\t\t\t\t\tdata={d}\n\t\t\t\t\tdisplayHeader={true}\n\t\t\t\t\taddHeaderMargin='true'/>\n\t\t\t\t<PersistenceInfo  {...this.props}\n\t\t\t\t\tdata={d}\n\t\t\t\t\tdisplayHeader={true}\n\t\t\t\t\taddHeaderMargin='true'/>\n\t\t\t</div>\n\t\t}\n\n\t\treturn <></>\n    }\n\trender() {\n\t\tlet hasDatas = this.state.item && this.state.item.data;\n\t\tif(!hasDatas && this.state.loading === true){\n\t\t\treturn <WaitingPane />\n\t\t}\n\n        if(this.state.item && this.state.item.data) {\n            const data = this.state.item.data;\n            let view;\n            if(this.state.loading === true){\n            \tview = <WaitingPane />\n            }\n            else {\n            \tview = this.state.subviewMode === 'editor' ? this.userView() : this.adminView();\n            }\n\n            return <>\n\t\t\t\t\t<div className=\"admin-details-header\">\n\t\t\t\t\t\t<p className=\"page-title\">{data.attributes.displayName}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t{this.headerActions()}\n\t\t\t\t\t<div>{view}</div>\n            </>\n        }\n    }\n}\n\nEmailTemplateDetails.propTypes = propTypes;\nEmailTemplateDetails.defaultProps = defaultProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps) (EmailTemplateDetails);\n","import React, { Component } from 'react';\nimport { AttributeListGroup} from '_components/_common';\nimport {WaitingPane} from \"_components/_common\";\nimport {toast} from \"react-toastify\";\nimport {enTemplateService} from \"_services/entemplates.services\";\nimport {commons} from \"_helpers/commons\";\n\nclass EmailTemplatesAdd extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            formData: {},\n            errors:[]\n        }\n\n        this.create = this.create.bind(this)\n    }\n\n    async create(formData) {\n        this.setState({loading:true})\n\n        formData.containerId = this.props.containerId;\n\n        enTemplateService.create(formData, this.props.containerId).then(response => {\n            if(commons.isRequestError(response)){\n                toast.error(commons.toastError(response))\n            }\n            else {\n                this.setState({loading: false})\n                this.props.onCreateSucess();\n            }\n        })\n    }\n\n    /**\n     * Attributes list\n     */\n    attributesList(){\n        const attributesList = {\n            saveButtonTitle: 'CRÉER',\n            onSubmit: (formData) => this.create(formData),\n            attributes: [\n                {name: 'Nom', dataField: 'displayName', required:true,  placeHolder: 'Nom'},\n                //{name: 'Nom interne', dataField: 'internalName',  required: true, placeHolder: 'Nom interne', pattern:\"[-_A-Z0-9]+\"},\n                {name: 'Titre du mail', dataField: 'messageTitle',  required: true, placeHolder: 'Titre du mail'},\n                //{name: 'Contenu', dataField: 'primary', type:'file', placeHolder: 'Contenu'},\n            ]\n        }\n\n        return attributesList;\n    }\n\n    render() {\n        if(this.state.loading){\n            return <WaitingPane/>\n        }\n\n        let errors = []\n        if(this.state.errors.length > 0) {\n            this.state.errors.map(error => {\n                errors.push(<p>{error}</p>)\n            })\n        }\n\n        let formData ={...this.state.formData}\n        return (\n            <div className=\"container-create-root\">\n                <div id=\"form-errors-section\" className=\"form-error\">\n                    {errors}\n                </div>\n                <AttributeListGroup\n                    attributesListConfig={this.attributesList()}\n                    data={formData}\n                    standardFooterActions=\"true\"\n                    formMode='create_object'/>\n            </div>\n        )\n    }\n}\n\nexport default EmailTemplatesAdd;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {Input, ButtonGroup,} from 'reactstrap';\nimport {\n\tEmptyPane, WaitingPane,\n\tDataTable\n}\nfrom '_components/_common';\nimport {EmailTemplateDetails} from '_components/_admin';\nimport { connect } from 'react-redux';\nimport { enTemplateService } from '_services/entemplates.services';\nimport { containerService } from '_services/container.services';\nimport { Form } from 'react-bootstrap'\nimport {contentHolderService} from '_services/contentHolder.services'\nimport Button from 'react-bootstrap/Button'\nimport queryString from 'query-string';\nimport {coreUri} from '_helpers/CoreUri'\nimport EmailTemplatesAdd from \"_components/_admin/EmailTemplates/EmailTemplatesAdd\";\nimport {commons} from \"_helpers/commons\";\n\nconst mapStateToProps = store => ({\n\temailTemplatesNavCriterias: store.applicationConfig.emailTemplatesNavCriterias,\n})\n\nconst mapDispatchToProps = (disptach) => ({\n\tupdateEmailTemplatesNavCriteriasRX: (e) => disptach(updateEmailTemplatesNavCriterias(e)),\n})\n\n\n/**\n * Email templates page\n */\nclass EmailTemplates extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\titems: [],\n\t\t\tmetaData: '',\n\t\t\tloading: true,\n\t\t\tqueryFilters:{\n\t\t\t\trowPerPage: 14,\n\t\t\t\tpage: 0,\n\t\t\t\tincludeParentsItem: true,\n\t\t\t\tname: ''\n\t\t\t},\n\n\t\t\tviewMode: 'viewList'\n\t\t}\n\n\t\tthis.goToPage = this.goToPage.bind(this)\n\t\tthis.loadDatas = this.loadDatas.bind(this)\n\t\tthis.includeParentsItemCheck = this.includeParentsItemCheck.bind(this)\n\t\tthis.viewPrimaryContent = this.viewPrimaryContent.bind(this)\n\t\tthis.switchToView = this.switchToView.bind(this)\n\t\tthis.refreshView = this.refreshView.bind(this)\n\t}\n\n\trefreshView(){\n\t\tthis.componentDidMount()\n\t}\n\n\tswitchToView(e, name){\n\t\tif(e) e.preventDefault()\n\t\tthis.setState({viewMode: name})\n\t}\n\n\tsetNavCriteriasPage(page, name){\n\t\tlet payload = {};\n\t\tpayload.page = page;\n\t\tpayload.name = name;\n\t\tthis.props.updateEmailTemplatesNavCriteriasRX(payload)\n\t}\n\n\tgoToPage(i){\n\t\tlet queryFilters = {...this.state.queryFilters}\n\t\tqueryFilters.page = i\n\t\tthis.setNavCriteriasPage(i, queryFilters.name)\n\t\tthis.loadDatas(queryFilters)\n\t}\n\n\tviewPrimaryContent(e, item){\n\t\te.preventDefault()\n\t\tcontentHolderService.downloadPrimaryContent(item.id, this.props.containerId).then( response => {\n\t\t\tlet blob = new Blob([response], { type: 'text/plain' });\n\t\t\tlet blobUrl = URL.createObjectURL(blob);\n\t\t\tlet w = window.open(blobUrl)\n\t\t})\n\t}\n\n\tmoreActions = (val,item) => {\n\t\t\treturn <td className=\"dt-center\" width={'5%'}>\n\t\t\t\t<div className={'btn-toolbar'}>\n\t\t\t\t\t<Link onClick={e=>this.selectTemplate(e, item.attributes.id)}>\n\t\t\t\t\t\t<i className={'fa fa-chevron-right fa-lg'}></i>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</td>\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState){\n\t\tif(this.props.emailTemplatesNavCriterias.name\n\t\t\t&& this.props.emailTemplatesNavCriterias.name.length > 0){\n\t\t\tif(this.props.emailTemplatesNavCriterias.name !== this.state.searchTerm){\n\t\t\t\tthis.setState({searchTerm: this.props.emailTemplatesNavCriterias.name})\n\t\t\t}\n\t\t}\n\n\t\tif(prevState.queryFilters !== this.state.queryFilters){\n\n\t\t}\n\n\t\tif(prevState.viewMode !== this.props.viewMode){\n\t\t\tthis.setState({viewMode: this.props.viewMode})\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.setNavCriteriasPage(0, '');\n\t\tlet queryFilters = {...this.state.queryFilters};\n\t\tthis.loadDatas(queryFilters)\n    }\n\n\tgetRootObjectForDetailsId(){\n\t\t\tconst queryUrlParams = queryString.parse(this.props.location.search);\n\t\t\tlet objectforDetailsId = queryUrlParams.rootId;\n\t\t\treturn objectforDetailsId\n\t}\n\n\tloadDatas(queryFilters){\n\t\tlet containerId = this.props.containerId;\n\t\tlet params = {name: queryFilters.name,\n\t\t\tpage: queryFilters.page,\n\t\t\tcontainerId: containerId,\n\t\t\tpageSize: queryFilters.rowPerPage,\n\t\t\tincludeParentItems: false\n\t\t};\n\n\t\tthis.setNavCriteriasPage(queryFilters.page, queryFilters.name);\n\t\tthis.setState({loading: true});\n\n\t\tenTemplateService.seartTemplateByNameLike(containerId, params).then(json => {\n        \tthis.setState({\n        \t\titems: json.data,\n        \t\tloading:false,\n        \t\tmetaData: json.metaData,\n        \t\tqueryFilters: queryFilters,\n        \t\tviewMode: 'viewList'\n        \t})\n        })\n        .catch(error => {\n        \tconsole.error(error);\n        \tthis.setState({\n        \t\tloading:false,\n        \t\tviewMode: 'viewList'\n        \t})\n        });\n\t}\n\tgetAllEnTemplates(){\n\t\tlet queryFilters = {...this.state.queryFilters}\n\t\tcontainerService.getAllEmailTemplates(queryFilters.page, queryFilters.rowPerPage, queryFilters.includeParentsItem, this.props.containerId).then(json => {\n        \tthis.setState({\n        \t\titems: json.data,\n        \t\tloading:false,\n        \t\tmetaData: json.metaData,\n        \t\tviewMode: 'viewList',\n        \t\tsearchTerm: queryFilters.name\n        \t})\n        })\n        .catch(error => {\n        \tconsole.error(error);\n        \tthis.setState({\n        \t\tloading:false,\n        \t\tviewMode: 'viewList'\n        \t})\n        });\n\t}\n\n\tincludeParentsItemCheck(e){\n\t\tlet queryFilters = {...this.state.queryFilters}\n\t\tqueryFilters.includeParentsItem = e.target.checked\n\t\tthis.setState({\n\t\t\tqueryFilters: queryFilters\n\t\t})\n\t}\n\n\ttableHeader(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<h1 className=\"katappult-h1\">Email templates</h1>\n\t\t\t\t<div className={'btn-toolbar'}>\n\t\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t\t<Button className=\"katappult-btn\" onClick={e=>this.switchToView(e, 'synch')}><i className=\"fa fa-md fa-cloud-upload\"></i> Upload</Button>\n\t\t\t\t\t\t\t<Button className=\"katappult-btn\" onClick={e=>this.switchToView(e, 'viewList')}><i className=\"fa fa-md fa-th-list\"></i> Navigate</Button>\n\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\t\ttype=\"switch\"\n\t\t\t\t\t\t\t\tid=\"custom-switch\"\n\t\t\t\t\t\t\t\tchecked={this.state.includeParentsItem}\n\t\t\t\t\t\t\t\tvalue={this.state.includeParentsItem}\n\t\t\t\t\t\t\t\tonChange={this.includeParentsItemCheck}\n\t\t\t\t\t\t\t\tlabel=\"Parent items\"/>\n\t\t\t\t\t   </ButtonGroup>\n\t\t\t\t</div>\n\t\t\t\t<div className={'btn-toolbar-right'}>\n\t\t\t\t\t<Button className=\"katappult-btn\" onClick={e=>this.refreshView()}><i className=\"fa fa-md fa-refresh\"></i> Recharger</Button>\n\t\t\t\t</div>\n\t\t    </div>\n\t\t)\n\t}\n\n\tgetDetailsViewsUrl(id){\n\t\tlet link\n\t\tif(this.props.detailsViewUriProvider){\n\t\t\tlink = this.props.detailsViewUriProvider(id)\n\t\t}\n\t\telse {\n\t\t\tconst uri = this.props.location.pathname\n\t\t\tlink = uri + '/' + id\n\t\t}\n\t\treturn link\n\t}\n\n\tselectTemplate(e, id){\n\t\tif(e) e.preventDefault();\n\t\tlet tabName = commons.getValueFromUrl('tab');\n\t\tconst url = coreUri.backOfficeViewURL(tabName, \"emailTemplates\", [\"rootId=\" +  id]);\n\t\tthis.props.history.push(url);\n\t}\n\n\tlinkTo = (val, item) => {\n\t\treturn <>\n\t\t\t<div className={'table-list-admin-root-list-div'}>\n\t\t\t\t<span className={'table-link'}>{val.displayName}</span>\n\t\t\t\t<div className={'table-list-admin-root-list-desc1'}>{item.attributes.messageTitle}</div>\n\t\t\t\t<div className={'table-list-admin-root-list-desc2'}>{item.attributes.description}</div>\n\t\t\t</div>\n\t\t</>\n\t}\n\n\tsearchTermUpdated(e){\n\t\tlet queryFilters = {...this.state.queryFilters}\n\t\tqueryFilters.name = e.target.value;\n\t\tthis.loadDatas(queryFilters)\n\t\tthis.setState({\n\t\t\tqueryFilters: queryFilters,\n\t\t\tloading: true,\n\t\t\tviewMode: 'viewList',\n\t\t\tsearchTerm: e.target.value\n\t\t})\n\t}\n\n\tonCreateSuccess(wizardCloseFunction){\n\t\twizardCloseFunction()\n\t\tthis.componentDidMount()\n\t}\n\n\tnewWizardContent(wizardCloseFunction){\n\t\treturn <>\n\t\t\t<EmailTemplatesAdd onCreateSucess={()=>this.onCreateSuccess(wizardCloseFunction)}{...this.props}/>\n\t\t</>\n\t}\n\n\n\trender() {\n\t\tlet items = this.state.items,\n        metaData = this.state.metaData,\n        content, headerActions;\n\n\t\tlet rootObjectForDetailsId = this.getRootObjectForDetailsId()\n\t\tif(!rootObjectForDetailsId){\n\t\t\t\t\tif(this.state.loading){\n\t\t\t\t\t\t\tcontent = <WaitingPane />\n\t\t\t\t\t}\n\t\t\t\t\telse if(items !== null && items.length > 0) {\n\t\t\t        \tconst tableConfig = {\n\t\t\t\t\t\t\tonRowClick : (e, itemId) => this.selectTemplate(e, itemId),\n\t\t\t        \t\tcolumnsConfig: [\n\t\t\t        \t\t    {name:'Nom', displayComponent: (v, i) => this.linkTo(v,i), dataField: 'attributes', defaultSortOrder: 'asc' },\n\t\t\t        \t\t    { displayComponent: (v, i) => this.moreActions(v, i) },\n\t\t\t        \t],\n\t\t\t        }\n\n\t\t\t\t\tcontent = <div className={'table-list-admin-root-list'}>\n\t\t\t\t\t\t<DataTable items={JSON.stringify(items)}\n\t\t\t\t\t\t\t\t\tpaginate={true}\n\t\t\t\t\t\t\t\t\tdisplayTotalElements={true}\n\t\t\t\t\t\t\t\t\tgoToPage={this.goToPage}\n\t\t\t\t\t\t\t\t\tmetaData={JSON.stringify(metaData)}\n\t\t\t\t\t\t\t\t\ttableConfig={tableConfig}/>\n\t\t\t\t\t</div>\n\t        }\n\t        else {\n\t        \t\tcontent = <EmptyPane hideMainMessage={true}\n\t\t\t\t\t\t\t\t\t\t secondaryMessage='No email templates in current container' />\n\t        }\n\t\t}\n\t\telse {\n\t\t\tcontent = <EmailTemplateDetails {...this.props}/>\n\t\t}\n\n    return <div className=\"\">\n        \t\t<div className=\"admin-details-header\">\n\t\t\t\t\t{!rootObjectForDetailsId &&<div className=\"admin-filters-root admin-filters-root-withPadding\">\n\t\t\t\t\t\t\t\t<Input type=\"text\"\n\t\t\t\t\t\t\t\t\t   className=\"admin-hover-input form-control\"\n\t\t\t\t\t\t\t\t\t   name=\"search-input\"\n\t\t\t\t\t\t\t\t\t   placeholder=\"Chercher un élément\"\n\t\t\t\t\t\t\t\t\t   autocomplete=\"off\"\n\t\t\t\t\t\t\t\t\t   onChange={(e) => this.searchTermUpdated(e)}\n\t\t\t\t\t\t\t\t\t   defaultValue={this.state.searchTerm}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t    <div className=\"portlet-content\">\n\t\t\t\t\t <div className=\"main-data-table \">{content}</div>\n\t\t\t    </div>\n  \t\t</div>\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (EmailTemplates)\n\nexport const updateEmailTemplatesNavCriterias = (payload) => ({\n    type: 'APPLICATION_UPDATE_EMAIL_TEMPLATES_NAV_CRITERIAS',\n    payload: payload\n});\n","import React, { Component } from 'react';\nimport { AttributeListGroup} from '_components/_common';\nimport {WaitingPane} from \"_components/_common\";\nimport {typeService} from \"_services/type.services\";\nimport {toast} from \"react-toastify\";\n\nclass TypeAdd extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            formData: {},\n            errors:[]\n        }\n\n        this.createType = this.createType.bind(this)\n        this.attributesList = this.attributesList.bind(this);\n    }\n\n    createType(formData) {\n        this.setState({loading:true})\n\n        if(this.props.rootType !== true){\n            formData.parentTypeId = this.props.parentTypeId;\n            formData.rootType = false;\n        }\n        else {\n            formData.rootType = true;\n        }\n\n        formData.containerId = this.props.containerId;\n        typeService.createType(formData, this.props.containerId).then(response => {\n            this.props.onCreateSuccess(this.props.rootType);\n            toast.success(\"Le type a été créé avec succès\")\n        })\n    }\n\n    /**\n     * Attributes list\n     */\n    attributesList(){\n        const attributesList = {\n            formId: 'dt-form',\n            saveButtonTitle: 'CRÉER',\n            onSubmit: (formData) => this.createType(formData),\n            attributes: [\n                {name: 'Nom', dataField: 'name', required:true,  placeHolder: 'Nom'},\n                {name: 'Nom logique', dataField: 'logicalName',  required: true},\n                {name: 'Description', dataField: 'description',  required: true, placeHolder: 'Description'},\n                {name: 'I18n', dataField: 'i18nKey',  required: true, placeHolder: 'Internationalisation'},\n            ]\n        }\n\n        return attributesList;\n    }\n\n    render() {\n        if(this.state.loading){\n            return <WaitingPane/>\n        }\n\n        let errors = []\n        if(this.state.errors.length > 0) {\n            this.state.errors.map(error => {\n                errors.push(<p>{error}</p>)\n            })\n        }\n\n        let formData ={...this.state.formData}\n        return (\n            <div className=\"container-create-root\">\n                <div id=\"form-errors-section\" className=\"form-error\">\n                    {errors}\n                </div>\n                {!this.props.rootType && <p style={{'margin-bottom':'2rem'}}><strong>Type parent</strong>&nbsp;&nbsp;&nbsp;{this.props.parentTypeName}</p>}\n                <AttributeListGroup\n                    attributesListConfig={this.attributesList()}\n                    data={formData}\n                    standardFooterActions=\"true\"\n                    formMode='create_object'/>\n            </div>\n        )\n    }\n}\n\nexport default TypeAdd;\n","import React, { Component } from 'react';\nimport {DataTable, WaitingPane} from \"_components/_common\";\nimport {typeService} from \"_services/type.services\";\nimport {containerService} from \"_services/container.services\";\nimport {toast} from \"react-toastify\";\n\nclass TypeSetLifecycle extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            formData: {},\n            errors:[],\n            loading: true,\n            pageSize: 10\n        }\n\n        this.selectLifecycle = this.selectLifecycle.bind(this)\n        this.goToPage = this.goToPage.bind(this)\n\n    }\n\n    selectLifecycle(id) {\n        this.setState({loading:true})\n        typeService.setLifecycle(this.props.typeId, id, this.props.containerId).then(response => {\n            this.setState({loading: false})\n\n            if(response.ok){\n                toast.success(\"Le cycle de vie a pas été changé\")\n                this.props.onCreateSuccess()\n            }\n            else {\n                toast.error(\"Le cycle de vie n'a pas été changé\")\n            }\n        })\n    }\n\n    actions(v, i){\n        return <td>\n            <div className={'btn-toolbar'}><button onClick={()=>this.selectLifecycle(v.id)}>Selectionner</button></div>\n        </td>\n    }\n\n    componentDidMount() {\n       this.goToPage(0)\n    }\n\n    goToPage(page){\n        containerService.getAllLifecycles(this.props.containerId, page, this.state.pageSize, true).then(response => {\n            this.setState({\n                items : response.data, metaData:\n                response.metaData, loading: false\n            })\n        })\n    }\n\n    render() {\n        if(this.state.loading){\n            return <WaitingPane/>\n        }\n\n        let errors = []\n        if(this.state.errors.length > 0) {\n            this.state.errors.map(error => {\n                errors.push(<p>{error}</p>)\n            })\n        }\n\n        const items = this.state.items;\n        const metaData = this.state.metaData;\n        const tableConfig = {\n            columnsConfig: [\n                { dataField: 'attributes.name' },\n                { dataField: 'attributes.description' },\n                { dataField: 'attributes', displayComponent: (v, i) => this.actions(v,i)},\n            ],\n        }\n\n        return (\n            <div className=\"type-set-lifecycle-root\">\n                <div id=\"form-errors-section\" className=\"form-error\">\n                    {errors}\n                </div>\n                <div className=\"\">\n                    <DataTable items={JSON.stringify(items)}\n                               metaData={JSON.stringify(metaData)}\n                               tableConfig={tableConfig}\n                               tableClassName=\"data-table\"\n                               goToPage={this.goToPage}\n                               pagination={true}\n                               displayTotalElements={true}\n                               paginate={true}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TypeSetLifecycle;\n","import React, { Component } from 'react';\nimport { AttributeListGroup} from '_components/_common';\nimport {WaitingPane} from \"_components/_common\";\nimport {typeService} from \"_services/type.services\";\n\nclass TypeUpdateBaseClass extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            formData: {},\n            errors:[]\n        }\n\n        this.updateBaseClass = this.updateBaseClass.bind(this)\n    }\n\n    updateBaseClass(formData) {\n        this.setState({loading:true})\n        if(formData.baseClass){\n            formData.containerId = this.props.containerId;\n            typeService.updateBaseClass(this.props.typeId, formData, this.props.containerId).then(response => {\n                this.props.onSuccess();\n            })\n        }\n    }\n\n    /**\n     * Attributes list\n     */\n    attributesList(){\n        const attributesList = {\n            formId: 'dt-form',\n            saveButtonTitle: 'Modifier',\n            onSubmit: (formData) => this.updateBaseClass(formData),\n            attributes: [\n                {name: 'Classe', dataField: 'baseClass', required:true,  placeHolder: 'Classe java de base'},\n            ]\n        }\n\n        return attributesList;\n    }\n\n    render() {\n        if(this.state.loading){\n            return <WaitingPane/>\n        }\n\n        let errors = []\n        if(this.state.errors.length > 0) {\n            this.state.errors.map(error => {\n                errors.push(<p>{error}</p>)\n            })\n        }\n\n        let formData ={...this.state.formData}\n        return (\n            <div className=\"container-create-root\">\n                <div id=\"form-errors-section\" className=\"form-error\">{errors}</div>\n                <AttributeListGroup\n                    attributesListConfig={this.attributesList()}\n                    data={formData}\n                    standardFooterActions=\"true\"\n                    formMode='create_object'/>\n            </div>\n        )\n    }\n}\n\nexport default TypeUpdateBaseClass;\n","import React from 'react';\nimport {\n    Accordion,\n    AccordionItem,\n    AccordionItemButton,\n    AccordionItemHeading,\n    AccordionItemPanel\n} from \"react-accessible-accordion\";\nimport {DataTable, EmptyPane} from \"_components/_common\";\n\nfunction TypeDetailsBusinessRules(props) {\n\n    const rulesCount = props.vetoableBusinessRulesItems ? props.vetoableBusinessRulesItems.length : 0;\n    if(props.loading){\n        return <></>\n    }\n\n    let tables = []\n    if(props.datas && props.datas.length > 0) {\n        let grouped = groupByEvent(props.datas)\n        Object.keys(grouped).map(function (k, v) {\n            let datas = grouped[k]\n            let table = <AccordionItem>\n                <AccordionItemHeading>\n                    <AccordionItemButton>\n                        <div style={{\n                            'display': 'flex',\n                            'justify-content': 'space-between',\n                            'margin-top': '-21px',\n                            'margin-left': '3rem',\n                            'margin-right': '2rem'\n                        }}>\n                            <div style={{\n                                paddingTop:'6px'\n                            }}>{k}</div>\n                            <div className={'accordion-rules-index'}>{datas.length}</div>\n                        </div>\n                    </AccordionItemButton>\n                </AccordionItemHeading>\n                <AccordionItemPanel>\n                    <DataTable items={JSON.stringify(datas)} tableConfig={vetoableTableConfig} paginate={false}/>\n                </AccordionItemPanel>\n            </AccordionItem>\n            tables.push(table)\n        });\n    }\n    else {\n        return <EmptyPane />\n    }\n\n    return <Accordion allowMultipleExpanded allowZeroExpanded>\n        {tables}\n    </Accordion>\n}\n\nexport default  TypeDetailsBusinessRules;\n\nfunction groupByEvent(array){\n    let group = array.reduce(function (r, a) {\n        r[a.attributes.event] = r[a.attributes.event] || [];\n        r[a.attributes.event].push(a);\n        return r;\n    }, Object.create(null));\n    return group;\n}\n\nconst tableCell = (value, size) => {\n    return <td width={size}>\n        {value}\n    </td>\n}\n\nconst vetoableTableConfig = {\n    columnsConfig: [\n        { dataField: 'attributes', displayComponent: (v, i) => vetoableIcon(v, i)},\n        { name: 'Ordre', dataField: 'attributes.order', displayComponent: (v) => tableCell(v, '5%')},\n        { name: 'Description',  dataField: 'attributes.description', displayComponent: (v) => tableCell(v, '50%')},\n        { name: 'Règle', dataField: 'attributes.identifier', displayComponent: (v) => tableCell(v, '40%')},\n    ],\n}\n\nconst vetoableIcon = (v, i) => {\n    let content;\n    if(v.vetoable){\n        content = <i className={'fa fa-flash fa-lg'}></i>\n    }\n\n    if(!v.vetoable && !v.transactionPhase){\n        content = <i></i>\n    }\n\n    if(!v.vetoable && v.transactionPhase === 'AFTER_COMMIT'){\n        content = <i className={'fa fa-lg fa-check'}></i>\n    }\n\n    if(!v.vetoable && v.transactionPhase === 'AFTER_ROLLBACK'){\n        content = <i className={'fa fa-lg fa-reply'}></i>\n    }\n\n    return <div style={{margin: '0.5rem 0rem 0rem 0.5rem'}}>{content}</div>\n}\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {AttributesGroup} from '_components/_common';\nimport { typeService } from '_services/type.services';\nimport {Accordion, WaitingPane, Wizard} from \"_components/_common\";\nimport TypeAdd from \"_components/_admin/Types/TypeAdd\";\nimport {contentHolderService} from \"_services/contentHolder.services\";\nimport {toast} from \"react-toastify\";\nimport FileSaver from \"file-saver\";\nimport TypeSetLifecycle from \"_components/_admin/Types/TypeSetLifecycle\";\nimport {LifecycleTransitions} from \"_components/_admin/Lifecycles\";\nimport TypeUpdateBaseClass from \"_components/_admin/Types/TypeUpdateBaseClass\";\nimport {businessRulesService} from \"_services/business.rule.services\";\nimport TypeDetailsBusinessRules from './TypeDetailsBusinessRules.js'\n\nconst summaryAttributesList = {\n    items: [\n        {\n            attributes: [\n                {name: 'Nom', dataField: 'attributes.displayName'},\n                {name: 'Nom logique', dataField: 'attributes.logicalName'},\n\t\t\t\t{name: 'Classe', dataField: 'attributes.baseClass'},\n                {name: 'Path', dataField: 'attributes.logicalPath'},\n                {name: 'Description',  dataField: 'attributes.description'},\n                {name: 'Icone path',    dataField: 'attributes.iconPath'},\n\t            {name: 'Icone name',    dataField: 'attributes.iconName'},\n\t            {name: 'I18N',   dataField: 'attributes.i18nKey'},\n            ]\n        },\n    ],\n}\n\nconst localisationAttributesList = {\n\titems: [\n\t\t{\n\t\t\tattributes: [\n\t\t\t\t{name: 'Icon path',  dataField: 'attributes.iconPath'},\n\t\t\t\t{name: 'Icon name',  dataField: 'attributes.iconName'},\n\t\t\t\t{name: 'I18N key',   dataField: 'attributes.i18nKey'},\n\t\t\t]\n\t\t},\n\t],\n}\n\nconst propTypes = {\n\titem: PropTypes.any,\n};\n\nconst defaultProps = {\n\titem: {},\n};\n\n\n/**\n * Type info view\n */\nclass TypeDetails extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeTab: '1',\n            tabContent: null,\n\t\t\tloading: true,\n\n            vetoableBusinessRulesItems: [],\n            vetoableBusinessRulesItemsMetaData: {},\n\n            afterCommitSuccessBusinessRulesItems: [],\n            afterCommitSuccessBusinessRulesItemsMetaData: {},\n\n            afterCommitErrorBusinessRulesItems: [],\n            afterCommitErrorBusinessRulesItemsMetaData: {},\n        }\n\n\t\tthis.onCreateTypeSuccess = this.onCreateTypeSuccess.bind(this)\n\t\tthis.newContainerWizardContent = this.newContainerWizardContent.bind(this)\n\t\tthis.changeLifecycleWizardContent = this.changeLifecycleWizardContent.bind(this)\n\t\tthis.downloadPrimaryContent = this.downloadPrimaryContent.bind(this)\n\t\tthis.onChangeFile = this.onChangeFile.bind(this)\n\t\tthis.onsetLifecyleSuccess = this.onsetLifecyleSuccess.bind(this)\n\t\tthis.onUpdateSuccess = this.onUpdateSuccess.bind(this)\n\t\tthis.updateBaseClassWizardContent = this.updateBaseClassWizardContent.bind(this)\n    }\n\n    getFormQuery(item, phase){\n    \tlet form = new FormData()\n    \tform['businessClass']= item.attributes.id\n    \tform['vetoable'] = phase === '0' ? true : false\n    \tform['container'] = this.props.containerId\n    \tform['includeParentRules'] = 'true'\n    \tform['businessType'] = ''\n    \tform['phase'] = phase\n    \treturn form\n    }\n\n    loadVetoableBusinessRule(item) {\n    \tif(item) {\n\t\t\tthis.setState({loading: true})\n\n\t    \tlet form = this.getFormQuery(item, '0')\n\t    \tbusinessRulesService.getApplicableRules(form, this.props.containerId).then(e => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tloading: false,\n\t\t\t\t\tvetoableBusinessRulesItems: e.data ? e.data : [],\n\t\t\t\t\tvetoableBusinessRulesItemsMetaData: e.metaData\n\t\t\t\t})\n\t    \t})\n    \t}\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n    \tif(this.props.itemId && this.props.itemId !== prevProps.itemId && this.props.itemId !== 'root_node') {\n\t\t\tthis.loadData(this.props.itemId)\n\t\t}\n\t}\n\n\tloadData(itemId) {\n    \tthis.setState({loading: true})\n    \ttypeService.getById(itemId, this.props.containerId).then(json => {\n\t\t\tlet type = json.data\n\t\t\tthis.setState({\n\t\t\t\titem: json.data,\n\t\t\t\tloading: false,\n\t\t\t\tlifecycleName: json.data.attributes.lifecycleName,\n\t\t\t\tlifecycle: json.data.attributes.lifecycle,\n\t\t\t\tlifecycleId: json.data.attributes.lifecycleId,\n\t\t\t\tlifecycleIterationId: json.data.attributes.lifecycleIterationId\n\t\t\t})\n\n\t\t\treturn json\n\t\t}).then(json => {\n\t\t\tlet type = json.data\n\t\t\tthis.loadVetoableBusinessRule(type)\n\t\t})\n    }\n\n\tonsetLifecyleSuccess(wizardCloseFunction){\n\t\twizardCloseFunction();\n\t\tthis.loadData(this.props.itemId)\n\t}\n\n\tonCreateTypeSuccess(wizardCloseFunction, isRootType){\n\t\twizardCloseFunction();\n\t\tthis.props.onCreateTypeSuccess(isRootType)\n\t}\n\n\tnewContainerWizardContent(wizardCloseFunction, isRootType){\n\t\treturn <TypeAdd containerId={this.props.containerId}\n\t\t\t\t\t\trootType={isRootType}\n\t\t\t\t\t\tonCreateSuccess={() => this.onCreateTypeSuccess(wizardCloseFunction, isRootType)}\n\t\t\t\t\t\tparentTypeName={this.state.item.attributes.displayName}\n\t\t\t\t\t\tparentTypeId={this.props.itemId}\n\t\t\t\t\t\tuserContext={this.props.userContext}/>\n\t}\n\n\tchangeLifecycleWizardContent(wizardCloseFunction){\n\t\treturn <TypeSetLifecycle containerId={this.props.containerId}\n\t\t\t\t\t\t\t\t typeId={this.props.itemId}\n\t\t\t\t\t\t\t\t onCreateSuccess={() => this.onsetLifecyleSuccess(wizardCloseFunction)}\n\t\t\t\t\t\t\t\t userContext={this.props.userContext}/>\n\t}\n\n\tupdateBaseClassWizardContent(wizardCloseFunction){\n\t\treturn <TypeUpdateBaseClass containerId={this.props.containerId}\n\t\t\t\t\t\t\t\t typeId={this.props.itemId}\n\t\t\t\t\t\t\t\t onSuccess={() => this.onUpdateSuccess(wizardCloseFunction)}\n\t\t\t\t\t\t\t\t userContext={this.props.userContext}/>\n\t}\n\n\tonUpdateSuccess(){\n\t\tthis.loadData(this.props.itemId)\n\t}\n\n\tdownloadPrimaryContent(e){\n\t\tif(e) e.preventDefault()\n\t\tcontentHolderService.downloadPrimaryContentBlob(this.state.lifecycleIterationId, this.props.containerId).then( blob => {\n\t\t\tFileSaver.saveAs(blob, 'cycle_de_vie.txt');\n\t\t})\n\t}\n\n\ttoolbar(){\n    \tlet displayToolbar = false\n    \tif(displayToolbar){\n    \t\treturn <div className={'btn-toolbar'}>\n\t\t\t\t<Wizard hideFooter={true}\n\t\t\t\t\t\tdialogSize=\"md\"\n\t\t\t\t\t\tbuttonIcon=\"fa fa-sm fa-plus\"\n\t\t\t\t\t\tbuttonTitle='Type racine'\n\t\t\t\t\t\tdialogTitle='Ajouter un type racine'\n\t\t\t\t\t\tdialogContentProvider={(wizardCloseFunction) => this.newContainerWizardContent(wizardCloseFunction, true)}/>\n\t\t\t\t<Wizard hideFooter={true}\n\t\t\t\t\t\tdialogSize=\"md\"\n\t\t\t\t\t\tbuttonIcon=\"fa fa-sm fa-plus\"\n\t\t\t\t\t\tbuttonTitle='Sous-type'\n\t\t\t\t\t\tdialogTitle='Ajouter un type sous-type'\n\t\t\t\t\t\tdialogContentProvider={(wizardCloseFunction) => this.newContainerWizardContent(wizardCloseFunction, false)}/>\n\t\t\t\t{this.state.lifecycleId && <button onClick={this.downloadPrimaryContent}>\n\t\t\t\t\t<i className={'fa fa-download fa-md'}></i>&nbsp;Cycle de vie</button>\n\t\t\t\t}\n\t\t\t\t<Wizard hideFooter={true}\n\t\t\t\t\t\tdialogSize=\"lg\"\n\t\t\t\t\t\tbuttonIcon=\"fa fa-sm fa-pencil\"\n\t\t\t\t\t\tbuttonTitle='Cycle de vie'\n\t\t\t\t\t\tdialogTitle='Veuillez selectionner le cycle de vie'\n\t\t\t\t\t\tdialogContentProvider={(wizardCloseFunction) => this.changeLifecycleWizardContent(wizardCloseFunction)}/>\n\t\t\t\t<Wizard hideFooter={true}\n\t\t\t\t\t\tdialogSize=\"lg\"\n\t\t\t\t\t\tbuttonIcon=\"fa fa-sm fa-pencil\"\n\t\t\t\t\t\tbuttonTitle='Classe'\n\t\t\t\t\t\tdialogTitle='Modifier la classe de base'\n\t\t\t\t\t\tdialogContentProvider={(wizardCloseFunction) => this.updateBaseClassWizardContent(wizardCloseFunction)}/>\n\t\t\t</div>\n\t\t}\n\t}\n\n\tonChangeFile(e) {\n\t\te.preventDefault()\n\t\tlet file = e.target.files[0]\n\t\tlet formData = new FormData()\n\t\tformData.append('file', file)\n\t\tcontentHolderService.setPrimaryContentFile(this.props.contentHolderId, formData, this.props.containerId).then( response => {\n\t\t\tif(response.ok){\n\t\t\t\ttoast.success('Le cycle de vie a été mis à jour')\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttoast.error('Erreur lors de la mise à jour du cycle de vie!')\n\t\t\t}\n\t\t})\n\t}\n\n    render() {\n\t\tconst {item} = this.state;\n\t\tif (this.state.loading || !this.props.itemId) {\n\t\t\treturn <div style={{padding: '4rem'}}>\n\t\t\t\t<WaitingPane />\n\t\t\t</div>\n\t\t}\n\n\t\treturn <React.Fragment>\n\t\t\t\t{this.toolbar()}\n\n\t\t\t\t<div className={'type-details-title'}>\n\t\t\t\t\t<h1>{this.state.item.attributes.displayName}</h1>\n\t\t\t\t\t<p>{this.state.item.attributes.logicalPath}</p>\n\t\t\t\t</div>\n\n\t\t\t\t<Accordion title={'Règles métiers'} expanded={true} content={\n\t\t\t\t\t<>\n\t\t\t\t\t\t<TypeDetailsBusinessRules\n\t\t\t\t\t\t\tloading={this.state.loading}\n\t\t\t\t\t\t\tdatas={this.state.vetoableBusinessRulesItems}\n\t\t\t\t\t\t\tmetaData={this.state.vetoableBusinessRulesItemsMetaData}/>\n\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t/>\n\n\t\t\t\t<Accordion title={'Cycle de vie'} expanded={true} content={\n\t\t\t\t\t\t\t<LifecycleTransitions {...this.props}\n\t\t\t\t\t\t\t\t\t\t  lifecycleId={this.state.lifecycleId}\n\t\t\t\t\t\t\t\t\t\t  lifecycleName={this.state.lifecycleName}/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\n\t\t\t\t<Accordion title={'Metadonnées'} expanded={true} content={\n\t\t\t\t\t<AttributesGroup\n\t\t\t\t\t\tattributesGroup={summaryAttributesList}\n\t\t\t\t\t\tdata={item}\n\t\t\t\t\t\torientation=\"horizontal\"\n\t\t\t\t\t\tdisplayHeader={true}/>\n\t\t\t\t}\n\t\t\t\t/>\n\t\t</React.Fragment>\n\t}\n}\n\nTypeDetails.propTypes = propTypes;\nTypeDetails.defaultProps = defaultProps;\n\nexport default TypeDetails;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { containerService } from '_services/container.services';\nimport { typeService } from '_services/type.services';\nimport TypeDetails from '_components/_admin/Types/TypeDetails/TypeDetails.js';\n\nimport Tree from 'rc-tree';\nimport 'rc-tree/assets/index.css';\n\n/**\n * Manage types\n */\nclass Types extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: '',\n            loading: true,\n            metaData: '',\n            firstRender: true,\n            selectedItemLink: null,\n            dataRefreshed: false,\n        }\n\n        this.onCreateTypeSuccess = this.onCreateTypeSuccess.bind(this)\n    }\n\n    selectItem(itemId){\n        this.setState({selectedItemLink: itemId})\n    }\n\n    componentDidMount(){\n\t\tcontainerService.getRootTypes(0, -1, true, this.props.containerId).then(json => {\n\t\t\tthis.setState({\n\t\t\t\titems: json.data,\n\t\t\t\tmetaData: json.metaData,\n\t\t\t\t//firstItem: json.data[0].links.details,\n\t\t\t\tselectedItemLink: json.data[0].attributes.id,\n\t\t\t\tloading: false\n\t\t\t})\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(error);\n\t\t\tthis.setState({loading: false})\n\t\t})\n\t}\n\n\tonCreateTypeSuccess(isRootType){\n    \tif(!isRootType){\n\t\t\tthis.setState({needRefreshTree: true})\n\t\t\tsetTimeout(() => this.setState({needRefreshTree: false}), 300)\n\t\t}\n\t\telse {\n\t\t\tthis.setState({\n\t\t\t\titems:null,\n\t\t\t\tmetaData: null,\n\t\t\t\tloading:true\n\t\t\t})\n\t\t\tthis.componentDidMount()\n\t\t}\n\t}\n\n    render() {\n\n\t\tlet leftContent = <ReactTree\n\t\t\tcontainerId={this.props.containerId}\n\t\t\tneedRefreshTree={this.state.needRefreshTree}\n\t\t\trootItems={this.state.items}\n\t\t\tselectItem={(itemId) => this.selectItem(itemId)}/>\n\n\t\tlet\trightContent = <TypeDetails\n\t\t\t\t\t\t\t\t{...this.props}\n\t\t\t\t\t\t\t\tfirstItem={this.state.firstItem}\n\t\t\t\t\t\t\t\tonCreateTypeSuccess={this.onCreateTypeSuccess}\n\t\t\t\t\t\t\t\titemId={this.state.selectedItemLink}/>\n\n\t   return <>\n\t\t   <div className=\"admin-middle-pane types-list\">\n\t\t\t   \t<div className={'left'}>\n\t\t\t\t\t<div className={'left-content'}>{leftContent}</div>\n\t\t\t   \t</div>\n              \t<div className=\"type-details right\">{rightContent}</div>\n            </div>\n\t    </>\n\t  }\n}\n\nexport default Types;\n\n\n/**\n * Tree implementation for type manager\n */\nclass ReactTree extends React.Component {\n\n\t  static propTypes = {\n\t    keys: PropTypes.array,\n\t  }\n\n\t  constructor(props) {\n\t    super(props);\n\t    const keys = props.keys;\n\n\t    this.state = {\n\t      \tdefaultExpandedKeys: ['root_node'],\n\t\t\texpandedKeys: ['root_node'],\n\t      \tdefaultSelectedKeys: keys,\n\t      \tdefaultCheckedKeys: keys,\n\t      \ttreeData: [],\n\t\t\tcurrentNodeKey: null\n\t    };\n\n\t    this.refreshCurrentNode = this.refreshCurrentNode.bind(this)\n\t  }\n\n\trefreshCurrentNode () {\n\t\treturn new Promise(resolve => {\n\t\t\tconst treeData = [...this.state.treeData];\n\t\t\tconst nodeKey = this.state.currentNodeKey\n\n\t\t\tthis.getChildrenTreeData(treeData, nodeKey);\n\t\t\tresolve();\n\t\t});\n\t  }\n\n\t  onLoadData = treeNode => {\n\t\ttreeNode.renderIcon()\n\t    return new Promise(resolve => {\n\t\t\tconst treeData = [...this.state.treeData];\n\t        const nodeKey = treeNode.props.eventKey\n\n\t        this.getChildrenTreeData(treeData, nodeKey);\n\t        resolve();\n\t    });\n\t  }\n\n\t  getChildrenTreeData(treeData, curNodeKey) {\n\t\t   if(curNodeKey !== 'root_node') {\n\t\t\t  const loop = (data, newChildren) => {\n\t\t\t    data.map(item => {\n\t\t\t      if (curNodeKey === item.key) {\n\t\t\t          item.children = newChildren;\n\t\t\t\t\t  item.loading = false\n\t\t\t      }\n\n\t\t\t      if(item.children){\n\t\t    \t\tloop(item.children, newChildren)\n\t\t\t      }\n\t\t\t    })\n\t\t\t  }\n\n\t\t\t  typeService.getSubtypeOf(curNodeKey, true, this.props.containerId).then(json => {\n\t\t        \tlet items = json.data\n\t\t        \tif(items) {\n\t\t        \t\tlet children = []\n\t\t\t        \titems.map(i => {\n\t\t\t\t\t\t\tchildren.push(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tkey: i.attributes.id,\n\t\t\t\t\t\t\t\t\ttitle: i.attributes.displayName,\n\t\t\t\t\t\t\t\t\tisLeaf: false,\n\t\t\t\t\t\t\t\t\tloading: true,\n\t\t\t\t\t\t\t\t\ticon: (props) => businessIcon(props)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tloop(treeData, children);\n\t\t        \t\tthis.setState({ treeData});\n\t\t        \t}\n\t\t        })\n\t\t   }\n\t  }\n\n\t  onSelect = info => {\n\t\t  if(info.length > 0 && info[0] !== 'root_node'){\n\t\t\t  if(this.props.selectItem){\n\t\t\t\t  this.props.selectItem(info[0])\n\t\t\t\t  this.setState({currentNodeKey: info[0]})\n\t\t\t  }\n\t  \t  }\n\t  };\n\n\t  componentDidUpdate(prevProps, prevState, snapshot) {\n\t  \tif(this.props.needRefreshTree && !prevProps.needRefreshTree){\n\t\t\tthis.refreshCurrentNode()\n\t\t}\n\n\t  \tif(this.props.rootItems && !prevProps.rootItems){\n\t\t\t  const treedata = generateRootTreeData(this.props.rootItems)\n\t\t\t  this.setState({treeData: treedata})\n\t  \t}\n\t  }\n\n\tcomponentDidMount() {\n\t  \tif(this.props.rootItems) {\n\t\t\tconst treedata = generateRootTreeData(this.props.rootItems)\n\t\t\tthis.setState({treeData: treedata})\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { treeData } = this.state;\n\t\tif(treeData && treeData.length >0){\n\t\t\treturn (\n\t\t\t\t<Tree\n\t\t\t\t\tref={this.setTreeRef}\n\t\t\t\t\tclassName=\"myCls\"\n\t\t\t\t\tshowLine\n\t\t\t\t\tdefaultExpandParent\n\t\t\t\t\tcheckStrictly\n\t\t\t\t\tshowIcon\n\t\t\t\t\tdefaultExpandedKeys={this.state.defaultExpandedKeys}\n\t\t\t\t\tdefaultSelectedKeys={this.state.defaultSelectedKeys}\n\t\t\t\t\tdefaultCheckedKeys={this.state.defaultCheckedKeys}\n\t\t\t\t\tonSelect={this.onSelect}\n\t\t\t\t\tonCheck={this.onCheck}\n\t\t\t\t\tloadData={this.onLoadData}\n\t\t\t\t\ttreeData={treeData}>\n\t\t\t\t</Tree>\n\t\t\t);\n\t\t}\n\n\t   \treturn <></>\n\t  }\n\t}\n\nconst generateRootTreeData = (items) => {\n\tlet treeData = []\n\tlet children = []\n\tif(items){\n\t\titems.map(i => {\n\t\t\tchildren.push({key: i.attributes.id, title: i.attributes.displayName, isLeaf: false, icon: (props) => businessIcon(props)})\n\t\t})\n\t}\n\n\ttreeData.push({key: 'root_node', title: 'Types métiers', isLeaf: false, children: children, icon: (props) => businessIcon(props)})\n\treturn treeData\n}\n\nconst businessIcon = (props) => {\n\n\tif(props.eventkey === 'root_node'){\n\t\treturn <i className=\"fa fa-home fa-lg primary-icon-color\"></i>\n\t}\n\n\tif(props.loading){\n\t\treturn <i className=\"fa fa-spinner fa-lg primary-icon-color\"></i>\n\t}\n\n\treturn <span>\n\t\t\t<i className=\"fa fa-cubes fa-md primary-icon-color rc-tree-icon_loading\"></i>\n\t\t\t{props.loading && <i className=\"fa fa-spinner fa-md primary-icon-color\"></i>}\n\t</span>\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport AttributeListGroup from '_components/_common/AttributeListGroup';\n\nconst propTypes = {\n\tdata: PropTypes.object,\n};\n\nconst defaultProps = {\n};\n/**\n * Displays type informations panel\n */\nclass TypeInfo extends Component {\n\n    constructor(props){\n        super(props)\n    }\n\n\trender() {\n\t\tconst item = this.props.data;\n        const config = {\n                title: 'Type infos',\n                icon: 'fa fa-info float-right',\n                attributes: [\n                    {name: 'Type',  dataField: 'businessType.displayName', type: 'text'},\n                    {name: 'Logical name',  dataField: 'businessType.logicalName', type: 'text'},\n                    {name: 'Logical path',  dataField: 'businessType.logicalPath', type: 'text'},\n                    {name: 'Description',  dataField: 'businessType.description', type: 'text'},\n                ],\n         };\n\n\t\tconst d = <AttributeListGroup {...this.props} \n                attributesListConfig={config} \n                data={item} \n                orientation=\"horizontal\" \n                displayHeader={this.props.displayHeader} \n                cardClassName={this.props.cardClassName}/>\n        \n\t\treturn (<React.Fragment>{d}</React.Fragment>)\n\t}\n}\n\nTypeInfo.propTypes = propTypes;\nTypeInfo.defaultProps = defaultProps;\n\nexport default TypeInfo;\n\n","import React, { Component } from 'react';\nimport { ButtonToolbar, ButtonGroup, Button} from 'reactstrap';\nimport { typeService } from '_services/type.services';\nimport { Popover, OverlayTrigger, ListGroup} from 'react-bootstrap'\n\n\nexport default class TypeSelectionList extends Component {\n\t\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\trootProductCategorySubtypes: [],\n\t\t\tincludeRootTypeInSelection: false,\n\t\t\tloading: true,\n\t\t\t\n\t\t\t// the default selected type\n\t\t\tselectedType: this.props.currentSelectedType,\n\t\t}\n\t\t\n\t\tthis.selectType = this.selectType.bind(this)\n\t}\n\t/**\n\t * Load subtypes if typeSelectionRootType changes from undefined \n\t * to new value (Has change page).\n\t */\n\tcomponentDidUpdate(prevProps, prevState, snapshot){\n\t\tif(prevProps.typeSelectionRootType === undefined || prevProps.typeSelectionRootType === null){\n\t\t\tif(this.props.typeSelectionRootType !== null && this.props.typeSelectionRootType !== ''){\n\t\t\t\tthis.loadSubtypes();\n\t\t\t}\n\t\t}\n\t}\n\tcomponentDidMount(){\n\t\tthis.loadSubtypes();\n\t}\n\tloadSubtypes(){\n\t\tif(this.props.typeSelectionSingleNavigation === true){\n\t\t\tthis.setState({\n\t\t\t\trootProductCategorySubtypes: [],\n\t\t\t\tselectedType: this.props.typeSelectionRootTypeCategoryType,\n\t\t\t\tloading: false,\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\n\t\t\tif(this.props.typeSelectionRootTypeId){\n\t\t\t\ttypeService\n\t\t\t\t.getSubtypeOfRecursive(this.props.typeSelectionRootTypeId, true, this.props.containerId)\n\t\t\t\t.then(response => {\n\t\t\t\t\t//console.log(\"this.state.rootType.attributes.instanciable : \" + this.state.rootType.attributes.instanciable)\n\t\t\t\t\tif(response){\n\t\t\t\t\t\tlet selectedType = response.data[0]\n\t\t\t\t\t\tif(this.props.typeSelectionRootType \n\t\t\t\t\t\t\t\t&& this.props.typeSelectionRootType.attributes.instanciable !== true){\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// redisplay previous selected type if no null\n\t\t\t\t\t\t\tlet selectedType = response.data[0]\n\t\t\t\t\t\t\tif(this.props.currentSelectedType){\n\t\t\t\t\t\t\t\tlet id = this.props.currentSelectedType.attributes.id\n\t\t\t\t\t\t\t\tresponse.data.map(e => {\n\t\t\t\t\t\t\t\t\tif(e.attributes.id === id){\n\t\t\t\t\t\t\t\t\t\tselectedType = e\t\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(this.props.displayAllSelector === true){\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\trootProductCategorySubtypes: response.data,\n\t\t\t\t\t\t\t\tselectedType: this.props.displaySelectorLabel,\n\t\t\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\trootProductCategorySubtypes: response.data,\n\t\t\t\t\t\t\t\tselectedType: selectedType,\n\t\t\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// load all type of object\n\t\t\t\t\t\tif(this.props.displayAllSelector === true){\n\t\t\t\t\t\t\tif(this.props.onSelectedTypeChange){\n\t\t\t\t\t\t\t\tthis.props.onSelectedTypeChange('')\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// loads selected type only\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tif(this.props.onSelectedTypeChange){\n\t\t\t\t\t\t\t\tthis.props.onSelectedTypeChange(selectedType)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\tselectType(type){\n\t\tthis.setState({\n\t\t\tselectedType: type\n\t\t})\n\t\tdocument.body.click()\n\t\t\n\t\tif(this.props.onSelectedTypeChange){\n\t\t\tthis.props.onSelectedTypeChange(type)\n\t\t}\n\t}\n\tselectableSubtypesTabs(){\n\t\tif(this.state.rootProductCategorySubtypes.length > 0){\n\t\t  let typesDisplay = []\n\t\t  \n\t\t  if(this.props.displayAllSelector === true){\n\t\t\t  let label = this.props.displaySelectorLabel\n\t\t\t  typesDisplay.push(\n\t\t\t\t <ButtonGroup className=\"mr-2\">\n\t\t\t\t \t<Button onClick={e=>this.selectType(label)} color=\"info\">\n\t\t\t\t \t\t<h5>{this.props.displaySelectorLabel}</h5>\n\t\t\t\t \t\t<div className=\"hal-opacity\"><i>No filters, display all types</i></div>\n\t\t\t\t \t</Button>\n\t\t\t\t </ButtonGroup>\n\t\t\t  )\n\t\t  }\n\t\t  \n\t\t  this.state.rootProductCategorySubtypes.map(type => {\n\t\t\t  if(type.attributes.instanciable === true){\n\t\t\t\t  typesDisplay.push(\n\t\t\t\t\t <ButtonGroup className=\"mr-2\">\n\t\t\t\t\t \t<Button onClick={e=>this.selectType(type)} color=\"info\">\n\t\t\t\t\t \t\t<h5>{type.attributes.displayName}</h5>\n\t\t\t\t\t \t\t<div className=\"hal-opacity\"><i>{type.attributes.description}</i></div>\n\t\t\t\t\t \t</Button>\n\t\t\t\t\t </ButtonGroup>\n\t\t\t\t  )\n\t\t\t  }\n\t\t  })\n\t\t  \n\t\t  if(this.state.includeRootTypeInSelection === true \n\t\t\t\t  && this.state.rootType \n\t\t\t\t  && this.state.rootType.attributes.instanciable === true){\n\t\t\t  typesDisplay.push(\n\t\t\t\t <ButtonGroup>\n\t\t\t\t \t<Button color=\"info\">\n\t\t\t\t \t\t<div>\n\t\t\t\t \t\t\t{this.state.rootType.attributes.displayName}\n\t\t\t\t \t\t</div>\n\t\t\t\t \t\t<div className=\"hal-opacity\"><i>{this.state.rootType.attributes.description}</i></div>\n\t\t\t\t \t</Button>\n\t\t\t\t </ButtonGroup>\n\t\t\t  )\n\t\t  }\n\t\t  \n\t\t  return <ButtonToolbar>\n\t\t  \t{typesDisplay}\n\t\t  </ButtonToolbar>\n\t  }\n\t  else {\n\t\t  return (\n\t\t\t <center>\n\t\t\t \t<div>\n\t\t\t \t\tNo content\n\t\t\t \t</div>\n\t\t\t </center>\n\t\t  )\n\t  }\n\t}\n\tselectableSubtypes(){\n\t  if(this.state.rootProductCategorySubtypes.length > 0){\n\t\t  let typesDisplay = []\n\t\t  \n\t\t  if(this.props.displayAllSelector === true){\n\t\t\t  let label = this.props.displaySelectorLabel\n\t\t\t  typesDisplay.push(\n\t\t\t\t <div>\n\t\t\t\t \t<ListGroup.Item action onClick={e=>this.selectType(label)}>\n\t\t\t\t \t\t<h5>{this.props.displaySelectorLabel}</h5>\n\t\t\t\t \t\t<div className=\"hal-opacity\"><i>No filters, display all types</i></div>\n\t\t\t\t \t</ListGroup.Item>\n\t\t\t\t </div>\n\t\t\t  )\n\t\t  }\n\t\t  \n\t\t  this.state.rootProductCategorySubtypes.map(type => {\n\t\t\t  if(type.attributes.instanciable === true){\n\t\t\t\t  typesDisplay.push(\n\t\t\t\t\t <div>\n\t\t\t\t\t \t<ListGroup.Item action onClick={e=>this.selectType(type)}>\n\t\t\t\t\t \t\t<h5>{type.attributes.displayName}</h5>\n\t\t\t\t\t \t\t<div className=\"hal-opacity\"><i>{type.attributes.description}</i></div>\n\t\t\t\t\t \t</ListGroup.Item>\n\t\t\t\t\t </div>\n\t\t\t\t  )\n\t\t\t  }\n\t\t  })\n\t\t  \n\t\t  if(this.state.includeRootTypeInSelection === true \n\t\t\t\t  && this.state.rootType \n\t\t\t\t  && this.state.rootType.attributes.instanciable === true){\n\t\t\t  typesDisplay.push(\n\t\t\t\t <div>\n\t\t\t\t \t<ListGroup.Item action>\n\t\t\t\t \t\t<div>\n\t\t\t\t \t\t\t{this.state.rootType.attributes.displayName}\n\t\t\t\t \t\t</div>\n\t\t\t\t \t\t<div className=\"hal-opacity\"><i>{this.state.rootType.attributes.description}</i></div>\n\t\t\t\t \t</ListGroup.Item>\n\t\t\t\t </div>\n\t\t\t  )\n\t\t  }\n\t\t  \n\t\t  return <ListGroup  variant='flush'>\n\t\t  \t{typesDisplay}\n\t\t  </ListGroup>\n\t  }\n\t  else {\n\t\t  return (\n\t\t\t <center>\n\t\t\t \t<div>\n\t\t\t \t\tNo content\n\t\t\t \t</div>\n\t\t\t </center>\n\t\t  )\n\t  }\n    }\n\t\n\trender(){\n\t\tif(this.props.viewMode === 'tabs'){\n\t\t\treturn this.selectableSubtypesTabs();\n\t\t}\n\t\telse {\n\t\t\tlet popover = (\n\t\t\t  <Popover id=\"popover-basic\">\n\t\t\t    <Popover.Title as=\"h1\">Please select a type</Popover.Title>\n\t\t\t    <Popover.Content>\n\t\t\t      {this.selectableSubtypes()}\n\t\t\t    </Popover.Content>\n\t\t\t  </Popover>\n\t\t)\n\t\t\n\t\tlet label = 'Loading... '\n\t\tif(this.state.loading !== true){\n\t\t\tif(this.state.selectedType) {\n\t\t\t\tif(this.state.selectedType.attributes && this.state.selectedType.attributes.instanciable === true){\n\t\t\t\t\tlabel = this.state.selectedType.attributes.displayName\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tlabel = 'No content'\n\t\t\t\t} \n\t\t\t}\t\n\t\t\telse {\n\t\t\t\tlabel = 'No content'\n\t\t\t}\n\t\t}\n\t\t\n\t   let popoverTrigger = <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover} rootClose>\n\t  \t\t<Button className=\"half-opacity katappult-link no-padding\" color=\"white\" size=\"sm\">\n\t  \t\t\t<h5>&nbsp;{label}&nbsp;<i className=\"fa fa-caret-down\"></i></h5>\n\t  \t\t</Button>\n\t   </OverlayTrigger>\n\t   \n\t   return popoverTrigger\n\t\t}\n\t}\n}\n","import { _doGet, buildURLQuery, API_ROOT } from './utils/services.config';\n/**\n * Default Export\n */\nexport const folderTemplateService = {\n    getById,\n    seartTemplateByNameLike\n};\n/**\n * Get a folder template by its identifier.\n *\n * @param {*} id\n */\nasync function getById(id, containerId) {\n    const uri = \"/api/secured/v1/katappult/folderTemplate/getById?containerId=\" + containerId + '&id=' + id;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function seartTemplateByNameLike(containerId, params){\n\tlet p = buildURLQuery(params);\n\tconst uri = \"/api/secured/v1/katappult/folderTemplate/searchByNameLike?\".concat(p);\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n","import React, { Component } from 'react';\nimport { \n    ButtonToolbar,  Col,  \n    Row,\n    Button,\n    ButtonGroup,\n} from 'reactstrap';\nimport { commons } from '_helpers/commons';\nimport PropTypes from 'prop-types';\nimport { \n\tAttributeListGroup, \n\tPersistenceInfo,\n} from '_components/_common';\nimport { toast } from 'react-toastify';\nimport { folderTemplateService } from '_services/folder.template.services';\nimport { contentHolderService } from '_services/contentHolder.services';\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs';\nimport 'prismjs/components/prism-markup';\nimport 'prismjs/components/prism-css';\nimport 'prismjs/themes/prism-dark.css';\n\n\nconst propTypes = {\n\titem: PropTypes.object,\n};\n\nconst defaultProps = {\n};\n\n/**\n * Folder Template details page\n */\nclass FolderTemplateDetails extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n        \titem: {},\n            mode: 'view',\n            xml: '<PleaseWait>Loading...</PleaseWait>',\n        }\n\n        this.saveEditorContent = this.saveEditorContent.bind(this)\n\t\tthis.setXMLContent = this.setXMLContent.bind(this)\n    }\n    getTemplateId(){\n\t\treturn this.props.templateId ? this.props.templateId : \n\t\t\tthis.props.match ? this.props.match.params.templateId : null;\n\t}\n    componentDidUpdate(prevProps, prevstate){\n\t\tif(prevProps.templateId !== this.getTemplateId()){\n\t\t\tthis.loadDatas(this.getTemplateId())\n\t\t}\n\t}\n    componentDidMount(){\n\t\tconst templateId = this.getTemplateId();\n\t\tthis.loadDatas(templateId)\n    }\n    loadDatas(templateId){\n    \tif(templateId){\n    \t\tfolderTemplateService\n    \t\t.getById(templateId, this.props.containerId)\n    \t\t.then(json => {\n    \t\t\tlet location = json.data.attributes.displayName;\n\t\t\t\tif(this.props.pushBreadCrumb){\n\t\t\t\t\tlet item = {'href': '#', title: location}\n\t\t\t\t\tthis.props.pushBreadCrumb(item)\n\t\t\t\t}\n    \t\t\tthis.setState({item: json, id: templateId});\n            })\n            \n             contentHolderService\n\t\t\t.downloadPrimaryContent(templateId, this.props.containerId)\n\t\t\t.then(blob => {\n\t\t\t\tthis.setState({\n\t\t\t\t\txml: blob\n\t\t\t\t})\n\t\t\t});\n    \t}\n    }\n    commonActions(){\n\t    return (\n\t\t\t<React.Fragment>\n\t\t\t\t<ButtonToolbar>\n\t\t\t\t\t<div>&nbsp;</div>\n\t\t\t\t\t<ButtonGroup>\n\t                \t<Button ><i className=\"fa fa-cloud-download\"></i>&nbsp;DOWNLOAD CONTENT</Button>\n                    </ButtonGroup>\n                    <div>&nbsp;</div>\n                    <ButtonGroup>    \n\t                \t<Button ><i className=\"fa fa-cloud-upload\"></i>&nbsp;REPLACE CONTENT</Button>\n\t                </ButtonGroup>\n\t                <div>&nbsp;</div>\n\t            </ButtonToolbar> \n\t        </React.Fragment>\n\t\t)\n    }\n    saveEditorContent(){\n    \tlet rawcontent = this.state.xml;\n    \t//console.log(rawcontent);\n    \t\n    \tlet contentHolderId = this.getTemplateId();\n    \tlet file = new Blob([rawcontent], {type: 'text/plain'});\n\t\tlet formData = new FormData();\n\t\tformData.append('file', file);\n\t\t\n\t\tcontentHolderService\n\t\t.setPrimaryContentFile(contentHolderId, formData, this.props.containerId)\n\t\t.then( response => {\n\t\t\t\n\t\t\tlet errors = [];\n\t\t\tif(commons.isRequestError(response)){\n\t    \t\terrors.push(commons.getRestErrorMessage(response));\n\t    \t\ttoast.error('Update template error');\n\t    \t\tthis.setState({\n    \t\t\t\terrors: errors,\n    \t\t\t\tloading: false\n    \t\t\t})\n\t    \t}\n\t    \telse {\n\t    \t\ttoast.success('Content updated.')\n    \t\t\t\tthis.setState({\n    \t\t\t\terrors: [],\n    \t\t\t\tloading: false,\n    \t\t\t})\n\t    \t}\n    \t})\n    }\n\tsetXMLContent(contentXml){\n\t\tthis.setState({\n    \t\txml: contentXml\n    \t})\n\t}\n\trender() {\n        const summaryAttributesList = {\n            title: 'Summary',\n            icon: 'fa fa-info float-right',\n            attributes: [\n                {name: 'Name', dataField: 'attributes.displayName'},\n                {name: 'Internal name', dataField: 'attributes.internalName'},\n                {name: 'Description', dataField: 'attributes.logicalName'},\n                {name: 'Reference', dataField: ''},\n            ]\n        };\n\n        if(this.state.item && this.state.item.data){\n            const data = this.state.item.data;\n            if(data){\n                const d = commons.toJSONObject(data);\n                return ( <>\n                \t\t<Row>\n                \t\t\t<Col xs=\"12\" sm=\"12\" md=\"12\">\n\t                \t\t\t<div className=\"admin-details-header\">\n\t\t                    \t\t<p className=\"page-title mt-2\">{d.attributes.displayName}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Col>\n                \t\t</Row>\n                \t\n                       \t <Row className=\"mb-3 mt-4\">\n\t\t\t\t\t\t\t\t<Col xs=\"12\" sm=\"12\" md=\"6\">\n\t\t\t\t\t\t\t\t\t<div className=\"shadowed-pane shadowed-pane-info\">\n                                        <AttributeListGroup \n                                        \tattributesListConfig={summaryAttributesList} \n                                        \tdata={d} \n                                        \tcanEdit={true}\n                                        \tdisplayHeader={true} />\n                                    </div>\n                                </Col>\n                                <Col xs=\"12\" sm=\"12\" md=\"6\">\n                                \t<div className=\"shadowed-pane shadowed-pane-info\">\n                                        <PersistenceInfo  \n                                        \tdata={d} {...this.props} \n                                        \tdisplayHeader={true}/>\n                                   </div>\n\t                            </Col>\n\t                     </Row>\n\t                     <Row>\n\t                     \t<Col>\n\t                     \t\t<div className=\"shadowed-pane shadowed-pane-info\">\n\t\t\t\t\t\t\t\t\t\t<Editor onValueChange={this.setXMLContent}\n\t\t\t\t\t\t\t\t\t\t        value={this.state.xml}\n\t\t\t\t\t\t\t\t\t\t        highlight={code => highlight(code, languages.markup, 'markup')}\n\t\t\t\t\t\t\t\t\t\t        padding={10}\n\t\t\t\t\t\t\t\t\t\t        style={{\n\t\t\t\t\t\t\t\t\t\t          fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n\t\t\t\t\t\t\t\t\t\t          fontSize: 12,\n\t\t\t\t\t\t\t\t\t\t        }}/>\n\t\t\t\t\t\t\t\t\t\t<Button className=\"mt-4 mb-4\" variant=\"warning\" onClick={this.saveEditorContent}>SAVE CONTENT</Button>\n\t\t\t\t\t\t\t\t</div>\n\t                     \t</Col>\n\t                     </Row>\n               </> );\n            }\n        }\n        return (<div></div>);\n    }\n}\n\nFolderTemplateDetails.propTypes = propTypes;\nFolderTemplateDetails.defaultProps = defaultProps;\n\nexport default FolderTemplateDetails;\n\n","import React, { Component, Suspense } from 'react';\nimport {Input} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport {DataTable, WaitingPane, EmptyPane } from '_components/_common';\nimport {FolderTemplateDetails } from '_components/_admin';\nimport { containerService } from '_services/container.services';\nimport { RiFolderSettingsLine } from \"react-icons/ri\";\nimport Button from 'react-bootstrap/Button'\n\n/**\n * Generates folder icon\n */\nconst folderIcon = (val) => {\n\tif(val) return <td><i className=\"icon-folder icons font-xl\"></i></td>\n\treturn <td></td>\n}\n/**\n * Folder template page\n */\nclass FolderTemplates extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\titems: [],\t\n\t\t\tmetaData: '',\n\t\t\tloading:true,\n\t\t\tviewMode: 'viewList',\n\t\t\tname: ''\n\t\t}\n\t}\n\tcomponentDidMount(){\n\t\tcontainerService.getAllFolderTemplates(0, 10, false, this.props.containerId)\n        .then(json => {\n            return json;\n        })\n        .then(json => {\n        \tthis.setState({\n        \t\titems: json.data,\n        \t\tmetaData: json.metaData,\n        \t\tloading: false,\n        \t})\n        })\n        .catch(error => {\n        \tconsole.error(error);\n        \tthis.setState({\n        \t\tloading: false,\n        \t})\n        });\n    }\n    componentDidUpdate(prevProps, prevState){\n\t\tif(prevState.viewMode !== this.props.viewMode){\n\t\t\tthis.setState({\n\t\t\t\tviewMode: this.props.viewMode\n\t\t\t})\n\t\t}\n\t}\n    selectTemplate(e, id){\n\t\tif(e) e.preventDefault()\n\t\tthis.setState({\n\t\t\tselectedTemplate: id,\n\t\t\tviewMode: 'viewDetails'\n\t\t})\n\t}\n    LinkTo(val, item){\n        return <td>\n\t\t\t<Link onClick={e=>this.selectTemplate(e,item.attributes.id)}>\n\t\t\t\t{val.displayName}\n\t\t\t</Link>\n        </td>\n    }\n    url = (item) => {\n        const url = `/admin/p/folderTemplates/${item.attributes.id}`\n        return url;\n    }\n    moreActions = (val) => {\t\n\t\treturn (\n\t\t\t<td className=\"dt-center\">\n\t\t\t\t<Button variant=\"outline-secondary\" size=\"sm\">DETAILS</Button>\n\t\t\t</td>\n\t\t)\n\t}\n\t\n\tgetSearchHeader(){\n\t\treturn\t<div className=\"admin-filters\"> \n\t\t    \t<Input type=\"text\" id=\"input1-group2\"\n\t\t    \t\tclassName=\"admin-filters-search-input\" \n\t\t    \t\tname=\"input1-group2\" \n\t\t    \t\tplaceholder=\"Folder template name\"\n\t\t    \t\tautocomplete=\"off\"\n\t\t    \t\tdefaultValue={this.state.searchTerm}/>\n\t       </div>\n\t}\t\n\t\n\t\n\trender() {\n\t\tconst items = this.state.items;\n        const metaData = this.state.metaData;\n        const tableConfig = {\n        \t\tcolumnsConfig: [\n        \t\t\t{ displayComponent: (v) => enIcon(v) },\n        \t\t    { name:'Name', displayComponent: (v, i) => this.LinkTo(v,i), dataField: 'attributes' },\n        \t\t    { name:'Description', dataField: 'attributes.description'},\n        \t\t\t{ name:'Internal name', dataField: 'attributes.internalName'},\n        \t\t    //{ name:'Created', dataField: 'attributes.createDate', dateFormat: 'DD/MM/YYYY'},\n\t\t        \t{ name:'Last updated', dataField: 'attributes.lastModifiedDate', dateFormat: 'DD/MM/YYYY HH:mm' },\n\t\t        \t{ name: 'Content', displayComponent: (e, v) => this.moreActions(e, v.id), dataField: 'attributes'},\n        \t\t],\n        };\n        \n        let leftContent;\n        if(this.state.viewMode === 'viewList'){\n        \t if(this.state.loading === true){\n         \t\tleftContent = <div className=\"p-5\">\n         \t\t \t<WaitingPane />\n         \t\t </div>\n         \t}\t\n        \telse if(this.state.items.length === 0){\n        \t\tleftContent = <div className=\"p-5\"> \n        \t\t\t<EmptyPane hideMainMessage={true} emptyMessage='Current container has no folder templates' />\n        \t\t</div>\n        \t}\n        \telse {\n\t        \tleftContent =   <DataTable\n\t        \t\t\ttableClassName=\"data-table\" \n\t\t        \t\titems={JSON.stringify(items)} \n\t\t        \t\tpagination={true}\n\t\t        \t\tdisplayTotalElements={true}\t\n\t\t        \t\tmetaData={JSON.stringify(metaData)} \n\t\t        \t\ttableConfig={tableConfig}/>\n        \t}\n       \n\t        return <div className=\"portlet-content\">\n\t\t    \t{leftContent}\n\t\t    </div>\n\t\t}\n\t\t\n\t\tif(this.state.viewMode === 'viewDetails'){\n\t\t\treturn <div>\n\t\t\t\t<FolderTemplateDetails \n\t\t\t\t\tpushBreadCrumb={this.props.pushBreadCrumb} \n\t\t\t\t\ttemplateId={this.state.selectedTemplate}/>\n\t\t\t</div>\n\t\t}\n  }\n}\n\nconst enIcon = (val) => {\n\tif(val) return <td  className=\"dt-center\">\n\t\t\t<RiFolderSettingsLine  className=\"mr-2\" color=\"#EEEE\" size=\"1.3em\"/>\n\t\t</td>\n\treturn <td></td>\n}\n\nexport default FolderTemplates;\n\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {  Input} from 'reactstrap';\nimport {WaitingPane, EmptyPane, DataTable } from '_components/_common';\nimport {TeamTemplateDetails } from '_components/_admin';\nimport { containerService } from '_services/container.services';\nimport { RiTeamLine } from \"react-icons/ri\";\nimport Button from 'react-bootstrap/Button'\n\n/**\n * Team template page\n */\nclass TeamTemplates extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\titems: [],\n\t\t\tmetaData: '',\n\t\t\tloading:true,\n\n\t\t\tviewMode: 'viewList'\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tcontainerService.getAllTeamTemplates(0, 6, false, this.props.containerId).then(json => {\n            return json;\n        })\n        .then(json => {\n        \tthis.setState({\n        \t\titems: json.data,\n        \t\tmetaData: json.metaData,\n        \t\tloading: false\n        \t})\n        })\n        .catch(error => {\n        \tconsole.error(error);\n        \tthis.setState({\n        \t\tloading: false\n        \t})\n        });\n\t}\n\n    selectTemplate(e, id){\n\t\tif(e) e.preventDefault()\n\t\tthis.setState({\n\t\t\tselectedTemplate: id,\n\t\t\tviewMode: 'viewDetails'\n\t\t})\n\t}\n\n\tcomponentDidUpdate(prevprops, prevState){\n\t\tif(prevState.viewMode !== this.props.viewMode){\n\t\t\tthis.setState({\n\t\t\t\tviewMode: this.props.viewMode\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n     * Generates href with link to details view\n     */\n    LinkTo(val, item){\n        return <td>\n\t\t\t\t<Link onClick={e=>this.selectTemplate(e,item.attributes.id)}>\n\t\t\t\t\t{val.displayName}\n\t\t\t\t</Link>\n        </td>\n    }\n\n    moreActions = (val) => {\n\t\treturn (\n\t\t\t<td className=\"dt-center\">\n\t\t\t\t<Button onClick={e => this.selectTemplate(e, val.id)}>DETAILS</Button>\n\t\t\t</td>\n\t\t)\n\t}\n\n\tgetSearchHeader(){\n\t\treturn <div className=\"admin-filters-root\"> \n\t\t    \t<Input type=\"text\" id=\"input1-group2\"\n\t\t    \t\tclassName=\"admin-filters-search-input\"\n\t\t    \t\tname=\"input1-group2\"\n\t\t    \t\tplaceholder=\"Search team template\"\n\t\t    \t\tautocomplete=\"off\"\n\t\t    \t\tdefaultValue={this.state.searchTerm}/>\n\t     </div>\n\t}\n\n\trender() {\n\t\tlet items = this.state.items;\n\t\tconst metaData = this.state.metaData;\n\n\t\tconst tableConfig = {\n\t\t\tcolumnsConfig: [\n\t\t\t\t{ displayComponent: (v) => enIcon(v) },\n\t\t\t    { name: 'Name', displayComponent: (v, i) => this.LinkTo(v,i), dataField: 'attributes'},\n\t\t\t    { name:'Description', dataField: 'attributes.description'},\n        \t\t{ name:'Internal name', dataField: 'attributes.internalName'},\n\t\t\t    //{ name:'Created', dataField: 'attributes.createDate', dateFormat: 'DD/MM/YYYY' },\n\t\t       \t{ name:'Last updated', dataField: 'attributes.lastModifiedDate', dateFormat: 'DD/MM/YYYY HH:mm' },\n\t\t\t\t{ name: 'Content', displayComponent: (e, v) => this.moreActions(e, v.id), dataField: 'attributes'},\n\t\t\t],\n\t\t}\n\n\t\tif(this.state.viewMode === 'viewList'){\n\t\t\tlet datatable;\n\t\t\tif(this.state.loading){\n\t\t\t\tdatatable = <WaitingPane />\n\t\t\t}\n\t        else if(this.state.items.length === 0){\n\t        \tdatatable = <EmptyPane hideMainMessage={true} secondaryMessage='Current container has no team templates' />\n\t        }\n\t        else {\n\t        \tdatatable = <DataTable items={JSON.stringify(items)}\n\t        \t\t\ttableClassName=\"data-table\"\n\t\t\t\t\t\tpagination={true}\n\t\t        \t\thideTableHeader={true}\n\t\t        \t\tdisplayTotalElements={true}\n\t        \t\t\tmetaData={JSON.stringify(metaData)}\n\t        \t\t\ttableConfig={tableConfig}/>\n\t        }\n\n\t        return <div className=\"portlet-box\">{datatable}</div>\n        }\n\n        return <div className=\"\">\n\t\t\t\t<TeamTemplateDetails\n\t\t\t\t\tpushBreadCrumb={this.props.pushBreadCrumb}\n\t\t\t\t\ttemplateId={this.state.selectedTemplate}/>\n\t\t</div>\n  }\n}\n\nconst enIcon = (val) => {\n\tif(val) return <td  className=\"dt-center\">\n\t\t\t<RiTeamLine  color=\"#EEEE\" size=\"1.3em\"/>\n\t\t</td>\n\treturn <td></td>\n}\n\n\nexport default TeamTemplates;\n","import { _doGet, API_ROOT } from './utils/services.config';\n/**\n * Default Export\n */\nexport const teamTemplateService = {\n    getById,\n};\n/**\n * Get a team template by its identifier.\n *\n * @param {*} id\n */\nasync function getById(id, containerId) {\n    const uri = \"/api/secured/v1/katappult/teamTemplate/byId?id=\" + id + '&containerId=' + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n","import React, { Component } from 'react';\nimport { commons } from '_helpers/commons';\nimport PropTypes from 'prop-types';\nimport { \n\tAttributeListGroup, \n\tPersistenceInfo,\n\tContentHolderAction,\n} from '_components/_common';\nimport { teamTemplateService } from '_services/team.templates.services';\nimport 'prismjs/components/prism-markup';\nimport 'prismjs/components/prism-css';\nimport 'prismjs/themes/prism-dark.css';\n\n\nconst propTypes = {\n\titem: PropTypes.object,\n};\n\nconst defaultProps = {\n};\n\n/**\n * Team Template details page\n */\nclass TeamTemplateDetails extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n        \titem: {},\n        \txml: '<PleaseWait>Loading...</PleaseWait>',\n        }\n    }\n    getTemplateId(){\n\t\treturn this.props.templateId ? this.props.templateId : \n\t\t\tthis.props.match ? this.props.match.params.templateId : null;\n\t}\n    componentDidUpdate(prevProps, prevstate){\n\t\tif(prevProps.templateId !== this.getTemplateId()){\n\t\t\tthis.loadDatas(this.getTemplateId())\n\t\t}\n\t}\n    componentDidMount(){\n\t\tconst templateId = this.getTemplateId();\n\t\tthis.loadDatas(templateId)\n    }\n    loadDatas(templateId){\n    \tif(templateId){\n    \t\tteamTemplateService\n    \t\t.getById(templateId, this.props.containerId)\n    \t\t.then(json => {\n    \t\t\tlet location = json.data.attributes.displayName;\n\t\t\t\tif(this.props.pushBreadCrumb){\n\t\t\t\t\tlet item = {'href': '#', title: location}\n\t\t\t\t\tthis.props.pushBreadCrumb(item)\n\t\t\t\t}\n\t\t\t\t\n    \t\t\tthis.setState({item: json, id: templateId});\n            })\n    \t}\n    }\n    \n    saveEditorContent(){\n    }\n    \n\trender() {\n        const summaryAttributesList = {\n            title: 'Summary',\n            icon: 'fa fa-info float-right',\n            attributes: [\n                {name: 'Name', dataField: 'attributes.displayName'},\n                {name: 'Internal name', dataField: 'attributes.internalName'},\n                {name: 'Description', dataField: 'attributes.logicalName'},\n            ]\n        };\n\n        if(this.state.item && this.state.item.data){\n            const data = this.state.item.data;\n            if(data){\n                const d = commons.toJSONObject(data);\n                return (<>\n            \t\t<div className=\"admin-details-header\">\n                        <p className=\"page-title\">{d.attributes.displayName}</p>\n\t\t\t\t\t\t<ContentHolderAction contentHolderId={data.attributes.id}/>\n\t\t\t\t\t</div>\n                     <div className=\"bordered-panel\">\n                            <AttributeListGroup \n                            \tattributesListConfig={summaryAttributesList} \n                            \tdata={d} \n                            \tcanEdit={true}\n                            \tdisplayHeader={true} />\n                     </div>   \n                     <div className=\"bordered-panel\">\n                            <PersistenceInfo  \n                            \tdata={d} {...this.props} \n                            \tdisplayHeader={true}/>\n                     </div>   \n                </>);\n            }\n        }\n        return (<div></div>);\n    }\n}\n\nTeamTemplateDetails.propTypes = propTypes;\nTeamTemplateDetails.defaultProps = defaultProps;\n\nexport default TeamTemplateDetails;\n\n","import { _doGet, _doPostMp, API_ROOT,_doGetText, _doPut, buildURLQuery } from './utils/services.config';\n/**\n * Default Export\n */\nexport const batchService = {\n    getJobTypes,\n    batchLoad,\n    batchExport,\n    jobCommands,\n    getAllJobs,\n    cancel,\n    downloadMasterFile,\n    downloadLogFile,\n    getById,\n\timportableTypes\n};\n\nasync function importableTypes(containerId){\n\tconst uri = \"/api/secured/v1/katappult/batch/importableTypes?containerId=\" + containerId;\n\tconst url = `${API_ROOT}` + uri;\n\treturn _doGet(url);\n}\n\nasync function getById(jobId, containerId){\n\tconst uri = \"/api/secured/v1/katappult/batch/byId?containerId=\" + containerId + \"&id=\" + jobId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n/**\n * Get job types for a job\n */\nasync function cancel(jobId, containerId){\n\tconst uri = '/api/secured/v1/katappult/batch/jobs/cancel?containerId=' + containerId + \"&id=\" + jobId;\n\tconst url = `${API_ROOT}` + uri;\n    return _doPut(url);\n}\nasync function downloadMasterFile(jobId, containerId) {\n\tlet uri = '/api/secured/v1/katappult/batch/jobs/masterFile?containerId=' + containerId + \"&id=\" + jobId\n    let url = `${API_ROOT}` + uri\n\treturn _doGetText(url)\n}\nasync function downloadLogFile(jobId, containerId) {\n\tlet uri = '/api/secured/v1/katappult/batch/jobs/logFile?containerId=' + containerId + \"&id=\" + jobId\n    let url = `${API_ROOT}` + uri\n\treturn _doGetText(url)\n}\n/**\n * Get all jobs\n */\nasync function getAllJobs(params, containerId){\n\tparams.includeParentsItem = false;\n\tlet p = buildURLQuery(params);\n\tconst uri = \"/api/secured/v1/katappult/batch/jobs?\".concat(p).concat(\"&containerId=\").concat(containerId);\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n/**\n * Get job types for a job\n */\nasync function getJobTypes(job, containerId){\n\tconst uri = \"/api/secured/v1/katappult/batch/jobTypes?forJob=\".concat(job).concat(\"&containerId=\").concat(containerId);\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n/**\n * Get job commands for a job mapping\n */\nasync function jobCommands(forMapping, containerId){\n\tconst uri = \"/api/secured/v1/katappult/batch/jobCommands?forMapping=\".concat(forMapping).concat(\"&containerId=\").concat(containerId);\n\tconst url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n/**\n * Launch a batch load job\n *\n * @param formData\n * @returns\n */\nasync function batchLoad(formData){\n\tlet uri = '/api/secured/v1/katappult/batch/load'\n    let url = `${API_ROOT}` + uri\n\treturn _doPostMp(url, formData)\n}\n/**\n * Launch a batch export job\n *\n * @param formData\n * @returns\n */\nasync function batchExport(formData){\n\tlet uri = '/api/secured/v1/katappult/batch/export2'\n\tlet url = `${API_ROOT}` + uri\n\tformData['output.file.name'] = 'export.txt'\n\treturn _doPostMp(url, JSON.stringify(formData))\n}\n","import React, {Component} from 'react';\nimport {batchService} from '_services/batch.services';\nimport {WaitingPane} from '_components/_common';\nimport {commons} from '_helpers/commons';\nimport {toast} from 'react-toastify';\nimport Form from 'react-bootstrap/Form'\n\nclass DataImport extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            errors: [],\n            masterFile: null,\n            importableTypes: []\n        }\n\n        this.doBatchImport = this.doBatchImport.bind(this);\n        this.masterFileUpdate = this.masterFileUpdate.bind(this)\n        this.reinitParams = this.reinitParams.bind(this)\n        this.loadFileContent = this.loadFileContent.bind(this)\n        this.selectChange = this.selectChange.bind(this)\n    }\n\n    masterFileUpdate(e) {\n        this.setState({masterFile: e.target.files[0]})\n        this.fileContent(e.target.files[0])\n    }\n\n    doBatchImport() {\n        let formData2 = new FormData()\n        formData2.append('file', this.state.masterFile)\n\n        if (!this.state.masterFile) {\n            toast.error('Veuillez sélectionner un fichier')\n            return;\n        }\n\n        if (!this.state.importType) {\n            toast.error(\"Type d'import inconnu\")\n            return\n        }\n\n        let form = {}\n        form['separator.char'] = '|'\n        form['input.file.path'] = ''\n        form['job.name'] = \"standardBatchImport\"\n        form['job.type'] = this.state.importType\n        form['domain'] = commons.getWorkingContainerPath(this.props.userContext)\n        form['container'] = commons.getWorkingContainerPath(this.props.userContext)\n        form['attach.discarded.file'] = false\n        form['attach.log.file'] = false\n        form['email.success.template.name'] = 'DEFAULT_LOADER_EMAIL_SUCCESS_TEMPLATE'\n        form['email.error.template.name'] = 'DEFAULT_LOADER_EMAIL_ERROR_TEMPLATE'\n        form['log.file.extension'] = '.log'\n        form['separator.char'] = '|'\n        form['comment.char'] = '#'\n        form['notify.on.error'] = 'false'\n        form['notify.on.success'] = 'false'\n        form['mail.on.success'] = false\n        form['mail.on.error'] = false\n\n        this.setState({loading: true})\n        formData2.append('form', JSON.stringify(form));\n\n        let fileName = this.state.masterFile.name\n        this.reinitParams();\n\n        batchService.batchLoad(formData2, this.props.containerId).then(response => {\n            if (response.message) {\n                toast.error(\"Une erreur est survenue lors du traitement du fichier : \" + fileName);\n            } else {\n                toast.success(\"Import des données est terminé (\" + fileName + \")\")\n            }\n\n            this.setState({loading: false})\n        })\n            .catch(error => {\n                this.setState({loading: false})\n                toast.error(\"Une erreur est survenue lors du traitement du fichier : \" + fileName);\n            })\n    }\n\n    reinitParams() {\n        this.fileInput.value = \"\"\n        this.setState({masterFile: null, textFromFileLoaded: null})\n    }\n\n    loadFileContent(fileLoadedEvent) {\n        let textFromFileLoaded = fileLoadedEvent.target.result;\n        this.setState({textFromFileLoaded: textFromFileLoaded})\n    }\n\n    fileContent(masterFile) {\n        let fileReader = new FileReader();\n        fileReader.onload = (fileLoadedEvent) => this.loadFileContent(fileLoadedEvent);\n        fileReader.readAsText(masterFile, \"UTF-8\");\n    }\n\n    componentDidMount() {\n        batchService.importableTypes(this.props.containerId).then(response => {\n            if (response.data && response.data) {\n                this.setState({\n                    importableTypes: response.data,\n                    importType: response.data.length > 0 ? response.data[0].split(\";\")[0] : null\n                })\n            }\n        })\n    }\n\n    selectChange(event) {\n        this.setState({\n            importType: event.target.value\n        })\n    }\n\n    importableTypesSelect() {\n        let options = []\n        this.state.importableTypes.map(importableType => {\n            let split = importableType.split(\";\")\n            if (split.length > 1) {\n                let type = split[0];\n                let desc = split[1];\n                options.push(<option value={type}>{desc}</option>)\n            }\n        })\n\n        return <Form.Control as=\"select\" style={{width: '50%', marginRight: '1rem'}} onChange={this.selectChange}>\n            {options}\n        </Form.Control>\n    }\n\n    render() {\n        let action = <div className={'btn-toolbar'}>\n            <button onClick={this.reinitParams}>{'Réinitialiser le formulaire'}</button>\n            <button onClick={this.doBatchImport} style={{width: '30%'}}>{\"Lancer l'import\"}</button>\n        </div>\n\n        let content = <div className={'master-file-input'}>\n            <input type=\"file\" onChange={this.masterFileUpdate} ref={ref => this.fileInput = ref} accept={'.csv'}/>\n            <div style={{'display': 'flex', marginTop: '1rem', marginBottom: '2rem'}}>\n                {this.importableTypesSelect()}\n            </div>\n        </div>\n\n        if (this.state.loading) {\n            return <div>\n                <WaitingPane mainMessage={'Chargement de données'} secondaryMessage={'Veuillez patienter...'}/>\n            </div>\n        }\n\n        return <div className={'shadowed-pane root-pane'}>\n            {content}\n            {action}\n            {this.state.textFromFileLoaded &&\n            <div style={{'margin-top': '2rem', 'border': '1px solid #333', 'padding': '1rem', 'overflow': 'scroll'}}>\n                {this.state.textFromFileLoaded}\n            </div>\n            }\n        </div>\n    }\n}\n\nexport default DataImport;\n","import React, {Component} from 'react';\nimport {batchService} from '_services/batch.services';\nimport {commons} from '_helpers/commons';\nimport {toast} from 'react-toastify';\nimport FileSaver from 'file-saver';\n\nclass DataExport extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            errors: []\n        }\n\n        this.doBatchExport = this.doBatchExport.bind(this);\n    }\n\n    doBatchExport() {\n        let exportConf = getExportByType(this.props.type)\n        if (!exportConf) {\n            toast.info(\"Export KO: type inconnu \")\n            return\n        }\n\n        let form = {}\n        form['separator.char'] = '|'\n        form['input.file.path'] = exportConf.file\n        form['job.name'] = exportConf.job\n        form['job.type'] = exportConf.type\n        form['export.command'] = exportConf.command\n        form['domain'] = commons.getWorkingContainerPath(this.props.userContext)\n        form['container'] = commons.getWorkingContainerPath(this.props.userContext)\n        form['attach.discarded.file'] = false\n        form['attach.log.file'] = false\n        form['email.success.template.name'] = 'DEFAULT_LOADER_EMAIL_SUCCESS_TEMPLATE'\n        form['email.error.template.name'] = 'DEFAULT_LOADER_EMAIL_ERROR_TEMPLATE'\n        form['log.file.extension'] = '.log'\n        form['separator.char'] = '|'\n        form['comment.char'] = '#'\n        form['notify.on.error'] = 'false'\n        form['notify.on.success'] = 'false'\n        form['mail.on.success'] = false\n        form['mail.on.error'] = false\n\n        this.setState({loading: true})\n\n        batchService.batchExport(form, this.props.containerId).then(response => {\n            if (response.message) {\n                toast.error(\"Telechargement KO : \" + response.message.substring(0, 200))\n            } else {\n                let path = response.metaData?.outputFilePath;\n                if (path) {\n                    let content = response.metaData.content\n                    let blob = new Blob([content], {type: \"plain/text;charset=UTF-8\"});\n                    FileSaver.saveAs(blob, this.props.fileName);\n                } else {\n                    toast.error(\"Telechargement KO\");\n                }\n            }\n            this.setState({loading: false})\n        })\n            .catch(error => {\n                toast.error(\"Une erreur est survenue lors de l'export!\")\n                this.setState({loading: false})\n            })\n    }\n\n    render() {\n        let action = <div className={'btn-toolbar'}>\n            <button onClick={this.doBatchExport}>{'Télécharger'}</button>\n        </div>\n\n        return <div className={'data-export-root'}>\n            <span className={'title'}>{this.props.title}</span>\n            {!this.state.loading && action}\n            {this.state.loading && <div><i className={'fa fa-lg fa-spinner'}></i></div>}\n        </div>\n    }\n}\n\nexport default DataExport;\n\nconst getExportByType = (type) => {\n    if (type === 'EXPORT_FOR_USER_UPDATE_CATEGORY') {\n        return ExportCategory;\n    }\n    if (type === 'EXPORT_FOR_USER_UPDATE_CATALOG') {\n        return ExportCatalog;\n    }\n    if (type === 'EXPORT_FOR_USER_UPDATE_CLIENT_PRICE') {\n        return ExportClientPrice;\n    }\n    if (type === 'EXPORT_FOR_USER_UPDATE_PRODUCTS') {\n        return ExportProducts;\n    }\n    if (type === 'EXPORT_FOR_USER_UPDATE_USER_CATALOG_PROFILE') {\n        return ExportClientProfile;\n    }\n    if (type === 'EXPORT_FOR_USER_UPDATE_PRODUCTS_DESC') {\n        return ExportProductsDesc;\n    }\n    if (type === 'EXPORT_FOR_USER_UPDATE_PRODUCTS_ILLUSTRATION') {\n        return ExportProductsIllustration;\n    }\n    if (type === 'EXPORT_FOR_USER_UPDATE_PRODUCTS_TVA') {\n        return ExportProductsTVA;\n    }\n}\n\nconst ExportCategory = {\n    job: \"standardBatchExport\",\n    type: \"manageShop\",\n    command: 'EXPORT_FOR_USER_UPDATE_CATEGORY',\n    file: '/export/categories.sql'\n}\nconst ExportCatalog = {\n    job: \"standardBatchExport\",\n    type: \"manageShop\",\n    command: 'EXPORT_FOR_USER_UPDATE_CATALOG',\n    file: '/export/catalogs.sql'\n}\nconst ExportClientPrice = {\n    job: \"standardBatchExport\",\n    type: \"manageShop\",\n    command: 'EXPORT_FOR_USER_UPDATE_CLIENT_PRICE',\n    file: '/export/prixClients.sql'\n}\nconst ExportProducts = {\n    job: \"standardBatchExport\",\n    type: \"manageShop\",\n    command: 'EXPORT_FOR_USER_UPDATE_PRODUCTS',\n    file: '/export/produits.sql'\n}\nconst ExportProductsTVA = {\n    job: \"standardBatchExport\",\n    type: \"manageShop\",\n    command: 'EXPORT_FOR_USER_UPDATE_PRODUCTS_TVA',\n    file: '/export/produits.sql'\n}\nconst ExportProductsDesc = {\n    job: \"standardBatchExport\",\n    type: \"manageShop\",\n    command: 'EXPORT_FOR_USER_UPDATE_PRODUCTS_DESC',\n    file: '/export/produits.sql'\n}\nconst ExportProductsIllustration = {\n    job: \"standardBatchExport\",\n    type: \"manageShop\",\n    command: 'EXPORT_FOR_USER_UPDATE_PRODUCTS_ILLUSTRATION',\n    file: '/export/produitsIllustration.sql'\n}\nconst ExportClientProfile = {\n    job: \"standardBatchExport\",\n    type: \"manageShop\",\n    command: 'EXPORT_FOR_USER_UPDATE_USER_CATALOG_PROFILE',\n    file: '/export/userCatalogProfile.sql'\n}\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {ButtonToolbar,} from 'reactstrap';\nimport moment from 'moment'\nimport {DataTable, EmptyPane, WaitingPane} from '_components/_common';\nimport {DataLoaderHistoryDetails} from '_components/_admin';\nimport {batchService} from '_services/batch.services'\nimport {RiFocus3Line} from \"react-icons/ri\";\nimport Button from 'react-bootstrap/Button'\nimport queryString from 'query-string';\nimport {coreUri} from '_helpers/CoreUri'\n\n/**\n * DataLoader history\n */\nclass DataLoaderHistory extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            items: [],\n            metaData: '',\n            query: {\n                page: 0,\n                pageSize: 10,\n                sort: ''\n            },\n        }\n\n        this.goToPage = this.goToPage.bind(this);\n        this.getRootObjectForDetailsId = this.getRootObjectForDetailsId.bind(this)\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n\n    componentDidMount() {\n        this.refreshView();\n    }\n\n    dateTime(val) {\n        if (val) {\n            let time = moment(val, 'YYYY-MM-DD hh:mm:ss S').format('DD/MM/YY hh:mm');\n            return time;\n        }\n        return '-';\n    }\n\n    getStatusDisplay(status) {\n        let content = <i className=\"fa fa-2x fa-warning\"></i>\n        if (status === 'RUNNING') {\n            content = <i className=\"fa fa-2x fa-spinner fa-spin primary-icon-color\"></i>\n        } else if (status === 'SUCCESS') {\n            content = <i className=\"fa fa-2x fa-check-circle-o green\"></i>\n        } else if (status === 'ERROR') {\n            content = <i className=\"fa fa-2x fa-exclamation-triangle red\"></i>\n        } else if (status === 'CANCELED') {\n            content = <i className=\"fa fa-2x fa-stop red\"></i>\n        }\n\n        return content\n    }\n\n    selectHistory(e, val) {\n        if (e) e.preventDefault();\n        const url = coreUri.backOfficeViewURL(\"platform\", \"dataLoader\", [\"rootId=\" +  val.attributes.id]);\n        this.props.history.push(url);\n    }\n\n    cancelJob(e, id) {\n        if (e) e.preventDefault()\n        batchService\n            .cancel(id, this.props.containerId)\n            .then(response => {\n                this.refreshView()\n            })\n    }\n\n    refreshView() {\n        let query = {...this.state.query},\n            containerId = this.props.containerId\n        batchService\n            .getAllJobs(query, containerId)\n            .then(json => {\n                if (json && json.data) {\n                    this.setState({\n                        query: query,\n                        items: json.data,\n                        metaData: json.metaData,\n                        loading: false\n                    })\n                }\n            })\n    }\n\n    goToPage(i) {\n        let query = {...this.state.query},\n            containerId = this.props.containerId;\n        query.page = i\n\n        batchService\n            .getAllJobs(query, containerId)\n            .then(json => {\n                this.setState({\n                    query: query,\n                    items: json.data,\n                    metaData: json.metaData\n                })\n            })\n    }\n\n    itemActions(val) {\n        return <td>\n            <div className={'btn-toolbar'}>\n                <Button disabled={val.status !== 'RUNNING'} onClick={e => this.cancelJob(e, val.id)}>\n                    <i className=\"fa fa-stop primary\"></i></Button>\n            </div>\n        </td>\n    }\n\n    moreActions = (val, item) => {\n        return <td className=\"dt-center\">\n            <div className={'btn-toolbar'}>\n                <Button onClick={e => this.selectHistory(e, item)}>\n                    <i className={'fa fa-lg fa-angle-right'}></i>\n                </Button>\n            </div>\n        </td>\n    }\n    linkTo = (val, item) => {\n        return <td>\n            <Link className={'table-link'} onClick={e => this.selectHistory(e, item)}>{val.jobType}</Link>\n        </td>\n    }\n\n    getRootObjectForDetailsId() {\n        const queryUrlParams = queryString.parse(this.props.location.search);\n        let objectforDetailsId = queryUrlParams.rootId;\n        return objectforDetailsId\n    }\n\n    render() {\n        const items = this.state.items;\n        const metaData = this.state.metaData;\n\n        let objectforDetailsId = this.getRootObjectForDetailsId()\n        if (!objectforDetailsId) {\n\n            const tableConfig = {\n                columnsConfig: [\n                    {name: 'Job', displayComponent: (v, i) => this.linkTo(v, i), dataField: 'attributes'},\n                    {name: 'Statut', dataField: 'attributes.status'},\n                    {\n                        name: 'Date de début',\n                        dataField: 'attributes.startTime',\n                        dateFormat: 'DD/MM/YYYY HH:mm',\n                        type: 'date'\n                    },\n                    {\n                        name: 'Date de fin',\n                        dataField: 'attributes.endTime',\n                        dateFormat: 'DD/MM/YYYY HH:mm',\n                        type: 'date'\n                    },\n                    {displayComponent: (v, i) => this.itemActions(v, i), dataField: 'attributes'},\n                    {displayComponent: (v, i) => this.moreActions(v, i), dataField: 'attributes'},\n\n                ],\n            }\n\n            let leftContent;\n            if (this.state.metaData && this.state.metaData.totalElements > 0) {\n                leftContent = <DataTable items={JSON.stringify(items)}\n                                         tableClassName=\"data-table\"\n                                         goToPage={this.goToPage}\n                                         pagination={true}\n                                         displayTotalElements={true}\n                                         metaData={JSON.stringify(metaData)}\n                                         tableConfig={tableConfig}/>\n            } else {\n                leftContent =\n                    <EmptyPane mainMessage=\"No load history\" secondaryMessage=\"Pas job dans le conteneur courant\"/>\n            }\n\n            let headerActions = <ButtonToolbar>\n                <Button onClick={e => this.refreshView()}>\n                    <i className=\"fa fa-lg fa-refresh\"></i>\n                </Button>\n            </ButtonToolbar>\n\n            return <div className=\"portlet-content\">\n                {this.state.loading ? <WaitingPane/> : leftContent}\n            </div>\n        }\n\n        return <DataLoaderHistoryDetails\n            {...this.props}\n            pushBreadCrumb={this.props.pushBreadCrumb}/>\n    }\n}\n\nexport default DataLoaderHistory;\n\nconst enIcon = (val) => {\n    if (val) return <td className=\"dt-center\">\n        <RiFocus3Line color=\"#EEEE\" size=\"1.3em\"/>\n    </td>\n    return <td></td>\n}\n","import React, {Component} from 'react';\nimport {Button, ButtonToolbar,} from 'reactstrap';\nimport {batchService} from '_services/batch.services';\nimport {AttributesGroup, PersistenceInfo,} from '_components/_common';\nimport queryString from 'query-string';\n\n/**\n * DataLoaderHistoryDetails details page\n */\nclass DataLoaderHistoryDetails extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: null,\n            wc: false,\n            mode: 'view',\n            historyId: this.getRootObjectForDetailsId(),\n        }\n\n        this.updateDatas = this.updateDatas.bind(this)\n        this.getRootObjectForDetailsId = this.getRootObjectForDetailsId.bind(this)\n    }\n\n    getRootObjectForDetailsId() {\n        const queryUrlParams = queryString.parse(this.props.location.search);\n        let objectforDetailsId = queryUrlParams.rootId;\n        return objectforDetailsId\n    }\n\n    componentDidUpdate(prevProps, prevstate) {\n        const prevQueryUrlParams = queryString.parse(prevProps.location.search);\n        const queryUrlParams = queryString.parse(this.props.location.search);\n        let rootId = queryUrlParams.rootId;\n        let prevId = prevQueryUrlParams.rootId;\n        if (prevId !== rootId && rootId) {\n            this.loadDatas()\n        }\n    }\n\n    componentDidMount() {\n        this.loadDatas()\n    }\n\n    loadDatas() {\n        let id = this.getRootObjectForDetailsId();\n        batchService\n            .getById(id, this.props.containerId)\n            .then(response => {\n                this.setState({\n                    item: response.data\n                })\n            })\n    }\n\n    updateDatas(formData) {\n\n    }\n\n    showMasterFile(e, id) {\n        if (e) e.preventDefault()\n\n        batchService\n            .downloadMasterFile(id, this.props.containerId)\n            .then(response => {\n                let blob = new Blob([response], {type: 'text/plain'});\n                let blobUrl = URL.createObjectURL(blob);\n                let w = window.open(blobUrl)\n            })\n    }\n\n    showLogFile(e, id) {\n        if (e) e.preventDefault()\n\n        batchService\n            .downloadLogFile(id, this.props.containerId)\n            .then(response => {\n                let blob = new Blob([response], {type: 'text/plain'});\n                let blobUrl = URL.createObjectURL(blob);\n                let w = window.open(blobUrl)\n            })\n    }\n\n    render() {\n        const attributesList = {\n            items: [\n                {\n                    title: 'Résumé',\n                    //onSubmit: (formData) => this.updateDatas(formData),\n                    attributes: [\n                        {name: 'Job', dataField: 'attributes.jobType'},\n                        {name: 'Statut', dataField: 'attributes.status'},\n                        {\n                            name: 'Date de début',\n                            dataField: 'attributes.startTime',\n                            dateFormat: 'DD/MM/YYYY hh:mm:ss',\n                            type: 'date'\n                        },\n                        {\n                            name: 'Date de fin',\n                            dataField: 'attributes.endTime',\n                            dateFormat: 'DD/MM/YYYY hh:mm:ss',\n                            type: 'date'\n                        },\n                        {name: 'Execution id', dataField: 'attributes.executionId'},\n                        {name: 'Type', dataField: 'attributes.type'},\n                        {name: 'App name', dataField: 'attributes.appName'},\n                        {name: 'App version', dataField: 'attributes.appVersion'},\n                    ]\n                }\n            ]\n        };\n\n        if (this.state.item) {\n            const data = this.state.item;\n            return (<div className={'data-loader-history'}>\n                <div className=\"admin-details-header\">\n                    <p className=\"page-title\">{data.attributes.jobType}</p>\n                    <ButtonToolbar>\n                        <Button onClick={e => this.showMasterFile(e, data.attributes.id)}>\n                            <i className=\"fa fa-download fa-md\"></i>&nbsp;{'Master file'.toUpperCase()}</Button>\n                        <Button onClick={e => this.showLogFile(e, data.attributes.id)}>\n                            <i className=\"fa fa-download fa-md\"></i>&nbsp;{'Log file'.toUpperCase()}</Button>\n                    </ButtonToolbar>\n                </div>\n\n                <div className=\"bordered-panel\">\n                    <AttributesGroup\n                        attributesGroup={attributesList}\n                        data={data}\n                        items={data}\n                        canEdit={true}\n                        standardFooterActions={false}\n                        displayHeader={true}/>\n                </div>\n\n                <div className=\"bordered-panel\">\n                    <PersistenceInfo\n                        {...this.props}\n                        data={data}\n                        displayHeader={true}\n                        addHeaderMargin=\"true\"/>\n                </div>\n            </div>);\n        }\n        return (<div></div>);\n    }\n}\n\n\nexport default DataLoaderHistoryDetails;\n","import { _doGet, buildURLQuery, API_ROOT } from './utils/services.config';\n/**\n * Default Export\n */\nexport const installationService = {\n    details,\n    getHistories,\n    isDatapatchInstalledInContainer\n};\n/**\n * Installation history of application\n * \n * @param {*} id \n */\nasync function getHistories() {\n    const uri = \"/api/secured/v1/katappult/versionHistory\";\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function details(id) {\n    const uri = \"/api/secured/v1/katappult/versionHistory/byId?entityId=\" + id;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function isDatapatchInstalledInContainer(moduleName, containerPath){\n\tconst uri = \"/api/secured/v1/katappult/versionHistory/isDatapatchInstalledInContainer?buildModuleName=\" + moduleName + \"&containerPath=\" + containerPath;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DataTable, WaitingPane } from '_components/_common';\nimport { AppVersion } from '_components/_admin';\nimport { installationService } from '_services/installation.services';\nimport { RiFocus3Line } from \"react-icons/ri\";\nimport queryString from 'query-string';\nimport {coreUri} from '_helpers/CoreUri'\n\n/**\n * AppVersion management page\n */\nclass AppVersions extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\titems: [],\n\t\t\tmetaData: '',\n\t\t\tselectedVersionId: null,\n\t\t\tloading: true\n\t\t}\n\n\t\tthis.getRootObjectForDetailsId = this.getRootObjectForDetailsId.bind(this);\n\t}\n\n\tselectId(e, id){\n\t\tif(e) e.preventDefault();\n\t\tconst url = coreUri.backOfficeViewURL(\"platform\", \"about\", [\"rootId=\" +  id]);\n\t\tthis.props.history.push(url);\n\t}\n\n\t/**\n\t * Generates href with link to details view\n\t */\n\tLinkTo = (val, item) => {\n\t\tlet id = item.attributes.id\n\t\treturn <td>\n\t\t\t<Link className={'table-link'} to='#' onClick={e=>this.selectId(e, id)}>{val}</Link>\n\t\t</td>\n\t}\n\n\tcomponentDidMount(){\n\t\tinstallationService\n\t\t.getHistories(this.props.containerId)\n        .then(json => {\n            return json;\n        })\n        .then(json => {\n        \tthis.setState({\n        \t\tloading: false,\n        \t\titems: json.data,\n        \t\tmetaData: json.metaData\n        \t})\n        })\n        .catch(error => {\n        \tconsole.error(error);\n        \tthis.setState({\n        \t\tloading: false,\n        \t})\n        });\n\t}\n\n\tgetRootObjectForDetailsId(){\n\t\tconst queryUrlParams = queryString.parse(this.props.location.search);\n\t\tlet objectforDetailsId = queryUrlParams.rootId;\n\t\treturn objectforDetailsId\n\t}\n\n\trender() {\n\n\t\tif(this.state.loading){\n\t\t\treturn <div className=\"portlet-content portlet-content-list\">\n\t\t\t\t<WaitingPane />\n\t\t\t</div>\n\t\t}\n\n\t\tlet objectforDetailsId = this.getRootObjectForDetailsId()\n\t\tif(!objectforDetailsId){\n\t\t\tlet headerActions, items = this.state.items;\n\t\t\tconst metaData = this.state.metaData;\n\t\t\tconst tableConfig = {\n\t\t\t\tcolumnsConfig: [\n\t\t\t        {name:'Module', displayComponent: (v, i) => this.LinkTo(v,i), dataField: 'attributes.moduleName', defaultSortOrder: 'asc', headerClassName: 'td-left'},\n\t\t\t\t    {name:'Version', dataField: 'attributes.moduleVersion'},\n\t\t\t\t    {name:'Type', dataField: 'attributes.moduleType'},\n\t\t\t\t    {name:'Installation', dataField: 'attributes.installationStartTime', dateFormat: 'DD/MMM/YYYY HH:mm', type: 'date'},\n\t\t\t\t    //{name:'Installation fin', dataField: 'attributes.installationEndTime', dateFormat: 'DD/MMM/YYYY HH:mm', type: 'date'},\n\t\t\t\t    {name:'Statut', dataField: 'attributes.status'},\n\t\t\t\t],\n\t\t\t}\n\n\t\t\treturn <>\n\t\t\t\t<div className={'portlet-content'}>\n\t\t\t\t\t<DataTable items={JSON.stringify(items)}\n\t      \t\t\t\t\thover={true}\n                        \tmetaData={JSON.stringify(metaData)}\n                            tableConfig={tableConfig}\n\t\t      \t\t\t\tpaginate=\"false\"/>\n\t\t\t\t</div>\n\t\t     </>\n\t     }\n\n\t\treturn <AppVersion {...this.props} pushBreadCrumb={this.props.pushBreadCrumb}/>\n\t}\n}\n\nexport default AppVersions;\n\n\nconst enIcon = (val) => {\n\tif(val) return <td  className=\"dt-center\">\n\t\t\t<RiFocus3Line color=\"#EEEE\" size=\"1.3em\"/>\n\t\t</td>\n\treturn <td></td>\n}\n","import React, { Component } from 'react';\nimport { installationService } from '_services/installation.services';\nimport { commons } from '_helpers/commons';\nimport {\n\tAttributeListGroup,\n\tPersistenceInfo,\n} from '_components/_common';\nimport queryString from 'query-string';\n\nconst summaryAttributesList = {\n    title: '',\n    icon: 'fa fa-info float-right',\n    updatable: false,\n    attributes: [\n        {name: 'Module', \tdataField: 'attributes.moduleName'},\n        {name: 'Version', \tdataField: 'attributes.moduleVersion'},\n        {name: 'Description', dataField: 'attributes.moduleDescription'},\n        {name: 'Type', \tdataField: 'attributes.moduleType'},\n        {name: 'Statut', dataField: 'attributes.status'},\n        {name: 'Debut', dataField: 'attributes.installationStartTime', dateFormat: 'DD/MMM/YYYY HH:mm', type: 'date'},\n\t\t{name: 'Fin', dataField: 'attributes.installationEndTime', dateFormat: 'DD/MMM/YYYY HH:mm', type: 'date'},\n    ]\n};\n\n/**\n * Application version history\n */\nclass AppVersion extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\titem: {},\n\t\t\tid: this.getRootObjectForDetailsId()\n\t\t}\n\n\t\tthis.getRootObjectForDetailsId = this.getRootObjectForDetailsId.bind(this);\n\t}\n\n\n\tgetRootObjectForDetailsId(){\n\t\tconst queryUrlParams = queryString.parse(this.props.location.search);\n\t\tlet objectforDetailsId = queryUrlParams.rootId;\n\t\treturn objectforDetailsId\n\t}\n\n    componentDidMount() {\n\t\tconst versionHistoryId = this.getRootObjectForDetailsId();\n\t\tif(versionHistoryId !== null && versionHistoryId !== undefined){\n\t\t\tconst d = installationService\n\t\t\t\t.details(versionHistoryId)\n\t\t\t\t.then(json => {\n\t\t\t\t\tthis.setState({item: json});\n\t    \t\t})\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps){\n\t\tconst prevQueryUrlParams = queryString.parse(prevProps.location.search);\n\t\tconst queryUrlParams = queryString.parse(this.props.location.search);\n\t\tlet rootId = queryUrlParams.rootId;\n\t\tlet prevId = prevQueryUrlParams.rootId;\n\t\tif(prevId !== rootId && rootId) {\n\t\t\tthis.componentDidMount()\n\t\t}\n\t}\n\n\trender() {\n        const data = this.state.item.data;\n\t\tif(data) {\n\t\t\tconst d = commons.toJSONObject(data);\n            return (\n                <div className={\"app-version-details\"}>\n\t\t\t\t\t<div className=\"admin-details-header\">\n\t\t\t\t\t\t<div className=\"admin-details-header-infos\">\n\t\t\t\t\t\t\t<span className=\"page-title\">{d.attributes.moduleName} </span>\n\t\t\t\t\t\t</div>\n            \t\t</div>\n\n\t\t\t\t\t<div className=\"admin-details-content\">\n\t\t\t\t\t\t<div className={''}>\n\t\t\t\t\t\t\t<AttributeListGroup attributesListConfig={summaryAttributesList} data={d} orientation=\"horizontal\"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={''}>\n\t\t\t\t\t\t\t<PersistenceInfo  {...this.props} data={d}  orientation=\"horizontal\" displayHeader=\"true\"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n                </div>\n            );\n        }\n        else {\n            return <div></div>\n        }\n\t}\n }\n\nexport default AppVersion;\n","import React, {Component} from 'react';\nimport {AttributeListGroup} from '_components/_common';\nimport {containerService} from '_services/container.services';\nimport {commons} from '_helpers/commons';\nimport {WaitingPane} from \"_components/_common\";\n\nclass ContainerCreate extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            formData: {},\n            errors: []\n        }\n\n        this.createContainer = this.createContainer.bind(this)\n        this.attributesList = this.attributesList.bind(this);\n    }\n\n    async createContainer(formData) {\n        this.setState({loading: true})\n\n        let workingContainer = this.props.containerId;\n\n        formData.parentContainerId = this.props.parentContainerId;\n        formData.currentContainerId = workingContainer;\n        formData.ownerId = commons.getCurrentUserAccountOwnerId(this.props.userContext);\n        formData.typePath = 'com.katappult.Container/StandardContainer/PeopleOwnedContainer';\n\n        //formData.type = 'com.katappult.Container/StandardContainer/OrganizationOwnedContainer';\n\n        // if the user is connected, no user email in the form\n        // if the user is no connected, user email must be in form\n        // in order to create an account for this owner.\n        if (!formData.ownerEmail) {\n\n        }\n\n        containerService.createContainer(formData, this.props.parentContainerId).then(response => {\n            if (commons.isRequestError(response)) {\n                this.setState({\n                    loading: false,\n                    errors: [response.message],\n                    formData: formData\n                })\n            } else {\n                this.props.onCreateContainerSuccess(response.data.attributes.id);\n            }\n        })\n    }\n\n    /**\n     * Attributes list\n     */\n    attributesList() {\n        const attributesList = {\n            saveButtonTitle: 'CRÉER',\n            onSubmit: (formData) => this.createContainer(formData),\n            attributes: [\n                {name: 'Nom', dataField: 'name', required: true, placeHolder: 'Nom', pattern: \"[-_ a-zA-Z0-9]+\"},\n                {\n                    name: 'Description',\n                    dataField: 'description',\n                    type: 'textarea',\n                    required: true,\n                    placeHolder: 'Description'\n                },\n            ]\n        }\n\n        return attributesList;\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <WaitingPane/>\n        }\n\n        let errors = []\n        if (this.state.errors.length > 0) {\n            this.state.errors.map(error => {\n                errors.push(<p>{error}</p>)\n            })\n        }\n\n        let formData = {...this.state.formData}\n        return (\n            <div className=\"container-create-root\">\n                <div id=\"form-errors-section\" className=\"form-error\">\n                    {errors}\n                </div>\n                <AttributeListGroup\n                    attributesListConfig={this.attributesList()}\n                    data={formData}\n                    standardFooterActions=\"true\"\n                    formMode='create_object'/>\n            </div>\n        )\n    }\n}\n\nexport default ContainerCreate;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport AttributeListGroup from '_components/_common/AttributeListGroup';\n\nconst propTypes = {\n    data: PropTypes.object,\n};\n\nconst defaultProps = {};\n\nclass ContainerInfo extends Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        const item = this.props.data;\n        const config = {\n            title: 'Container infos',\n            attributes: [\n                {name: 'Nom', dataField: 'container.name', type: 'text'},\n                {name: 'Path', dataField: 'container.path', type: 'text'},\n                {name: 'Description', dataField: 'container.description', type: 'text'},\n            ],\n        };\n\n        const d = <AttributeListGroup {...this.props}\n                                      attributesListConfig={config}\n                                      data={item}\n                                      orientation=\"horizontal\"\n                                      displayHeader={this.props.displayHeader}\n                                      cardClassName={this.props.cardClassName}/>\n\n        return (<React.Fragment>{d}</React.Fragment>)\n    }\n}\n\nContainerInfo.propTypes = propTypes;\nContainerInfo.defaultProps = defaultProps;\n\nexport default ContainerInfo;\n","import React, {Component} from 'react';\nimport {Button} from 'reactstrap';\nimport {containerService} from '_services/container.services';\nimport {DataTable, WaitingPane} from '_components/_common';\nimport Form from 'react-bootstrap/Form';\nimport {connect} from 'react-redux';\n\nconst mapStateToProps = store => ({\n    containerSettingsRX: store.containerSettings.settings\n})\n\nconst mapDispatchToProps = (disptach) => ({})\n\nclass ContainerSettings extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            results: [],\n            metaData: {},\n            createForm: {},\n            editingRow: null,\n\n            canSynchronizeWithSellsy: false\n        }\n\n        this.updateEditedSetting = this.updateEditedSetting.bind(this);\n        this.cancelEditedSetting = this.cancelEditedSetting.bind(this);\n        this.setEditingRow = this.setEditingRow.bind(this);\n        this.formDataChange = this.formDataChange.bind(this);\n    }\n\n    updateEditedSetting(val) {\n        let form = {...this.state.createForm};\n\n        containerService\n            .updateContainerSetting(form, this.props.containerId, this.state.editingRow)\n            .then((response) => {\n                const {reloadAllContainerSettings} = this.props;\n                if (reloadAllContainerSettings) {\n                    reloadAllContainerSettings()\n                }\n                this.setState({\n                    createForm: {},\n                    editingRow: null,\n                });\n            })\n    }\n\n    cancelEditedSetting(val) {\n        this.setState({\n            createForm: {},\n            editingRow: null\n        })\n    }\n\n    setEditingRow(v) {\n        let createForm = {};\n        createForm['value'] = v.value;\n        createForm['id'] = v.id;\n\n        this.setState({\n            editingRow: v.id,\n            createForm: createForm,\n        })\n    }\n\n    formDataChange(e) {\n        let createForm = {...this.state.createForm}\n        createForm[e.target.name] = e.target.value\n        this.setState({\n            createForm: createForm\n        })\n    }\n\n    settingsDatatable() {\n        const tableConfig = {\n            columnsConfig: [\n                {name: 'Name', displayComponent: (v, i) => this.nameValue(v, i), dataField: 'attributes.name'},\n                {name: 'Value', displayComponent: (v, i) => this.settingsValue(v, i), dataField: 'attributes'},\n                {displayComponent: (v, i) => this.rowAction(v, i), dataField: 'attributes'}\n            ],\n        }\n\n        let datas = [];\n        this.props.containerSettingsRX.map(res => {\n            if (this.props.systemSettings === true) {\n                if (res.attributes.systemSetting === true) {\n                    if (res.attributes.displayGroup === this.props.settingsType) {\n                        datas.push(res);\n                    }\n                }\n            } else if (this.props.userSettings === true) {\n                if (res.attributes.systemSetting !== true) {\n                    if (res.attributes.displayGroup === this.props.settingsType) {\n                        datas.push(res);\n                    }\n                }\n            }\n        })\n\n        if (datas.length > 0) {\n            return <div className=\"container-settings\">\n                <div className=\"form-title-level-0\">{this.props.title}</div>\n                <DataTable\n                    items={JSON.stringify(datas)}\n                    metaData={JSON.stringify(this.state.metaData)}\n                    tableConfig={tableConfig}\n                    displayTotalElements={true}\n                    paginate={false}/>\n            </div>\n        }\n\n        return <></>\n    }\n\n    nameValue(val) {\n        return <td className=\"dt-center\" width={'30%'}>\n            {val}\n        </td>\n    }\n\n    settingsValue(val) {\n        let form;\n        if (this.state.editingRow && this.state.editingRow === val.id) {\n            form = (\n                <Form.Control type=\"text\"\n                              placeholder=\"Value\"\n                              onChange={this.formDataChange}\n                              value={this.state.createForm.value}\n                              name=\"value\"/>\n            )\n        } else {\n            form = val.value;\n        }\n\n        return <td className=\"dt-center\" width={'40%'}>\n            {form}\n        </td>\n    }\n\n    rowAction(v, i) {\n        if (v.updatable === true) {\n            if (this.state.editingRow && this.state.editingRow === v.id) {\n                return <td width=\"12%\">\n                    <div className={'btn-toolbar'}>\n                        <Button onClick={() => this.updateEditedSetting(v, i)}> MODIFIER </Button>\n                        <Button onClick={() => this.cancelEditedSetting(v, i)}>ANNULER</Button>\n                    </div>\n                </td>\n            } else {\n                return <td width=\"12%\">\n                    <div className={'btn-toolbar'}>\n                        <Button onClick={() => this.setEditingRow(v)}>\n                            <i className=\"fa fa-pencil fa-lg\"></i>\n                        </Button>\n                    </div>\n                </td>\n            }\n        }\n\n        return <td width=\"12%\">\n        </td>\n    }\n\n    render() {\n        if (this.state.loading === true) {\n            return <WaitingPane/>\n        }\n\n        return this.settingsDatatable();\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContainerSettings);","import React, { Component } from 'react';\n\nclass ContainerDeletion extends Component {\n\n\trender(){\n\t\treturn <></>\n\t}\n}\n\nexport default ContainerDeletion;\n","import React, {Component} from 'react';\nimport {accountService} from '_services/account.services';\n\nclass ContainerOwner extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loaded: false\n        }\n    }\n\n    componentDidMount() {\n        accountService.accountOfParty(this.props.containerOwnerId, this.props.containerId).then(account => {\n            this.setState({account: account, loaded: true});\n        })\n    }\n\n    getDisplayName() {\n        return <>\n            {this.state.account && this.state.account.data &&\n            <p className=\"container-details-owner lead\">{this.state.account.data.attributes.login}&nbsp;({this.state.account.data.attributes.nickName})</p>\n            }\n        </>\n    }\n\n    render() {\n        return <></>\n    }\n}\n\nexport default ContainerOwner;\n","import React, {Component} from 'react';\nimport {Button, ButtonToolbar,} from 'reactstrap';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport {containerService} from '_services/container.services';\nimport {DataTable, EmptyPane, Wizard} from '_components/_common';\nimport {commons} from '_helpers/commons';\nimport {toast} from 'react-toastify';\nimport ContainerCreate from '_components/_admin/Container/ContainerCreate';\nimport ContainerDetails from '_components/_admin/Container/ContainerDetails';\nimport {loginService} from '_services/login.services';\nimport {updateUserContext} from '_reducers/coreUserContextReducer'\n\nconst mapStateToProps = store => ({})\n\nconst mapDispatchToProps = (disptach) => ({\n    updateUserContextRX: (e) => disptach(updateUserContext(e)),\n})\n\nclass ContainersOfCurrent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n            metaData: '',\n            currentContainerName: '',\n            viewMode: 'viewList',\n        }\n\n        this.switchToParent = this.switchToParent.bind(this)\n        this.switchTo = this.switchTo.bind(this)\n        this.emptyTableActions = this.emptyTableActions.bind(this)\n        this.newContainerWizardContent = this.newContainerWizardContent.bind(this)\n        this.onCreateSuccess = this.onCreateSuccess.bind(this)\n    }\n\n    toChild(e, container) {\n        if (e) e.preventDefault()\n        containerService.getChildrenContainers(container.id)\n            .then(json => {\n                this.setState({\n                    currentNavigatingContainer: container.id,\n                    currentContainerName: container.name,\n                    items: json.data,\n                    metaData: json.metaData,\n                    viewMode: 'viewList',\n                })\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }\n\n    switchTo(e, container) {\n        if (e) e.preventDefault()\n        this.switchUserContext(container.id)\n        this.setState({loading: false})\n    }\n\n    switchUserContext(containerId) {\n        loginService\n            .postLogin(commons.sessionId(), containerId)\n            .then(response => {\n                if (response && response.data) {\n                    let userContext = commons.katappult_core_loginSuccess(response)\n                    this.props.updateUserContextRX(userContext);\n\n                    let message = 'Votre espace de travail est: ' + this.props.userContext.workingContainer.name;\n                    toast.success(message);\n                }\n            });\n    }\n\n    onCreateSuccess(wizardCloseFunction) {\n        if (wizardCloseFunction) wizardCloseFunction();\n        this.componentDidMount();\n    }\n\n    newContainerWizardContent(wizardCloseFunction) {\n        if (this.state.store) {\n            return <ContainerCreate\n                onCreateContainerSuccess={() => this.onCreateSuccess(wizardCloseFunction)}\n                parentContainerId={this.state.store.attributes.id}\n                parentContainerPath={this.state.store.attributes.path}\n                parentContainerName={this.state.store.attributes.name}/>\n        } else {\n            return <></>\n        }\n    }\n\n    switchToParent(e) {\n        if (e) e.preventDefault();\n\n        containerService\n            .getParentContainer(this.state.currentNavigatingContainer)\n            .then(json => {\n\n                let parentId = json.data.attributes.id,\n                    path = json.data.attributes.name,\n                    name = json.data.attributes.name;\n\n                containerService\n                    .getChildrenContainers(parentId)\n                    .then(json => {\n\n                        this.setState({\n                            currentNavigatingContainer: parentId,\n                            currentContainerName: name,\n                            currentContainerPath: path,\n                            items: json.data,\n                            metaData: json.metaData,\n                            viewMode: 'viewList',\n                        })\n                    })\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }\n\n    emptyTableActions() {\n        return (\n            <React.Fragment>\n                <Button size=\"md\" color=\"primary\" onClick={e => this.switchToParent(e)}>Parent</Button>\n            </React.Fragment>\n        )\n    }\n\n    componentDidUpdate(prevprops, prevState) {\n        if (prevState.viewMode !== this.props.viewMode) {\n            this.setState({\n                viewMode: this.props.viewMode\n            })\n        }\n    }\n\n    componentDidMount() {\n        let containerId = this.props.containerId;\n        let ownerId = commons.getCurrentUserAccountOwnerId(this.props.userContext);\n\n        containerService\n            .getContainersOfOwner(containerId, ownerId)\n            .then(response => {\n\n                this.setState({\n                    items: response.data,\n                    metaData: response.metaData,\n                    viewMode: 'viewList',\n                })\n\n                return response;\n            })\n            .then(response => {\n                containerService\n                    .getByPath('/application/store', containerId)\n                    .then(res => {\n                        this.setState({\n                            store: res.data\n                        })\n                    })\n\n                return response;\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }\n\n    manageLink(val) {\n        return <td>\n            <Button className=\"action-button\" onClick={() => this.switchTo(null, val)}>GÉRER</Button>\n        </td>\n    }\n\n    switchToLink(val) {\n        return <td>\n            <Button size=\"sm\" color=\"white\" onClick={e => this.toChild(e, val)}><i\n                className=\"fa fa-angle-right fa-lg\"></i></Button>\n        </td>\n    }\n\n    nameOf(container) {\n        return <td>\n            <Link href=\"#\" onClick={e => this.switchTo(null, container)}>{container.name}</Link>\n        </td>\n    }\n\n    details(val) {\n        let url = '#/admin/containers/' + val.id\n        return <td>\n            <Button className=\"katappult-link half-opacity\" color=\"white\" href={url}><i\n                className=\"fa fa-info-circle\"></i></Button>\n        </td>\n    }\n\n    urlOf(v) {\n        return <td>\n            <a href=\"#\">{'www.' + v.name.toLowerCase() + '.not-online.soaggyshop.com'}</a>\n        </td>\n    }\n\n    table() {\n        const items = this.state.items;\n        const metaData = this.state.metaData;\n\n        const tableConfig = {\n            emptyMessageTitle: 'No containers',\n            columnsConfig: [\n                {name: 'Nom', dataField: 'attributes', displayComponent: (v) => this.nameOf(v)},\n                //{ name:'Name', displayComponent: (v) => this.nameOf(v), dataField: 'attributes' },\n                {name: 'Description', dataField: 'attributes.description'},\n                {name: 'Création', dataField: 'attributes.createDate', dateFormat: 'DD MMM YYYY'},\n                //{ displayComponent: (v) => this.manageLink(v), dataField: 'attributes' },\n            ],\n        }\n\n        return <div className=\"mt-4\">\n            <DataTable items={JSON.stringify(items)}\n                       hover={true} size=\"md\"\n                       bordered={false} striped={false}\n                       metaData={JSON.stringify(metaData)}\n                       tableConfig={tableConfig}\n                       pagination={true}\n                       displayTotalElements={true}\n                       paginate={true}/>\n        </div>\n    }\n\n    render() {\n        if (this.state.viewMode === 'viewDetails') {\n            return <ContainerDetails\n                pushBreadCrumb={this.props.pushBreadCrumb}\n                containerId={this.state.selectedContainerId}/>\n        }\n\n        const items = this.state.items;\n        let tableContent;\n        if (items && items.length > 0) {\n            tableContent = this.table()\n        } else {\n            tableContent = <EmptyPane mainMessage=\"Pas de conteneur\"\n                                      secondaryMessage=\"Ce conteneur n'a pas de conteneur enfant\"/>\n        }\n\n        return (<>\n            <ButtonToolbar>\n                <Wizard\n                    hideFooter={true}\n                    dialogSize=\"md\"\n                    buttonIcon=\"fa fa-sm fa-globe\"\n                    buttonClassName=\"mr-1 action-button\"\n                    buttonTitle='NEW ECOMMERCE SITE'\n                    dialogTitle='NEW ECOMMERCE SITE'\n                    dialogContentProvider={(wizardCloseFunction) => this.newContainerWizardContent(wizardCloseFunction)}/>\n            </ButtonToolbar>\n            {tableContent}\n        </>)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContainersOfCurrent)\n","import React, {Component} from 'react';\nimport {TabContent, TabPane,} from 'reactstrap';\nimport classnames from 'classnames';\nimport {containerService} from '_services/container.services';\nimport {AttributeListGroup, PersistenceInfo, ThumbInfo, WaitingPane} from '_components/_common';\nimport {ContainerDeletion, ContainerOwner, ContainerSettings} from '_components/_admin/Container';\nimport {Nav} from 'react-bootstrap'\n\nclass ContainerDetails extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activeTab: '1',\n            containerId: this.props.containerId,\n            container: null,\n            loading: true,\n        }\n\n        this.toggle = this.toggle.bind(this);\n    }\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab\n            });\n        }\n    }\n\n    tabsConfigs() {\n        const tabsConfig = {\n            tabItems: [\n                {id: '1', title: 'Summary', tabContent: () => this.overviewTabContent(), visible: () => true},\n                {id: '2', title: 'Settings', tabContent: () => this.accountSystemPrefsContent(), visible: () => true},\n            ],\n        }\n\n        return tabsConfig;\n    }\n\n    overviewTabContent() {\n        const attributesList = {\n            title: 'Summary',\n            icon: 'fa fa-info float-right',\n            addHeaderMargin: true,\n            attributes: [\n                {name: 'Name', dataField: 'attributes.name'},\n                {name: 'Description', dataField: 'attributes.description'},\n                {name: 'Path', dataField: 'attributes.path', displayComponent: (v) => this.path(v)},\n                {name: 'Dex', dataField: 'attributes.numberSuffix'},\n            ]\n        }\n\n        return <>\n            <AttributeListGroup\n                attributesListConfig={attributesList}\n                data={this.state.container}\n                canEdit={false}\n                displayHeader='true'/>\n\n            <PersistenceInfo   {...this.props}\n                               data={this.state.container}\n                               displayHeader='true'\n                               addHeaderMargin=\"true\"/>\n        </>\n    }\n\n    accountSystemPrefsContent() {\n        return <div className=\"mt-5\">\n            <ContainerOwner\n                containerId={this.state.container.attributes.id}\n                containerOwnerId={this.state.container.attributes.containerOwnerId}/>\n\n            <ContainerSettings\n                title='Sellsy settings'\n                settingsType='sellsySettings'\n                userSettings={true}\n                containerId={this.state.container.attributes.id}\n                containerOwnerId={this.state.container.attributes.containerOwnerId}/>\n\n            <ContainerSettings\n                title='Home page'\n                settingsType='homePageSettings'\n                userSettings={true}\n                containerId={this.state.container.attributes.id}\n                containerOwnerId={this.state.container.attributes.containerOwnerId}/>\n\n            <ContainerSettings\n                title='Theme'\n                settingsType='themeSettings'\n                userSettings={true}\n                containerId={this.state.container.attributes.id}\n                containerOwnerId={this.state.container.attributes.containerOwnerId}/>\n\n            <ContainerSettings\n                title='System settings'\n                settingsType='systemSettings'\n                systemSettings={true}\n                containerId={this.state.container.attributes.id}\n                containerOwnerId={this.state.container.attributes.containerOwnerId}/>\n\n            <ContainerDeletion\n                containerId={this.state.container.attributes.id}\n                containerOwnerId={this.state.container.attributes.containerOwnerId}/>\n        </div>\n    }\n\n    path(path) {\n        let paths = []\n        path.split('/').map(p => {\n            if (p !== '')\n                paths.push(<span><i className=\"fa fa-caret-right mr-1 ml-2\"></i>{p}</span>)\n        });\n        return paths;\n    }\n\n    loadContainerDetails() {\n        let wc = this.props.containerId\n        containerService\n            .getById(this.props.containerId, wc)\n            .then(res => {\n\n                if (this.props.pushBreadCrumb) {\n                    //let item = {'href': '#', title: location}\n                    //this.props.pushBreadCrumb(item)\n                }\n\n                this.setState({\n                    container: res.data,\n                    loading: false\n                })\n            })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.containerId !== this.props.containerId) {\n            this.loadContainerDetails();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContainerDetails();\n    }\n\n    renderLeftPane() {\n        let thumbed = <ThumbInfo\n            resize={true}\n            thumbedId={this.props.containerId}\n            canEdit={true}/>\n        return (<>\n            <div className=\"container-details-thumb\">\n                {thumbed}\n            </div>\n        </>)\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <WaitingPane/>\n        }\n\n        let leftPane = this.renderLeftPane();\n        let navTabItems = [], navTabContents = [], ritm = [];\n        this.tabsConfigs().tabItems.map(tabItem => {\n            const id = tabItem.id;\n            if (tabItem.visible() === true) {\n                navTabItems.push(\n                    <Nav.Item className=\"flex-column\">\n                        <Nav.Link className={classnames({active: this.state.activeTab === id.toString()})}\n                                  onClick={() => {\n                                      this.toggle(id.toString());\n                                  }}\n                                  eventKey={id.toString()}>\n                            {tabItem.title}</Nav.Link>\n                    </Nav.Item>\n                )\n            }\n        });\n\n        this.tabsConfigs().tabItems.map(tabItem => {\n            const id = tabItem.id;\n            if (tabItem.visible() === true) {\n                navTabContents.push(<TabPane tabId={id.toString()} className=\"no-padding p-1\">\n                    {tabItem.tabContent(ritm)}\n                </TabPane>);\n            }\n        });\n\n        return (<div className=\"container-details-2\">\n            {leftPane}\n            <Nav>\n                {navTabItems}\n            </Nav>\n\n            <div className=\"admin-details-item-title\">\n                <p className=\"page-title\">{this.state.container.attributes.name}</p>\n            </div>\n\n            <TabContent activeTab={this.state.activeTab}>\n                {navTabContents}\n            </TabContent>\n        </div>)\n    }\n}\n\nexport default ContainerDetails;\n\n","import React, {Component} from 'react';\nimport {Button} from 'reactstrap';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport {containerService} from '_services/container.services';\nimport {DataTable, EmptyPane, WaitingPane, Wizard} from '_components/_common';\nimport {commons} from '_helpers/commons';\nimport {toast} from 'react-toastify';\nimport ContainerCreate from '_components/_admin/Container/ContainerCreate';\nimport ContainerDetails from '_components/_admin/Container/ContainerDetails';\nimport {loginService} from '_services/login.services';\nimport {updateUserContext} from '_reducers/coreUserContextReducer'\nimport {coreUri} from \"_helpers/CoreUri\";\n\nconst mapStateToProps = store => ({})\n\nconst mapDispatchToProps = (disptach) => ({\n    updateUserContextRX: (e) => disptach(updateUserContext(e)),\n})\n\nclass ContainerSwitcher extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n            metaData: '',\n            currentContainerName: '',\n            viewMode: 'viewList',\n        }\n\n        this.switchToParent = this.switchToParent.bind(this)\n        this.switchTo = this.switchTo.bind(this)\n        this.emptyTableActions = this.emptyTableActions.bind(this)\n        this.newContainerWizardContent = this.newContainerWizardContent.bind(this)\n        this.onCreateSuccess = this.onCreateSuccess.bind(this)\n        this.switchToRoot = this.switchToRoot.bind(this)\n    }\n\n    async switchToRoot() {\n        let rootContainerId = this.props.userContext.applicationContainer.id\n        this.loadChildrenContainer(rootContainerId)\n    }\n\n    async toChild(e, container) {\n        this.setState({loading: true})\n\n        if (e) e.preventDefault()\n        containerService\n            .getChildrenContainers(container.id)\n            .then(json => {\n                this.setState({\n                    currentNavigatingContainer: container.id,\n                    currentContainerName: container.name,\n                    items: json.data,\n                    metaData: json.metaData,\n                    viewMode: 'viewList',\n                    loading: false\n                })\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }\n\n    async switchTo(e, container) {\n        if (e) e.preventDefault()\n        this.switchUserContext(container.id)\n        this.setState({loading: false})\n    }\n\n    async manageApplication(e) {\n        if (e) e.preventDefault();\n        this.setState({loading: true})\n        let rootContainerId = commons.getRootContainerId(this.props.userContext);\n        this.switchUserContext(rootContainerId)\n    }\n\n    switchUserContext(containerId) {\n        loginService.postLogin(commons.sessionId(), containerId).then(response => {\n            if (response && response.data) {\n                let userContext = commons.katappult_core_loginSuccess(response)\n                this.props.updateUserContextRX(userContext);\n                this.setState({loading: false})\n\n                let message = 'Votre espace de travail est: ' + this.props.userContext.workingContainer.name;\n                toast.success(message);\n            }\n        });\n    }\n\n    onCreateSuccess(wizardCloseFunction) {\n        if (wizardCloseFunction) wizardCloseFunction();\n        const currentContainer = this.state.currentNavigatingContainer;\n        containerService.getChildrenContainers(currentContainer).then(response => {\n            this.setState({\n                items: response.data,\n                metaData: response.metaData,\n                loading: false\n            })\n        })\n    }\n\n    newContainerWizardContent(wizardCloseFunction) {\n        return <ContainerCreate parentContainerId={this.state.currentNavigatingContainer}\n                                containerId={this.props.containerId}\n                                userContext={this.props.userContext}\n                                onCreateContainerSuccess={() => this.onCreateSuccess(wizardCloseFunction)}\n                                parentContainerPath={this.state.currentContainerPath}\n                                parentContainerName={this.state.currentContainerName}/>\n    }\n\n    switchToParent(e) {\n        if (e) e.preventDefault();\n        this.setState({loading: true})\n\n        containerService.getParentContainer(this.state.currentNavigatingContainer).then(json => {\n\n                let parentId = json.data.attributes.id,\n                    path = json.data.attributes.name,\n                    name = json.data.attributes.name;\n\n                containerService.getChildrenContainers(parentId).then(json => {\n                    this.setState({\n                        currentNavigatingContainer: parentId,\n                        currentContainerName: name,\n                        currentContainerPath: path,\n                        items: json.data,\n                        metaData: json.metaData,\n                        viewMode: 'viewList',\n                        loading: false\n                    })\n                })\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }\n\n    emptyTableActions() {\n        return (\n            <React.Fragment>\n                <button onClick={e => this.switchToParent(e)}>Parent</button>\n            </React.Fragment>\n        )\n    }\n\n    componentDidUpdate(prevprops, prevState) {\n        if (prevState.viewMode !== this.props.viewMode) {\n            this.setState({viewMode: this.props.viewMode})\n        }\n    }\n\n    componentDidMount() {\n        this.loadChildrenContainer(this.props.containerId)\n    }\n\n    async loadChildrenContainer(containerId) {\n        this.setState({loading: true})\n\n        containerService.getChildrenContainers(containerId).then(json => {\n            this.setState({\n                currentNavigatingContainer: this.props.containerId,\n                currentContainerName: commons.getWorkingContainerName(this.props.userContext),\n                items: json.data,\n                metaData: json.metaData,\n                viewMode: 'viewList',\n                loading: false\n            })\n        })\n            .catch(error => {\n                console.error(error);\n            });\n    }\n\n    manageLink(val) {\n        return <td className={'td-left'}>\n            <Button onClick={() => this.switchTo(null, val)}>GÉRER</Button>\n        </td>\n    }\n\n    switchToLink(val) {\n        return <td className={'td-left'}>\n            <Button onClick={e => this.toChild(e, val)}><i className=\"fa fa-angle-right fa-lg\"></i></Button>\n        </td>\n    }\n\n    nameOf(val) {\n        return <td className={'td-left'}>\n            <Link className={'table-link'} href=\"#\"\n                  onClick={e => this.toChild(e, val)}>\n                {val.name}\n            </Link>\n        </td>\n    }\n\n    details(val) {\n        const url = coreUri.backOfficeViewURL(\"platform\", \"conteneurs\", [\"rootId=\" + val.id]);\n        return <td className={'td-left'}>\n            <Button href={url}>\n                <i className=\"fa fa-info-circle\"></i>\n            </Button>\n        </td>\n    }\n\n    table() {\n        const items = this.state.items;\n        const metaData = this.state.metaData;\n\n        const tableConfig = {\n            columnsConfig: [\n                {\n                    name: 'Nom',\n                    displayComponent: (v) => this.nameOf(v),\n                    dataField: 'attributes',\n                    headerClassName: 'td-left',\n                    className: 'td-left'\n                },\n                {\n                    displayComponent: (v) => this.switchToLink(v),\n                    dataField: 'attributes',\n                    headerClassName: 'td-left',\n                    className: 'td-left'\n                },\n                {\n                    displayComponent: (v) => this.manageLink(v),\n                    dataField: 'attributes',\n                    headerClassName: 'td-left',\n                    className: 'td-left'\n                },\n                {\n                    name: 'Description',\n                    dataField: 'attributes.description',\n                    headerClassName: 'td-left',\n                    className: 'td-left'\n                },\n                {name: 'Path', dataField: 'attributes.path', headerClassName: 'td-left', className: 'td-left'},\n                {\n                    name: 'Créé le',\n                    dataField: 'attributes.createDate',\n                    dateFormat: 'DD MMM YYYY',\n                    headerClassName: 'td-left',\n                    className: 'td-left'\n                },\n                {\n                    name: 'Modifié le',\n                    dataField: 'attributes.lastModifiedDate',\n                    dateFormat: 'DD MMM YYYY',\n                    headerClassName: 'td-left',\n                    className: 'td-left'\n                },\n                {\n                    displayComponent: (v) => this.switchToLink(v),\n                    dataField: 'attributes',\n                    headerClassName: 'td-left',\n                    className: 'td-left'\n                },\n            ],\n        }\n\n        return <DataTable items={JSON.stringify(items)}\n                          metaData={JSON.stringify(metaData)}\n                          tableConfig={tableConfig}\n                          pagination={true}\n                          displayTotalElements={true}/>\n    }\n\n    render() {\n\n        if (this.state.viewMode === 'viewDetails') {\n            return <ContainerDetails\n                pushBreadCrumb={this.props.pushBreadCrumb}\n                containerId={this.state.selectedContainerId}/>\n        }\n\n        const items = this.state.items;\n        let tableContent;\n        if (items && items.length > 0) {\n            tableContent = this.table()\n        } else {\n            tableContent = <EmptyPane hideMainMessage={true}\n                                      secondaryMessage=\"Le conteneur courant n'a pas de conteneur enfant\"/>\n        }\n\n        let isRootContainer = this.state.currentNavigatingContainer === undefined ||\n            this.state.currentNavigatingContainer === null ||\n            this.state.currentNavigatingContainer === commons.getRootContainerId(this.props.userContext)\n\n        return (<div className={'container-switcher'}>\n            <div className={'btn-toolbar btn-toolbar-right'}>\n                <Wizard hideFooter={true}\n                        dialogSize=\"md\"\n                        buttonIcon=\"fa fa-sm fa-plus\"\n                        buttonTitle='Nouveau conteneur'\n                        dialogTitle='Nouveau conteneur'\n                        dialogContentProvider={(wizardCloseFunction) => this.newContainerWizardContent(wizardCloseFunction)}/>\n\n                <button onClick={e => this.manageApplication(e)}>\n                    <i className=\"fa fa-hand-o-right\"></i>&nbsp;GÉRER LE CONTENEUR RACINE\n                </button>\n            </div>\n\n            <table width=\"100%\">\n                <tr>\n                    <td with=\"40%\" className={'td-right'}>\n                        <div className=\"btn-toolbar\">\n                            <button onClick={e => this.switchToRoot(e)}><i className=\"fa fa-home fa-md\"></i></button>\n                            <button onClick={e => this.switchToParent(e)}\n                                    disabled={isRootContainer}><i className=\"fa fa-chevron-left fa-md\"></i>&nbsp;PARENT\n                            </button>\n                        </div>\n                    </td>\n                    <td with=\"40%\" className={'td-right'}>\n                        <div className=\"float-right\">\n                        </div>\n                    </td>\n                </tr>\n            </table>\n\n            {this.state.loading && <WaitingPane ldsgrid={true}/>}\n            {!this.state.loading && tableContent}\n        </div>)\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContainerSwitcher)\n","import {\n    _doPost,\n    _doGet,\n    _doPut,\n    API_ROOT,\n    _doDelete,\n    buildURLQuery,\n    _doGetText,\n    _doPostWithoutResponse\n} from './utils/services.config';\n\nexport const DataExportService = {\n    createEntity,\n    listEntity,\n    updateEntity,\n    deleteEntity,\n    detailsEntity,\n    searchEntity,\n    getAllConfigs,\n    runExport,\n    listInstances,\n    stopExport,\n    dropExport,\n    downloadExport,\n    getByInternalName\n}\n\nasync function createEntity(formData, containerId){\n    const uri = '/katappult/core/v1/secured/api/dataExports/create';\n    let url = `${API_ROOT}` + uri + \"?containerId=\" + containerId\n    return _doPost(url, JSON.stringify(formData))\n}\n\nasync function runExport(entityId, form, containerId){\n    const uri = '/katappult/core/v1/secured/api/dataExports/runExport?entityId=' + entityId + \"&containerId=\" + containerId;\n    let url = `${API_ROOT}` + uri;\n    return _doPostWithoutResponse(url, JSON.stringify(form));\n}\n\nasync function stopExport(entityId, instanceId, containerId){\n    const uri = '/katappult/core/v1/secured/api/dataExports/stopExport?entityId=' + entityId + \"&containerId=\" + containerId + '&instanceId=' + instanceId;\n    let url = `${API_ROOT}` + uri;\n    return _doPost(url);\n}\n\nasync function dropExport(entityId, instanceId, containerId){\n    const uri = '/katappult/core/v1/secured/api/dataExports/dropExport?entityId=' + entityId + \"&containerId=\" + containerId + '&instanceId=' + instanceId;\n    let url = `${API_ROOT}` + uri;\n    return _doDelete(url);\n}\n\nasync function listInstances(entityId, page, pageSize, containerId){\n    const uri = '/katappult/core/v1/secured/api/dataExports/listInstances?entityId=' + entityId + \"&containerId=\" + containerId + \"&page=\" + page + \"&pageSize=\" + pageSize;\n    let url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function downloadExport(entityId, containerId){\n    const uri = '/katappult/core/v1/secured/api/dataExports/downloadExport?instanceId=' + entityId + \"&containerId=\" + containerId;\n    let url = `${API_ROOT}` + uri;\n    return _doGetText(url);\n}\n\n\nasync function getAllConfigs(containerId){\n    const uri = \"/katappult/core/v1/secured/api/dataExports/configs?containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function getByInternalName(name, containerId){\n    const uri = \"/katappult/core/v1/secured/api/dataExports/getByInternalName?containerId=\" + containerId + '&internalName=' + name;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\n\nasync function listEntity(page, pageSize, containerId){\n    const uri = \"/katappult/core/v1/secured/api/dataExports/list?page=\" + page + \"&pageSize=\" + pageSize + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function updateEntity(entityId, formdata, containerId){\n    const uri = \"/katappult/core/v1/secured/api/dataExports/update\".concat(\"?containerId=\").concat(containerId).concat(\"&entityId=\" + entityId);\n    const url = `${API_ROOT}` + uri;\n    return _doPut(url, formdata);\n}\n\nasync function detailsEntity(entityId, containerId){\n    const uri = \"/katappult/core/v1/secured/api/dataExports/details?entityId=\" + entityId + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function deleteEntity(entityId, containerId){\n    const uri = \"/katappult/core/v1/secured/api/dataExports/delete?entityId=\" + entityId + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doDelete(url);\n}\n\nasync function searchEntity(page, pageSize, searchTerm, containerId){\n    const uri = \"/katappult/core/v1/secured/api/dataExports/search?searchTerm=\" + searchTerm+ \"&page=\"  + page + \"&pageSize=\" + pageSize + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n","import React, {Component} from 'react';\nimport {AttributeListGroup, WaitingPane} from \"_components/_common\";\nimport {DataExportService} from \"_services/DataExport.services\";\nimport {toast} from \"react-toastify\";\nimport {enTemplateService} from \"_services/entemplates.services\";\nimport {commons} from \"_helpers/commons\";\n\nclass DataExportAdd extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            formData: {},\n            errors: [],\n            configs: []\n        }\n\n        this.create = this.create.bind(this)\n        this.attributesList = this.attributesList.bind(this);\n    }\n\n    create(formData) {\n        this.setState({formData: formData, loading: true})\n        formData.containerId = this.props.containerId;\n\n        DataExportService.createEntity(formData, this.props.containerId).then(response => {\n            if (commons.isRequestError(response)) {\n                toast.error(commons.toastError(response))\n            } else {\n                this.setState({loading: false})\n                this.props.onCreateSuccess();\n            }\n        })\n    }\n\n    componentDidMount() {\n        DataExportService.getAllConfigs(this.props.containerId).then(response => {\n            this.setState({configs: response.data})\n        })\n\n        enTemplateService.listAllInContainer(this.props.containerId).then(response => {\n            this.setState({emails: response.data})\n        })\n    }\n\n    emailConfigs() {\n        let emailConfigs = []\n        if (this.state.emails && this.state.emails.length > 0) {\n            this.state.emails.map(config => {\n                emailConfigs.push({\n                    key: config.attributes.internalName,\n                    value: config.attributes.displayName\n                })\n            })\n        }\n\n        return emailConfigs\n    }\n\n    exportConfigs() {\n        let result = []\n        if (this.state.configs && this.state.configs.length > 0) {\n            this.state.configs.map(config => {\n                result.push({\n                    key: config.attributes.id,\n                    value: config.attributes.name\n                })\n            })\n        }\n\n        return result\n    }\n\n    attributesList() {\n        const attributesList = {\n            formId: 'dt-form',\n            saveButtonTitle: 'CRÉER',\n            onSubmit: (formData) => this.create(formData),\n            attributes: [\n                {name: 'Nom', dataField: 'name', required: true, placeHolder: 'Nom'},\n                {\n                    name: 'Données',\n                    dataField: 'configId',\n                    required: true,\n                    type: 'select',\n                    placeHolder: 'Configuration',\n                    enumProvider: () => this.exportConfigs()\n                },\n                {name: 'Périodicité', dataField: 'execution', required: false},\n                {\n                    name: 'Email à envoyer',\n                    dataField: 'emailTemplate',\n                    required: false,\n                    placeHolder: 'Email à envoyer',\n                    type: 'select',\n                    enumProvider: () => this.emailConfigs()\n                },\n                {\n                    name: 'Notifier les utilisateurs',\n                    dataField: 'notifications',\n                    required: false,\n                    placeHolder: 'Emails séparés par (;)'\n                },\n            ]\n        }\n\n        return attributesList;\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <WaitingPane/>\n        }\n\n        let errors = []\n        if (this.state.errors.length > 0) {\n            this.state.errors.map(error => {\n                errors.push(<p>{error}</p>)\n            })\n        }\n\n        let formData = {...this.state.formData}\n        return (\n            <div className=\"container-create-root\">\n                <div id=\"form-errors-section\" className=\"form-error\">\n                    {errors}\n                </div>\n                <AttributeListGroup\n                    attributesListConfig={this.attributesList()}\n                    data={formData}\n                    standardFooterActions=\"true\"\n                    formMode='create_object'/>\n            </div>\n        )\n    }\n}\n\nexport default DataExportAdd;\n","import React, {Component} from 'react';\nimport {DataTable, EmptyPane, WaitingPane} from \"_components/_common\";\nimport {DataExportService} from \"_services/DataExport.services\";\nimport FileSaver from \"file-saver\";\n\nclass DataExportInstanceList extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            datas: [],\n            pageSize: 12\n        }\n\n        this.download = this.download.bind(this)\n        this.stop = this.stop.bind(this)\n        this.tableActions = this.tableActions.bind(this)\n        this.table = this.table.bind(this)\n        this.refresh = this.refresh.bind(this)\n        this.goToPage = this.goToPage.bind(this)\n    }\n\n    goToPage(i) {\n        this.loadDatas(i)\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.refreshList && this.props.refreshList !== prevProps.refreshList) {\n            this.refresh()\n        }\n    }\n\n    componentDidMount() {\n        this.loadDatas(0)\n    }\n\n    refresh() {\n        this.loadDatas(this.state.page)\n    }\n\n    loadDatas(page) {\n        this.setState({loading: true})\n        DataExportService.listInstances(this.props.dataExportId, page, this.state.pageSize, this.props.containerId).then(response => {\n            this.setState({\n                loading: false,\n                page: page,\n                datas: response.data,\n                metaData: response.metaData,\n            })\n        })\n    }\n\n    tableActions(v, i) {\n        return <td width={'10%'} className={'td-left'}>\n            <div className={'btn-toolbar'}>\n                {this.stop(v, i)}\n                {this.download(v, i)}\n            </div>\n        </td>\n    }\n\n    tableActions2(v, i) {\n        return <td width={'5%'} className={'td-left'}>\n            <div className={'btn-toolbar'}>\n                {this.drop(v, i)}\n            </div>\n        </td>\n    }\n\n    dropExport(id) {\n        DataExportService.dropExport(this.props.dataExportId, id, this.props.containerId).then(response => {\n            this.refresh()\n        })\n    }\n\n    stopExport(id) {\n        DataExportService.stopExport(this.props.dataExportId, id, this.props.containerId).then(response => {\n            this.refresh()\n        })\n    }\n\n    downloadExport(id, name) {\n        DataExportService.downloadExport(id, this.props.containerId).then(response => {\n            let blob = new Blob([response], {type: \"plain/text;charset=UTF-8\"});\n            FileSaver.saveAs(blob, name + \".csv\");\n        })\n    }\n\n    stop(v, i) {\n        if (v.status === \"RUNNING\") {\n            return <button onClick={() => this.stopExport(v.id)} style={{'margin-right': '0.8rem'}}><i\n                className={'fa fa-stop fa-md'}></i>&nbsp;Annuler</button>\n        }\n    }\n\n    drop(v, i) {\n        return <button onClick={() => this.dropExport(v.id)} style={{'margin-right': '0.8rem'}}><i\n            className={'fa fa-trash fa-md'}></i>&nbsp;</button>\n    }\n\n\n    download(v, i) {\n        if (v.status === \"SUCCESS\") {\n            return <button onClick={() => this.downloadExport(v.id, v.name)} style={{'margin-right': '0.2rem'}}><i\n                className={'fa fa-download fa-md'}></i>&nbsp;Télécharger</button>\n        }\n    }\n\n    status(v, i) {\n        if (v === 'RUNNING') {\n            return <td width={'2%'} className={'td-left'}>\n                <i className={'fa fa-spinner fa-md'}></i>\n            </td>\n        } else if (v === 'SUCCESS') {\n            return <td width={'2%'} className={'td-left'}>\n                <i className={'fa fa-check fa-md'}></i>\n            </td>\n        } else if (v === 'ERROR') {\n            return <td width={'2%'} className={'td-left'}>\n                <i className={'fa fa-exclamation-triangle fa-md'}></i>\n            </td>\n        }\n    }\n\n\n    user(v) {\n        return <td className={'td-left'}>\n            {v === 'anon' ? 'Système' : v}\n        </td>\n    }\n\n\n    tableConfig() {\n        const tableConfig = {\n            columnsConfig: [\n                {name: 'Nom', dataField: 'attributes.name', headerClass: 'td-left', className: 'td-left'},\n                {\n                    name: 'Statut',\n                    dataField: 'attributes.status',\n                    displayComponent: (v, i) => this.status(v, i),\n                    headerClass: 'td-left',\n                    className: 'td-left'\n                },\n                {\n                    name: 'Début',\n                    dataField: 'attributes.createDate',\n                    dateFormat: 'DD-MM-YYYY HH:mm',\n                    headerClass: 'td-left',\n                    className: 'td-left'\n                },\n                {\n                    name: 'Fin',\n                    dataField: 'attributes.endDate',\n                    dateFormat: 'DD-MM-YYYY HH:mm',\n                    headerClass: 'td-left',\n                    className: 'td-left'\n                },\n                {\n                    name: 'Lancé par',\n                    dataField: 'attributes.createdBy',\n                    displayComponent: (v) => this.user(v),\n                    headerClass: 'td-left',\n                    className: 'td-left'\n                },\n                {\n                    name: 'Action',\n                    dataField: 'attributes',\n                    displayComponent: (v, i) => this.tableActions(v, i),\n                    headerClass: 'td-left',\n                    className: 'td-left'\n                },\n                {\n                    dataField: 'attributes',\n                    displayComponent: (v, i) => this.tableActions2(v, i),\n                    headerClass: 'td-left',\n                    className: 'td-left'\n                },\n\n            ],\n        }\n        return tableConfig;\n    }\n\n    table() {\n        if (!this.state.datas || this.state.datas.length === 0) {\n            return <EmptyPane/>\n        }\n\n        let tableConfig = this.tableConfig();\n\n        let datatable = <DataTable items={JSON.stringify(this.state.datas)}\n                                   tableConfig={tableConfig}\n                                   pagination={true}\n                                   goToPage={this.goToPage}\n                                   metaData={JSON.stringify(this.state.metaData)}\n                                   displayTotalElements={true}\n                                   paginate={true}/>\n\n        return datatable\n    }\n\n\n    render() {\n        let content;\n        if (this.state.loading) {\n            content = <WaitingPane/>\n        } else {\n            content = this.table();\n        }\n\n        return content\n    }\n}\n\nexport default DataExportInstanceList;\n","import React, {Component} from 'react';\nimport {AttributeListGroup, PersistenceInfo, WaitingPane} from \"_components/_common\";\nimport queryString from 'query-string';\nimport {DataExportService} from \"_services/DataExport.services\";\nimport DataExportInstanceList from \"_components/_admin/DataExport/DataExportInstanceList\";\n\nclass DataExportDetails extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            subviewMode: 'instances'\n        }\n\n        this.getRootObjectForDetailsId = this.getRootObjectForDetailsId.bind(this)\n        this.loadDatas = this.loadDatas.bind(this)\n        this.updateDatas = this.updateDatas.bind(this)\n    }\n\n    getRootObjectForDetailsId() {\n        const queryUrlParams = queryString.parse(this.props.location.search);\n        let objectforDetailsId = queryUrlParams.rootId;\n        return objectforDetailsId\n    }\n\n    componentDidUpdate(prevProps, prevstate) {\n        const prevQueryUrlParams = queryString.parse(prevProps.location.search);\n        const queryUrlParams = queryString.parse(this.props.location.search);\n        let rootId = queryUrlParams.rootId;\n        let prevId = prevQueryUrlParams.rootId;\n        if (prevId !== rootId && rootId) {\n            this.loadDatas(rootId)\n        }\n    }\n\n    componentDidMount() {\n        let itemId = this.getRootObjectForDetailsId();\n        this.loadDatas(itemId)\n    }\n\n    loadDatas(itemId) {\n        if (itemId) {\n            this.setState({loading: true})\n            DataExportService.detailsEntity(itemId, this.props.containerId).then(response => {\n                this.setState({\n                    item: response.data,\n                    loading: false\n                });\n            })\n        }\n    }\n\n    updateDatas(formData) {\n        let form = {};\n        form.name = formData.attributes.name;\n        form.description = formData.attributes.description;\n        form.type = formData.attributes.type;\n\n        let itemId = this.getRootObjectForDetailsId();\n        DataExportService.updateEntity(itemId, form, this.props.containerId).then(response => {\n            this.loadDatas(itemId)\n        })\n    }\n\n    refreshList() {\n        this.setState({refreshList: true})\n        setTimeout(() => {\n            this.setState({refreshList: false})\n        }, 300)\n    }\n\n    headerActions() {\n        let subviewMode = this.state.subviewMode;\n        return <div className={'btn-toolbar btn-toolbar-right'}>\n            {subviewMode !== 'list' &&\n            <button onClick={() => this.setState({subviewMode: 'list'})}><i className={'fa fa-eye'}></i>&nbsp;Details\n            </button>}\n            {subviewMode !== 'instances' && <button onClick={() => this.setState({subviewMode: 'instances'})}><i\n                className={'fa fa-list'}></i>&nbsp;Liste</button>}\n            {subviewMode === 'instances' &&\n            <button onClick={() => this.refreshList()}><i className={'fa fa-refresh'}></i>&nbsp;Recharger</button>}\n        </div>\n    }\n\n    render() {\n        const attributesList = {\n            onSubmit: (formData) => this.updateDatas(formData),\n            attributes: [\n                {name: 'Nom', dataField: 'attributes.name', readOnly: true},\n                {name: 'Périodicité', dataField: 'attributes.execution', readOnly: true},\n                {name: 'Email à envoyer', dataField: 'attributes.emailTemplate'},\n                {name: 'Mapping', dataField: 'attributes.dataExportConfig.forMappingFile'},\n                {name: 'Script', dataField: 'attributes.dataExportConfig.scriptFile'},\n                {name: 'Commande', dataField: 'attributes.dataExportConfig.command'},\n                {name: 'Job', dataField: 'attributes.dataExportConfig.job'},\n                {name: 'Type', dataField: 'attributes.dataExportConfig.type'},\n                {name: 'Description', dataField: 'attributes.dataExportConfig.description'}\n            ]\n        }\n\n        if (!this.state.item || this.state.loading) {\n            return <WaitingPane/>\n        }\n\n        let content;\n        if (this.state.subviewMode === 'instances') {\n            content = <DataExportInstanceList {...this.props}\n                                              refreshList={this.state.refreshList}\n                                              dataExportId={this.getRootObjectForDetailsId()}/>\n        } else {\n            content = <>\n                <div className=\"attributes-panel\">\n                    <p className=\" form-error\">{this.state.errors}</p>\n                    <AttributeListGroup\n                        containerId={this.props.containerId}\n                        attributesListConfig={attributesList}\n                        data={this.state.item}/>\n                </div>\n\n                <div className=\"attributes-panel\">\n                    <p className=\" form-error\">{this.state.errors}</p>\n                    <PersistenceInfo\n                        {...this.props}\n                        data={this.state.item}\n                        containerId={this.props.containerId}\n                        displayHeader={true}/>\n                </div>\n            </>\n        }\n\n        return <div className={'entity-details'}>\n            <div className=\"admin-details-header\">\n                <p className=\"page-title\">{this.state.item.attributes.name}</p>\n                {this.headerActions()}\n            </div>\n            {content}\n        </div>\n    }\n}\n\nexport default DataExportDetails;\n","import React, {Component} from 'react';\nimport {DataTable, EmptyPane, WaitingPane, Wizard, WizardConfirm} from \"_components/_common\";\nimport DataExportAdd from \"_components/_admin/DataExport/DataExportAdd\";\nimport {DataExportService} from \"_services/DataExport.services\";\nimport {Input} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\nimport queryString from 'query-string';\nimport DataExportDetails from \"_components/_admin/DataExport/DataExportDetails\";\nimport {toast} from \"react-toastify\";\nimport {commons} from \"_helpers/commons\";\nimport FileSaver from \"file-saver\";\n\nclass DataExportList extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            datas: [],\n            page: 0,\n            pageSize: 10,\n            subviewMode: 'list'\n        }\n\n        this.onCreateSuccess = this.onCreateSuccess.bind(this)\n        this.loadDatas = this.loadDatas.bind(this)\n        this.wizardContent = this.wizardContent.bind(this)\n        this.tableActions = this.tableActions.bind(this)\n        this.table = this.table.bind(this)\n        this.delete = this.delete.bind(this)\n        this.displayDetails = this.displayDetails.bind(this)\n        this.linkTo = this.linkTo.bind(this)\n        this.refresh = this.refresh.bind(this)\n    }\n\n    onCreateSuccess(wizardCloseFunction) {\n        wizardCloseFunction()\n        this.loadDatas(this.state.page)\n    }\n\n    wizardContent(wizardCloseFunction) {\n        return <DataExportAdd onCreateSuccess={() => this.onCreateSuccess(wizardCloseFunction)}\n                              {...this.props}/>\n    }\n\n    componentDidMount() {\n        this.loadDatas(0)\n    }\n\n    refresh() {\n        this.loadDatas(this.state.page)\n    }\n\n    loadDatas(page) {\n        this.setState({loading: true})\n        DataExportService.listEntity(page, this.state.pageSize, this.props.containerId).then(response => {\n            this.setState({\n                page: page,\n                loading: false,\n                datas: response.data,\n                metaData: response.metaData,\n                subviewMode: 'list'\n            })\n        })\n\n    }\n\n    searchTermUpdated(e) {\n        this.setState({loading: true})\n        let searchTerm = e.target.value\n        if (searchTerm) {\n            DataExportService.searchEntity(0, 30, this.state.searchTerm, this.props.containerId).then(response => {\n                this.setState({\n                    page: 0,\n                    loading: false,\n                    datas: response.data,\n                    metaData: response.metaData,\n                    searchTerm: searchTerm,\n                    subviewMode: 'search'\n                })\n            })\n        } else {\n            this.loadDatas(0)\n        }\n    }\n\n    getRootObjectForDetailsId() {\n        const queryUrlParams = queryString.parse(this.props.location.search);\n        let objectforDetailsId = queryUrlParams.rootId;\n        return objectforDetailsId\n    }\n\n    displayDetails(e, id) {\n        e.preventDefault()\n        let hash = window.location.hash.substr(1);\n        if (hash.includes('?')) {\n            this.props.history.push(hash + '&rootId=' + id)\n        } else {\n            this.props.history.push(hash + '?rootId=' + id)\n        }\n    }\n\n    linkTo = (val, item) => {\n        return <td className={'td-left'}>\n            <Link className={'table-link'} onClick={e => this.displayDetails(e, val.id)}>{val.name}</Link>\n        </td>\n    }\n\n    delete(id) {\n        DataExportService.deleteEntity(id, this.props.containerId).then(response => {\n            this.loadDatas(this.state.page)\n        })\n    }\n\n    launchSync(id, name) {\n        let form = {}\n        form['separator.char'] = '|'\n        form['comment.char'] = '#'\n        form['domain'] = commons.getWorkingContainerPath(this.props.userContext)\n        form['container'] = commons.getWorkingContainerPath(this.props.userContext)\n        form['attach.discarded.file'] = false\n        form['attach.log.file'] = false\n        form['email.success.template.name'] = 'DEFAULT_LOADER_EMAIL_SUCCESS_TEMPLATE'\n        form['email.error.template.name'] = 'DEFAULT_LOADER_EMAIL_ERROR_TEMPLATE'\n        form['log.file.extension'] = '.log'\n        form['notify.on.error'] = 'false'\n        form['notify.on.success'] = 'false'\n        form['mail.on.success'] = false\n        form['mail.on.error'] = false\n\n        this.setState({launching: id})\n        DataExportService.runExport(id, form, this.props.containerId).then(response => {\n            this.setState({launching: null})\n            if (response.ok) {\n                return response.text()\n            } else {\n                toast.error(\"Echec de l'export des données\")\n            }\n\n            return null;\n        }).then(response => {\n            if (response) {\n                let blob = new Blob([response], {type: \"plain/text;charset=UTF-8\"});\n                FileSaver.saveAs(blob, name + \".csv\");\n            }\n        }).catch(error => {\n            toast.error(\"Echec de l'export des données\")\n            this.setState({launching: null})\n        })\n    }\n\n    tableActions(v, i) {\n        return <td width={'16%'} className={'td-left'}>\n            <div className={'btn-toolbar btn-toolbar-right'}>\n                {this.state.launching !== v.id && <WizardConfirm\n                    buttonIcon={'fa fa-play fa-lg'}\n                    onConfirm={() => this.launchSync(v.id, v.name)}\n                    dialogMessage=\"Lancer un export?\"/>\n                }\n\n                {this.state.launching === v.id && <i className={'fa fa-spinner fa-md'}></i>}\n\n                <WizardConfirm\n                    buttonTitle=\"Supprimer\"\n                    buttonIcon={'fa fa-trash fa-lg'}\n                    onConfirm={() => this.delete(v.id)}\n                    dialogMessage=\"Voulez vous supprimer cet item?\"\n                    dialogTitle=\"Supprimer un item\"/>\n            </div>\n        </td>\n    }\n\n    mappingFile(v, i) {\n        return <td className={'td-left'}>{v.dataExportConfig.forMappingFile}</td>\n    }\n\n    commande(v, i) {\n        return <td className={'td-left'}>{v.dataExportConfig.command}</td>\n    }\n\n    execution(v) {\n        return <td className={'td-left'}>{v ? v : 'Manuelle'}</td>\n    }\n\n    tableConfig() {\n        const tableConfig = {\n            columnsConfig: [\n                {\n                    name: 'Nom',\n                    dataField: 'attributes',\n                    displayComponent: (v, i) => this.linkTo(v, i),\n                    headerClass: 'td-left',\n                    className: 'td-left'\n                },\n                {\n                    name: 'Périodicité',\n                    dataField: 'attributes.execution',\n                    displayComponent: (v) => this.execution(v),\n                    headerClass: 'td-left',\n                    className: 'td-left'\n                },\n                {\n                    name: 'Notifications',\n                    dataField: 'attributes.notifications',\n                    headerClass: 'td-left',\n                    className: 'td-left'\n                },\n                {\n                    name: 'Email à envoyer',\n                    dataField: 'attributes.emailTemplate',\n                    headerClass: 'td-left',\n                    className: 'td-left'\n                },\n                {\n                    dataField: 'attributes',\n                    displayComponent: (v, i) => this.tableActions(v, i),\n                    headerClass: 'td-left',\n                    className: 'td-left'\n                },\n            ],\n        }\n        return tableConfig;\n    }\n\n    table() {\n        if (!this.state.datas || this.state.datas.length === 0) {\n            return <EmptyPane/>\n        }\n\n        let tableConfig = this.tableConfig();\n\n        let datatable;\n        if (this.state.subviewMode === 'list') {\n            datatable = <DataTable items={JSON.stringify(this.state.datas)}\n                                   tableConfig={tableConfig}\n                                   pagination={true}\n                                   metaData={JSON.stringify(this.state.metaData)}\n                                   displayTotalElements={true}\n                                   paginate={true}/>\n        } else {\n            datatable = <DataTable items={JSON.stringify(this.state.datas)}\n                                   tableConfig={tableConfig}\n                                   pagination={false}\n                                   metaData={JSON.stringify(this.state.metaData)}\n                                   displayTotalElements={true}\n                                   paginate={false}/>\n        }\n\n        return datatable\n    }\n\n\n    render() {\n        let objectforDetailsId = this.getRootObjectForDetailsId()\n        if (!objectforDetailsId) {\n            let content;\n            if (this.state.loading) {\n                content = <WaitingPane/>\n            } else {\n                content = this.table();\n            }\n\n            return <div className=\"portlet-box\">\n                <div className=\"portlet-header\">\n                    <div className=\"admin-filters-root admin-filters-withPadding\">\n                        <Input type=\"text\"\n                               className=\"admin-hover-input\"\n                               name=\"input1-group2\"\n                               placeholder=\"Chercher un élément\"\n                               autocomplete=\"off\"\n                               onChange={(e) => this.searchTermUpdated(e)}\n                               defaultValue={this.state.searchTerm}/>\n\n                        <div className=\"btn-toolbar btn-toolbar-right\">\n                            <Wizard buttonTitle={'Ajouter'}\n                                    buttonIcon={'fa fa-plus fa-md'}\n                                    hideFooter={true}\n                                    dialogSize=\"md\"\n                                    dialogTitle=\"Ajouter un export\"\n                                    dialogContentProvider={(wizardCloseFunction) => this.wizardContent(wizardCloseFunction)}/>\n                            {/*<button onClick={this.refresh}><i className={'fa fa-refresh fa-md'}></i>&nbsp;Recharger</button>*/}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"portlet-content\">\n                    {content}\n                </div>\n            </div>\n        } else {\n            return <DataExportDetails {...this.props} dataExportId={objectforDetailsId}/>\n        }\n    }\n}\n\nexport default DataExportList;\n","import { _doPost,_doGet,_doPut, API_ROOT, _doDelete, buildURLQuery } from './utils/services.config';\n\nexport const CronTaskService = {\n    createEntity,\n    listEntity,\n    updateEntity,\n    deleteEntity,\n    detailsEntity,\n    searchEntity,\n    listInstances,\n    stopTask,\n    taskBeans,\n    dropInstance,\n}\n\nasync function taskBeans(containerId){\n    const uri = '/katappult/core/v1/secured/api/cronTasks/listBeans?containerId=' + containerId;\n    let url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function stopTask(entityId, instanceId, containerId){\n    const uri = '/katappult/core/v1/secured/api/cronTasks/stopInstance?entityId=' + entityId + \"&containerId=\" + containerId + '&instanceId=' + instanceId;\n    let url = `${API_ROOT}` + uri;\n    return _doPost(url);\n}\n\nasync function listInstances(entityId, page, pageSize, containerId){\n    const uri = '/katappult/core/v1/secured/api/cronTasks/listInstances?entityId=' + entityId + \"&containerId=\" + containerId + \"&page=\" + page + \"&pageSize=\" + pageSize;\n    let url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function dropInstance(entityId, instanceId,containerId){\n    const uri = '/katappult/core/v1/secured/api/cronTasks/dropInstance?entityId=' + entityId + \"&containerId=\" + containerId + '&instanceId=' + instanceId;\n    let url = `${API_ROOT}` + uri;\n    return _doDelete(url);\n}\n\nasync function createEntity(formData, containerId){\n    const uri = '/katappult/core/v1/secured/api/cronTasks/create';\n    let url = `${API_ROOT}` + uri + \"?containerId=\" + containerId\n    return _doPost(url, JSON.stringify(formData))\n}\n\nasync function listEntity(page, pageSize, containerId){\n    const uri = \"/katappult/core/v1/secured/api/cronTasks/list?page=\" + page + \"&pageSize=\" + pageSize + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function updateEntity(entityId, formdata, containerId){\n    const uri = \"/katappult/core/v1/secured/api/cronTasks/update\".concat(\"?containerId=\").concat(containerId).concat(\"&entityId=\" + entityId);\n    const url = `${API_ROOT}` + uri;\n    return _doPut(url, formdata);\n}\n\nasync function detailsEntity(entityId, containerId){\n    const uri = \"/katappult/core/v1/secured/api/cronTasks/details?entityId=\" + entityId + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function deleteEntity(entityId, containerId){\n    const uri = \"/katappult/core/v1/secured/api/cronTasks/delete?entityId=\" + entityId + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doDelete(url);\n}\n\nasync function searchEntity(page, pageSize, searchTerm, containerId){\n    const uri = \"/katappult/core/v1/secured/api/cronTasks/search?searchTerm=\" + searchTerm+ \"&page=\"  + page + \"&pageSize=\" + pageSize + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n","import React, {Component} from 'react';\nimport {AttributeListGroup, WaitingPane} from \"_components/_common\";\nimport {CronTaskService} from \"_services/CronTask.services\";\nimport {toast} from \"react-toastify\";\nimport {enTemplateService} from \"_services/entemplates.services\";\nimport {commons} from \"_helpers/commons\";\n\nclass CronTaskAdd extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            formData: {},\n            errors: []\n        }\n\n        this.create = this.create.bind(this)\n        this.attributesList = this.attributesList.bind(this);\n    }\n\n    componentDidMount() {\n        CronTaskService.taskBeans(this.props.containerId).then(response => {\n            this.setState({\n                beanSprings: response.data\n            })\n        });\n\n        enTemplateService.listAllInContainer(this.props.containerId).then(response => {\n            this.setState({emails: response.data})\n        })\n    }\n\n    create(formData) {\n        this.setState({formData: formData, loading: true})\n        formData.containerId = this.props.containerId;\n\n        CronTaskService.createEntity(formData, this.props.containerId).then(response => {\n            if (commons.isRequestError(response)) {\n                toast.error(commons.toastError(response))\n                this.setState({\n                    loading: false,\n                    errors: [response.message]\n                })\n            } else {\n                this.setState({loading: false})\n                this.props.onCreateSuccess();\n            }\n        })\n    }\n\n    beanSprings() {\n        let beans = []\n        if (this.state.beanSprings && this.state.beanSprings.length > 0) {\n            this.state.beanSprings.map(bean => {\n                beans.push({\n                    value: bean.attributes.name,\n                    key: bean.attributes.bean\n                })\n            })\n        }\n\n        return beans;\n    }\n\n    attributesList() {\n        const attributesList = {\n            formId: 'dt-form',\n            saveButtonTitle: 'CRÉER',\n            onSubmit: (formData) => this.create(formData),\n            attributes: [\n                {name: 'Nom', dataField: 'name', required: true, placeHolder: 'Nom'},\n                {\n                    name: 'Tâche',\n                    dataField: 'identifiant',\n                    required: true,\n                    type: 'select',\n                    enumProvider: () => this.beanSprings()\n                },\n                {name: 'Périodicité', dataField: 'execution', required: true, placeHolder: 'Périodicité de la tâche'},\n                {\n                    name: \"Email à envoyer\",\n                    dataField: 'emailTemplate',\n                    required: true,\n                    placeHolder: \"Template à envoyer\",\n                    type: 'select',\n                    enumProvider: () => this.emailConfigs()\n                },\n                {\n                    name: 'Notifier les utilisateurs',\n                    dataField: 'notifications',\n                    required: false,\n                    placeHolder: 'Emails séparés par (;)'\n                },\n            ]\n        }\n\n        return attributesList;\n    }\n\n    emailConfigs() {\n        let emailConfigs = []\n        if (this.state.emails && this.state.emails.length > 0) {\n            this.state.emails.map(config => {\n                emailConfigs.push({\n                    key: config.attributes.internalName,\n                    value: config.attributes.displayName\n                })\n            })\n        }\n\n        return emailConfigs\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <WaitingPane/>\n        }\n\n        let formData = {...this.state.formData}\n        return (\n            <div className=\"container-create-root\">\n                <div id=\"form-errors-section\" className=\"form-error\">\n                    {this.state.errors}\n                </div>\n                <AttributeListGroup\n                    attributesListConfig={this.attributesList()}\n                    data={formData}\n                    standardFooterActions=\"true\"\n                    formMode='create_object'/>\n            </div>\n        )\n    }\n}\n\nexport default CronTaskAdd;\n","import React, {Component} from 'react';\nimport {DataTable, EmptyPane, WaitingPane} from \"_components/_common\";\nimport {CronTaskService} from \"_services/CronTask.services\";\n\nclass CronTaskInstanceList extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            datas: [],\n            pageSize: 14\n        }\n\n        this.stop = this.stop.bind(this)\n        this.tableActions = this.tableActions.bind(this)\n        this.table = this.table.bind(this)\n        this.refresh = this.refresh.bind(this)\n        this.goToPage = this.goToPage.bind(this)\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.refreshList && this.props.refreshList !== prevProps.refreshList) {\n            this.refresh()\n        }\n    }\n\n    goToPage(i) {\n        this.loadDatas(i)\n    }\n\n    componentDidMount() {\n        this.loadDatas(0)\n    }\n\n    refresh() {\n        this.loadDatas(this.state.page)\n    }\n\n    loadDatas(page) {\n        this.setState({loading: true})\n        CronTaskService.listInstances(this.props.taskId, page, this.state.pageSize, this.props.containerId).then(response => {\n            this.setState({\n                loading: false,\n                page: page,\n                datas: response.data,\n                metaData: response.metaData,\n            })\n        })\n    }\n\n    tableActions(v, i) {\n        return <td width={'10%'}>\n            {this.stop(v, i)}\n            <button onClick={() => this.dropTask(v.id)} style={{'margin-right': '0.8rem'}}><i\n                className={'fa fa-trash fa-md'}></i></button>\n        </td>\n    }\n\n    dropTask(id) {\n        CronTaskService.dropInstance(this.props.taskId, id, this.props.containerId).then(response => {\n            this.refresh()\n        })\n    }\n\n    stopTask(id) {\n        CronTaskService.stopTask(this.props.taskId, id, this.props.containerId).then(response => {\n            this.refresh()\n        })\n    }\n\n    stop(v, i) {\n        if (v.status === \"RUNNING\") {\n            return <button onClick={() => this.stopTask(v.id)} style={{'margin-right': '0.8rem'}}><i\n                className={'fa fa-stop fa-md'}></i></button>\n        }\n    }\n\n    status(v, i) {\n        if (v === 'RUNNING') {\n            return <td>\n                <i className={'fa fa-spinner fa-md'}></i>\n            </td>\n        } else if (v === 'SUCCESS') {\n            return <td>\n                <i className={'fa fa-check fa-md'}></i>\n            </td>\n        } else if (v === 'ERROR') {\n            return <td>\n                <i className={'fa fa-exclamation-triangle fa-md'}></i>\n            </td>\n        }\n    }\n\n\n    tableConfig() {\n        const tableConfig = {\n            columnsConfig: [\n                {name: 'Nom', dataField: 'attributes.name'},\n                {name: 'Début', dataField: 'attributes.createDate', dateFormat: 'DD-MM-YYYY HH:mm'},\n                {name: 'Fin', dataField: 'attributes.endDate', dateFormat: 'DD-MM-YYYY HH:mm'},\n                {name: 'Statut', dataField: 'attributes.status', displayComponent: (v, i) => this.status(v, i)},\n                {name: 'Action', dataField: 'attributes', displayComponent: (v, i) => this.tableActions(v, i)},\n            ],\n        }\n        return tableConfig;\n    }\n\n    table() {\n        if (!this.state.datas || this.state.datas.length === 0) {\n            return <EmptyPane/>\n        }\n\n        let tableConfig = this.tableConfig();\n        let datatable = <DataTable items={JSON.stringify(this.state.datas)}\n                                   tableConfig={tableConfig}\n                                   pagination={true}\n                                   goToPage={this.goToPage}\n                                   metaData={JSON.stringify(this.state.metaData)}\n                                   displayTotalElements={true}\n                                   paginate={true}/>\n\n        return datatable\n    }\n\n\n    render() {\n        let content;\n        if (this.state.loading) {\n            content = <WaitingPane/>\n        } else {\n            content = this.table();\n        }\n\n        return content\n    }\n}\n\nexport default CronTaskInstanceList;\n","import React, {Component} from 'react';\nimport {AttributeListGroup, PersistenceInfo, WaitingPane} from \"_components/_common\";\nimport queryString from 'query-string';\nimport {CronTaskService} from \"_services/CronTask.services\";\nimport CronTaskInstanceList from \"_components/_admin/CronTask/CronTaskInstanceList\";\n\nclass CronTaskDetails extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            subviewMode: 'instances'\n        }\n\n        this.getRootObjectForDetailsId = this.getRootObjectForDetailsId.bind(this)\n        this.loadDatas = this.loadDatas.bind(this)\n        this.updateDatas = this.updateDatas.bind(this)\n    }\n\n    getRootObjectForDetailsId() {\n        const queryUrlParams = queryString.parse(this.props.location.search);\n        let objectforDetailsId = queryUrlParams.rootId;\n        return objectforDetailsId\n    }\n\n    componentDidUpdate(prevProps, prevstate) {\n        const prevQueryUrlParams = queryString.parse(prevProps.location.search);\n        const queryUrlParams = queryString.parse(this.props.location.search);\n        let rootId = queryUrlParams.rootId;\n        let prevId = prevQueryUrlParams.rootId;\n        if (prevId !== rootId && rootId) {\n            this.loadDatas(rootId)\n        }\n    }\n\n    componentDidMount() {\n        let itemId = this.getRootObjectForDetailsId();\n        this.loadDatas(itemId)\n    }\n\n    loadDatas(itemId) {\n        if (itemId) {\n            this.setState({loading: true})\n            CronTaskService.detailsEntity(itemId, this.props.containerId).then(response => {\n                if(response && response.data){\n                    this.setState({\n                        item: response.data,\n                        loading: false\n                    });\n                }\n            })\n        }\n    }\n\n    updateDatas(formData) {\n        let form = {};\n        form.name = formData.attributes.name;\n        form.description = formData.attributes.description;\n        form.type = formData.attributes.type;\n\n        let itemId = this.getRootObjectForDetailsId();\n        CronTaskService.updateEntity(itemId, form, this.props.containerId).then(response => {\n            this.loadDatas(itemId)\n        })\n    }\n\n    refreshList() {\n        this.setState({refreshList: true})\n        setTimeout(() => {\n            this.setState({refreshList: false})\n        }, 300)\n    }\n\n    headerActions() {\n        let subviewMode = this.state.subviewMode;\n        return <div className={'btn-toolbar'}>\n            {subviewMode !== 'list' &&\n            <button onClick={() => this.setState({subviewMode: 'list'})}><i className={'fa fa-eye'}></i>&nbsp;Details\n            </button>}\n            {subviewMode !== 'instances' && <button onClick={() => this.setState({subviewMode: 'instances'})}><i\n                className={'fa fa-list'}></i>&nbsp;Liste</button>}\n            {subviewMode === 'instances' &&\n            <button onClick={() => this.refreshList()}><i className={'fa fa-refresh'}></i>&nbsp;Recharger</button>}\n        </div>\n    }\n\n\n    render() {\n        const attributesList = {\n            onSubmit: (formData) => this.updateDatas(formData),\n            attributes: [\n                {name: 'Nom', dataField: 'attributes.name', readOnly: true},\n                {name: 'Périodicité', dataField: 'attributes.execution', readOnly: true},\n                {name: 'Identifiant', dataField: 'attributes.identifiant', readOnly: true},\n                {name: 'Email à envoyer', dataField: 'attributes.emailTemplate', readOnly: true},\n                {name: 'Notifications', dataField: 'attributes.notifications', readOnly: true},\n            ]\n        }\n\n        if (!this.state.item || this.state.loading) {\n            return <WaitingPane/>\n        }\n\n        let content;\n        if (this.state.subviewMode === 'instances') {\n            content = <CronTaskInstanceList {...this.props}\n                                            refreshList={this.state.refreshList}\n                                            taskId={this.getRootObjectForDetailsId()}/>\n        } else {\n            content = <>\n                <div className=\"attributes-panel\">\n                    <p className=\" form-error\">{this.state.errors}</p>\n                    <AttributeListGroup\n                        containerId={this.props.containerId}\n                        attributesListConfig={attributesList}\n                        data={this.state.item}/>\n                </div>\n\n                <div className=\"attributes-panel\">\n                    <p className=\" form-error\">{this.state.errors}</p>\n                    <PersistenceInfo\n                        {...this.props}\n                        data={this.state.item}\n                        containerId={this.props.containerId}\n                        displayHeader={true}/>\n                </div>\n            </>\n        }\n\n        return <div className={'entity-details'}>\n            <div className=\"admin-details-header\">\n                <p className=\"page-title\">{this.state.item.attributes.name}</p>\n                {this.headerActions()}\n            </div>\n            {content}\n        </div>\n    }\n}\n\nexport default CronTaskDetails;\n","import React, {Component} from 'react';\nimport {DataTable, EmptyPane, WaitingPane, Wizard} from \"_components/_common\";\nimport CronTaskAdd from \"_components/_admin/CronTask/CronTaskAdd\";\nimport {CronTaskService} from \"_services/CronTask.services\";\nimport {Input} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\nimport queryString from 'query-string';\nimport CronTaskDetails from \"_components/_admin/CronTask/CronTaskDetails\";\n\nclass CronTaskList extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            datas: [],\n            page: 0,\n            pageSize: 10,\n            subviewMode: 'list'\n        }\n\n        this.onCreateSuccess = this.onCreateSuccess.bind(this)\n        this.loadDatas = this.loadDatas.bind(this)\n        this.wizardContent = this.wizardContent.bind(this)\n        this.tableActions = this.tableActions.bind(this)\n        this.table = this.table.bind(this)\n        this.delete = this.delete.bind(this)\n        this.displayDetails = this.displayDetails.bind(this)\n        this.linkTo = this.linkTo.bind(this)\n        this.refresh = this.refresh.bind(this)\n    }\n\n    onCreateSuccess(wizardCloseFunction) {\n        wizardCloseFunction()\n        this.loadDatas(this.state.page)\n    }\n\n    wizardContent(wizardCloseFunction) {\n        return <CronTaskAdd onCreateSuccess={() => this.onCreateSuccess(wizardCloseFunction)}\n                            {...this.props}/>\n    }\n\n    componentDidMount() {\n        this.loadDatas(0)\n    }\n\n    refresh() {\n        this.loadDatas(this.state.page)\n    }\n\n    loadDatas(page) {\n        this.setState({loading: true})\n        console.log('111')\n        CronTaskService.listEntity(page, this.state.pageSize, this.props.containerId).then(response => {\n            this.setState({\n                page: page,\n                loading: false,\n                datas: response.data,\n                metaData: response.metaData,\n                subviewMode: 'list'\n            })\n        })\n\n    }\n\n    searchTermUpdated(e) {\n        this.setState({loading: true})\n        let searchTerm = e.target.value\n        if (searchTerm) {\n            CronTaskService.searchEntity(0, 30, this.state.searchTerm, this.props.containerId).then(response => {\n                this.setState({\n                    page: 0,\n                    loading: false,\n                    datas: response.data,\n                    metaData: response.metaData,\n                    searchTerm: searchTerm,\n                    subviewMode: 'search'\n                })\n            })\n        } else {\n            this.loadDatas(0)\n        }\n    }\n\n    getRootObjectForDetailsId() {\n        const queryUrlParams = queryString.parse(this.props.location.search);\n        let objectforDetailsId = queryUrlParams.rootId;\n        return objectforDetailsId;\n    }\n\n    displayDetails(e, id) {\n        e.preventDefault();\n        let hash = window.location.hash.substr(1);\n        if (hash.includes('?')) {\n            this.props.history.push(hash + '&rootId=' + id)\n        } else {\n            this.props.history.push(hash + '?rootId=' + id)\n        }\n    }\n\n    linkTo = (val, item) => {\n        return <td className={'td-left'}>\n            <Link className={'table-link'} onClick={e => this.displayDetails(e, val.id)}>{val.name}</Link>\n        </td>\n    }\n\n    delete(id) {\n        CronTaskService.deleteEntity(id, this.props.containerId).then(response => {\n            this.loadDatas(this.state.page)\n        })\n    }\n\n    tableActions(v, i) {\n        return <td width={'10%'} className={'td-left'}>\n            <div className={'btn-toolbar'}>\n                <button onClick={() => this.delete(v.id)}><i className={'fa fa-trash fa-md'}></i>&nbsp;Supprimer\n                </button>\n            </div>\n        </td>\n    }\n\n    tableConfig() {\n        const tableConfig = {\n            columnsConfig: [\n                {\n                    name: 'Nom',\n                    dataField: 'attributes',\n                    displayComponent: (v, i) => this.linkTo(v, i),\n                    headerClassName: 'td-left',\n                    className: 'td-left'\n                },\n                {\n                    name: 'Bean spring',\n                    dataField: 'attributes.identifiant',\n                    headerClassName: 'td-left',\n                    className: 'td-left'\n                },\n                {\n                    name: 'Execution',\n                    dataField: 'attributes.execution',\n                    headerClassName: 'td-left',\n                    className: 'td-left'\n                },\n                {\n                    name: 'Email template',\n                    dataField: 'attributes.emailTemplate',\n                    headerClassName: 'td-left',\n                    className: 'td-left'\n                },\n                {\n                    name: 'Notifications',\n                    dataField: 'attributes.notifications',\n                    headerClassName: 'td-left',\n                    className: 'td-left'\n                },\n                {dataField: 'attributes', displayComponent: (v, i) => this.tableActions(v, i)},\n            ],\n        }\n        return tableConfig;\n    }\n\n    table() {\n        if (!this.state.datas || this.state.datas.length === 0) {\n            return <EmptyPane/>\n        }\n\n        let tableConfig = this.tableConfig();\n\n        let datatable;\n        if (this.state.subviewMode === 'list') {\n            datatable = <DataTable items={JSON.stringify(this.state.datas)}\n                                   tableConfig={tableConfig}\n                                   pagination={true}\n                                   metaData={JSON.stringify(this.state.metaData)}\n                                   displayTotalElements={true}\n                                   paginate={true}/>\n        } else {\n            datatable = <DataTable items={JSON.stringify(this.state.datas)}\n                                   tableConfig={tableConfig}\n                                   pagination={false}\n                                   metaData={JSON.stringify(this.state.metaData)}\n                                   displayTotalElements={true}\n                                   paginate={false}/>\n        }\n\n        return datatable;\n    }\n\n\n    render() {\n        let objectforDetailsId = this.getRootObjectForDetailsId()\n        if (!objectforDetailsId) {\n            let content;\n            if (this.state.loading) {\n                content = <WaitingPane/>\n            } else {\n                content = this.table();\n            }\n\n            return <div className=\"portlet-box\">\n                <div className=\"portlet-header\">\n                    <div className=\"admin-filters-root\">\n                        <Input type=\"text\"\n                               className=\"admin-hover-input\"\n                               name=\"input1-group2\"\n                               placeholder=\"Chercher un élément\"\n                               autocomplete=\"off\"\n                               onChange={(e) => this.searchTermUpdated(e)}\n                               defaultValue={this.state.searchTerm}/>\n                        <div className=\"btn-toolbar btn-toolbar-right\">\n                            <Wizard buttonTitle={'Ajouter'}\n                                    buttonIcon={'fa fa-plus fa-md'}\n                                    hideFooter={true}\n                                    dialogSize=\"md\"\n                                    dialogTitle=\"Ajouter une tâche\"\n                                    dialogContentProvider={(wizardCloseFunction) => this.wizardContent(wizardCloseFunction)}/>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"portlet-content\">\n                    {content}\n                </div>\n            </div>\n        } else {\n            return <CronTaskDetails {...this.props}/>\n        }\n    }\n}\n\nexport default CronTaskList;\n","import { _doGet, API_ROOT} from './utils/services.config';\n\nexport const errorCodeService = {\n    listEntity,\n    searchEntity\n}\nasync function listEntity(containerId){\n    const uri = \"/api/secured/v1/katappult/errorCodes/list?containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function searchEntity(page, pageSize, searchTerm, containerId){\n    const uri = \"/api/secured/v1/katappult/errorCodes/search?searchTerm=\" + searchTerm+ \"&page=\"  + page + \"&pageSize=\" + pageSize + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n","import React, { Component } from 'react';\nimport {DataTable, EmptyPane, WaitingPane} from \"_components/_common\";\nimport {errorCodeService} from \"_services/errorCode.services\";\nimport {Input} from \"reactstrap\";\n\nclass ErrorCodeList extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            datas: [],\n            subviewMode: 'list'\n        }\n\n        this.table = this.table.bind(this)\n    }\n\n    componentDidMount() {\n        this.setState({loading:true})\n        errorCodeService.listEntity(this.props.containerId).then(response => {\n            this.setState({\n                loading: false,\n                datas: response.data,\n                metaData: response.metaData,\n                subviewMode: 'list'\n            })\n        })\n    }\n\n    searchTermUpdated(e){\n        this.setState({loading:true})\n        let searchTerm = e.target.value\n        if(searchTerm){\n            errorCodeService.searchEntity(0, 30, this.state.searchTerm , this.props.containerId).then(response => {\n                this.setState({\n                    page: 0,\n                    loading: false,\n                    datas: response.data,\n                    metaData: response.metaData,\n                    searchTerm: searchTerm,\n                    subviewMode: 'search'\n                })\n            })\n        }\n        else {\n            this.loadDatas(0)\n        }\n    }\n\n    tableConfig(){\n        const tableConfig = {\n            columnsConfig: [\n                {name:'Famille', dataField: 'attributes.family', headerClass: 'td-left', className: 'td-left'},\n                {name:'Code', dataField: 'attributes.type', headerClass: 'td-left', className: 'td-left'},\n                {name:'Message fr', dataField: 'attributes.message_fr', headerClass: 'td-left', className: 'td-left'},\n                {name:'Message en', dataField: 'attributes.message_en', headerClass: 'td-left', className: 'td-left'},\n            ],\n        }\n        return tableConfig;\n    }\n\n    table(){\n        if(!this.state.datas || this.state.datas.length === 0){\n            return <EmptyPane />\n        }\n\n        let tableConfig = this.tableConfig();\n\n        let datatable;\n        if(this.state.subviewMode === 'list'){\n            datatable = <DataTable items={JSON.stringify(this.state.datas)}\n                                       tableConfig={tableConfig}\n                                       pagination={true}\n                                       metaData={JSON.stringify(this.state.metaData)}\n                                       displayTotalElements={true}\n                                       paginate={true}/>\n        } else {\n            datatable = <DataTable items={JSON.stringify(this.state.datas)}\n                                       tableConfig={tableConfig}\n                                       pagination={false}\n                                       metaData={JSON.stringify(this.state.metaData)}\n                                       displayTotalElements={true}\n                                       paginate={false}/>\n        }\n\n        return datatable\n    }\n\n\n    render() {\n            let content;\n            if (this.state.loading) {\n                content = <WaitingPane/>\n            } else {\n                content = this.table();\n            }\n\n            return <div className=\"portlet-box\">\n                <div className=\"portlet-header\">\n                    <div className=\"admin-filters admin-filters-root admin-filters-root-withPadding\">\n                        <Input type=\"text\"\n                               className=\"admin-hover-input\"\n                               name=\"input1-group2\"\n                               placeholder=\"Chercher un élément\"\n                               autocomplete=\"off\"\n                               onChange={(e) => this.searchTermUpdated(e)}\n                               defaultValue={this.state.searchTerm}/>\n                    </div>\n                </div>\n                <div className=\"portlet-content\">\n                    {content}\n                </div>\n            </div>\n   }\n}\n\nexport default ErrorCodeList;\n","import React, { Component } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport {commons} from '_helpers/commons'\nimport {DefaultFooter} from '_components/_common';\n\nclass PlatformContextMenu extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n        }\n    }\n\n    render() {\n\n        let rows=[], viewName = commons.getValueFromUrl('name');\n        this.props.menuContent.map(c => {\n            let className ='fa fa-lg ' + c.className;\n            let listGroupsItems = (\n                <ListGroup.Item action active={viewName === c.key}\n                                className=\"katappult-lgi-menu no-border\"\n                                onClick={e=>this.props.setDisplayedView(e, c.key, c.menuGroup)}>\n                    <i className={className}></i>{c.name}\n                </ListGroup.Item>\n            );\n\n            rows.push(listGroupsItems);\n            if(c.dividerAfter) {\n                rows.push(<div className=\"menu-divider\">&nbsp;</div>)\n            }\n        })\n\n        return <>\n            <div className=\"secondary-context-menu fadeIn\">\n                <div lassName=\"menu\">{rows}</div>\n\n                <div className=\"\">\n                    <DefaultFooter {...this.props}/>\n                </div>\n            </div>\n        </>\n    }\n}\n\nexport default PlatformContextMenu;\n","import React, { Component } from 'react';\nimport PlatformContextMenu from './PlatformContextMenu.js'\nimport Sidebar from \"react-sidebar\";\nimport {commons} from \"_helpers/commons\";\n\nclass PrimaryContextMenu extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            sidebarOpen: true,\n        }\n\n        this.onSetSidebarOpen = this.onSetSidebarOpen.bind(this);\n        this.sidebarContent = this.sidebarContent.bind(this);\n    }\n\n    onSetSidebarOpen(open) {\n        this.setState({ sidebarOpen: open });\n    }\n\n    sidebarContent(){\n        return  <div className=\"admin-main-left-menu\">\n            <PlatformContextMenu\n                {...this.props} menu={this.props.menuContent}/>\n        </div>\n    }\n\n    render(){\n        return <>\n            <Sidebar\n                rootClassName=\"root-sidebar\"\n                sidebarClassName=\"sidebar-content\"\n                overlayClassName=\"sidebar-overlay\"\n                sidebar={this.sidebarContent()}\n                open={this.state.sidebarOpen}\n                onSetOpen={this.onSetSidebarOpen}\n                docked={true}>\n            </Sidebar>\n        </>\n    }\n}\n\nexport default PrimaryContextMenu;\n","import { _doPost,_doGet,_doPut, API_ROOT, _doDelete, buildURLQuery } from '../utils/services.config';\n\nexport const CreditService = {\n    createEntity,\n    listEntity,\n    updateEntity,\n    updateEntityMaster,\n    deleteEntity,\n    detailsEntity,\n    searchEntity,\n    // EXPORT\n}\n\nasync function createEntity(formData, containerId){\n    const uri = '/katappult/cloud/app/v1/secured/api/credit/create';\n    var url = `${API_ROOT}` + uri + \"?containerId=\" + containerId\n    return _doPost(url, JSON.stringify(formData))\n}\n\nasync function listEntity(page, pageSize, containerId, params){\n    const uri = \"/katappult/cloud/app/v1/secured/api/credit/list?page=\" + page + \"&pageSize=\" + pageSize + \"&containerId=\" + containerId;\n    let url = `${API_ROOT}` + uri;\n    if(params){\n       var p = buildURLQuery(params);\n       url = url + '&' + p;\n    }\n\n    return _doGet(url);\n}\n\nasync function updateEntity(entityId, formdata, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/credit/update\".concat(\"?containerId=\").concat(containerId).concat(\"&entityId=\" + entityId);\n    const url = `${API_ROOT}` + uri;\n    return _doPut(url, formdata);\n}\n\nasync function updateEntityMaster(entityId, formdata, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/credit/updateMaster\".concat(\"?containerId=\").concat(containerId).concat(\"&entityId=\" + entityId);\n    const url = `${API_ROOT}` + uri;\n    return _doPut(url, formdata);\n}\n\nasync function detailsEntity(entityId, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/credit/details?entityId=\" + entityId + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function deleteEntity(entityId, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/credit/delete?entityId=\" + entityId + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doDelete(url);\n}\n\nasync function searchEntity(page, pageSize, searchTerm, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/credit/search?searchTerm=\" + searchTerm+ \"&page=\"  + page + \"&pageSize=\" + pageSize + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\n// FUNCTIONS\n","import React, {useEffect, useState} from 'react';\nimport {AttributeListGroup, WaitingPane} from \"_components/_common\";\nimport {CreditService} from \"_services/_generated/Credit.services\";\nimport {toast} from \"react-toastify\";\nimport {commons} from \"_helpers/commons\";\nimport {typeService} from \"_services/type.services\";\nimport Form from \"react-bootstrap/Form\";\n// IMPORT\n\nfunction CreditAdd(props) {\n\n    const[formData, setFormData] = useState()\n    const[loading, setLoading] = useState(false)\n    const[errors, setErrors] = useState([])\nconst[types, setTypes] = useState([])\n    const[businessType, setBusinessType] = useState('com.katappult.online.types.CreditType')\n// CONST\n\n    const findFormErrors = (form) => {\n        const { dateExpiration,consumed,quantity/*FORM ERRORS ATTR*/} = form\n        const newErrors = {}\n\nif (!dateExpiration || dateExpiration === '') newErrors.dateExpiration = 'Champs invalide';\nif (!consumed || consumed === '') newErrors.consumed = 'Champs invalide';\nif (!quantity || quantity === '') newErrors.quantity = 'Champs invalide';\n/*FORM ERRORS VALIDATION*/\n        return newErrors;\n    }\n\n    const create = (formData) => {\n        setFormData(formData)\n        setLoading(true)\n\n        formData.containerId = props.containerId;\nformData.businessType = businessType// ADDITIONAL_ATTRIBUTES\n\n        CreditService.createEntity(formData, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(error) {\n                setLoading(false)\n                let message = response.errorFamily + ' - ' + response.message\n                toast.error(commons.toastError(response));\n                setErrors([message])\n            }\n            else {\n                setLoading(false)\n                props.onCreateSuccess();\n                toast(commons.toastSuccess(\"Un élément a été créé\"));\n            }\n        })\n    }\n\n    const attributesList = () => {\n        const attributesList = {\n            saveButtonTitle: 'CRÉER',\n            onSubmit: (formData) => create(formData),\n            formValidity: (formData) => findFormErrors(formData),\n            attributes: [\n{name: \"DateExpiration\", dataField: \"dateExpiration\", required: true, placeHolder: \"DateExpiration\", type: \"date\", dateFormat: \"DD/MM/YYYY\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n{name: \"Consumed\", dataField: \"consumed\", required: true, placeHolder: \"Consumed\", type: \"number\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n{name: \"Quantity\", dataField: \"quantity\", required: true, placeHolder: \"Quantity\", type: \"number\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n// CREATE_FORM_ATTRIBUTES_LIST\n            ]\n        }\n\n        return attributesList;\n    }\n\nuseEffect(() => {\n        const rootType = businessType\n        const containerId = props.containerId\n        typeService.getByPath(rootType, containerId).then(response => {\n            const id = response.data.attributes.id\n            const firstElement = [response.data]\n            typeService.getSubtypeOf(id, true, containerId).then(types => {\n                const typeDatas = types.data\n                setTypes(firstElement.concat(typeDatas))\n                setBusinessType(rootType)\n            })\n        })\n    }, [])\n\n    const typeSelectionChange = (e) => {\n        setBusinessType(e.target.value)\n    }\n\n    const typesSelect = () => {\n        const options = types.map(type =>\n            <option value={type.attributes.logicalPath}>{type.attributes.displayName}</option>\n        )\n\n        return <Form.Control as=\"select\" onChange={typeSelectionChange}>\n            {options}\n        </Form.Control>\n    }\n\n// METHOD\n\n    if(loading){\n        return <WaitingPane/>\n    }\n\n    const form = {...formData}\n    const attributes = {\n\n        // INITIAL_ATTRIBUTES_VALUE\n    }\n    form['attributes'] = attributes;\n\n    return (\n        <div className=\"container-create-root\">\n            <p className=\" form-error\">{errors}</p>\n<Form.Group className=\"field field-string attributes-list\">\n                <Form.Label>Type</Form.Label>\n                {typesSelect()}\n            </Form.Group>\n\n{/*FORM*/}\n            <AttributeListGroup\n                attributesListConfig={attributesList()}\n                data={form}\n                standardFooterActions=\"true\"\n                formMode='create_object'/>\n        </div>\n    )\n}\n\nexport default CreditAdd;\n\n// FOOTER\n","import React from 'react';\nimport {StatusHelper} from \"_helpers/StatusHelper\";\n\nfunction LifecycleAndTypeStatus(props){\n    const status = props.item?.attributes?.lifecycleInfo?.currentState;\n    const typeDisplay = props.typeDisplay ? props.typeDisplay : props.item.businessType?.displayName;\n\n    return <div style={RootStyle}>\n        {typeDisplay && <div style={TypeStyle}>{typeDisplay}</div>}\n        {status && <div className={''}>{StatusHelper.uiDisplay(status)}</div>}\n    </div>\n}\n\nexport default LifecycleAndTypeStatus;\n\n\nconst RootStyle = {\n    width: '100%',\n    float: 'right',\n    display: 'flex',\n    justifyContent: 'flex-end'\n}\n\nconst TypeStyle = {\n    background: \"#dedede\",\n    color: '#333',\n    marginRight: '1rem',\n    fontSize: '13px',\n    maxHeight: '2rem',\n    padding: '0.5rem',\n    borderRadius: '4px'\n}\n","import React, {useEffect, useState} from 'react';\nimport { Chrono } from \"react-chrono\";\nimport {EmptyPane} from \"_components/_common\";\nimport moment from 'moment'\nimport {lifecycleManagedService} from \"_services/lifecycleManaged.services\";\nimport {commons} from \"_helpers/commons\";\nimport {StatusHelper} from \"_helpers/StatusHelper\";\n\nfunction LifecycleManagedHistory(props) {\n\n    const [items, setItems] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    const getCreation = () => {\n        const date = moment(props.item.attributes.createDate, 'YYYY-MM-DD HH:mm:ss S').format('DD-MM-YYYY HH:mm:ss');\n        const creator = 'admin'\n        const item = {\n            title: date,\n            cardTitle: \"Creation\",\n            cardSubtitle: creator,\n        }\n\n        return item\n    }\n\n    const getItem = (data) => {\n        const date = moment(data.attributes.createDate, 'YYYY-MM-DD HH:mm:ss S').format('DD-MM-YYYY HH:mm:ss');\n        const creator = data.attributes.promoter.ownerSummary\n        const state = StatusHelper.getDisplay(data.attributes.toStatus)\n        const comment = data.attributes.comment\n        const item = {\n            title: date,\n            cardTitle: state,\n            cardSubtitle: creator,\n            cardDetailedText: comment\n        }\n\n        return item\n    }\n\n    useEffect(() => {\n\n        const datas = []\n        if(props.item){\n            setLoading(true)\n            const lmManagedId =  props.item.attributes.id\n            datas.push(getCreation())\n\n            lifecycleManagedService.lifecycleHistory(lmManagedId, props.containerId).then(response => {\n                if(!commons.isRequestError(response)) {\n                    response.data.map(data => {\n                        datas.push(getItem(data))\n                    })\n                }\n\n                setItems(datas)\n                setLoading(false)\n            })\n        }\n        else {\n            setLoading(false)\n        }\n\n    }, [props.item]);\n\n\n    if(loading){\n        return <></>\n    }\n\n    if(items.length < 1){\n        return <EmptyPane />\n    }\n\n    return <div style={{ width: \"700px\", margin: 'auto', marginTop: '2rem'}}>\n            <Chrono\n                enableOutline\n                items={items}\n                mode=\"VERTICAL_ALTERNATING\"\n            />\n    </div>\n}\n\nexport default LifecycleManagedHistory;\n","import React, {useEffect, useState} from 'react';\nimport {AttributeListGroup, PersistenceInfo, WaitingPane, Accordion} from \"_components/_common\";\nimport queryString from 'query-string';\nimport {CreditService} from \"_services/_generated/Credit.services\";\nimport {commons} from \"_helpers/commons\";\nimport LifecycleAndTypeStatus from \"_components/_common/LifecycleAndTypeStatus\";\nimport {toast} from \"react-toastify\";\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\n\nimport LifecycleManagedActions from '_components/_admin/Lifecycles/LifecycleManagedActions';\nimport LifecycleManagedHistory from \"_components/_admin/Lifecycles/LifecycleManagedHistory/LifecycleManagedHistory\";\nimport {StatusHelper} from \"_helpers/StatusHelper\";\n// IMPORT\n\nfunction CreditDetails(props)  {\n\n    const[loading, setLoading] = useState(true)\n    const[item, setItem] = useState()\n    const[errors, setErrors] = useState([])\n    // CONST\n\n    const getRootObjectForDetailsId = () => {\n        const queryUrlParams = queryString.parse(props.location.search);\n        let objectforDetailsId = queryUrlParams.rootId;\n        return objectforDetailsId\n    }\n\n    useEffect(() => {\n        refresh()\n    }, [props.location.search]);\n\n    const refresh = () => {\n        var itemId = getRootObjectForDetailsId();\n        loadDatas(itemId)\n    }\n\n    const loadDatas = (itemId) => {\n        setLoading(true)\n        CreditService.detailsEntity(itemId, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(!error){\n                setItem(response.data)\n            }\n\n            setLoading(false)\n        })\n    }\n\n    const updateDatas = (formData) => {\n        var form = formData;\n        form.containerId = props.containerId;\n\n        var itemId = getRootObjectForDetailsId();\n        CreditService.updateEntity(itemId, form, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(error) {\n                toast.error(commons.toastError(response));\n                let message = response.errorFamily + ' - ' + response.message\n                setErrors([message])\n            }\n            else {\n                loadDatas(itemId);\n                setErrors([])\n                toast(commons.toastSuccess(\"L'élément a été mis à jour\"));\n                props.refresh()\n            }\n        })\n    }\n\n    // FUNCTIONS\n\n    const headerActions = () => {\n        \n\tconst lifecycleManagedId = item.attributes.id;\n    const currentState = item.attributes?.lifecycleInfo?.currentState;\n    var lifecycleManagedActions = <LifecycleManagedActions\n\t\t\t{...props}\n\t\t\tinlineButtons={true}\n\t\t\tbyActionName='SET_STATE'\n\t\t\trefreshCallBack={refresh}\n\t\t\tlifecycleManagedId={lifecycleManagedId}\n\t\t\tcurrentState={currentState}/>\n\n// ACTIONS VARIABLES\n\n         return <div className=\"btn-toolbar btn-toolbar-right\">\n        \t\t\t{lifecycleManagedActions}\n{/*ACTIONS_BUTTON*/}\n         </div>\n    }\n\n\n    const attributesList = {\n        onSubmit: (formData) => updateDatas(formData),\n        attributes: [\n            {name: \"DateExpiration\", dataField: \"dateExpiration\", required: true, placeHolder: \"DateExpiration\", type: \"date\", dateFormat: \"DD/MM/YYYY\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n{name: \"Consumed\", dataField: \"consumed\", required: true, placeHolder: \"Consumed\", type: \"number\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n{name: \"Quantity\", dataField: \"quantity\", required: true, placeHolder: \"Quantity\", type: \"number\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n// DETAILS_ATTRIBUTES_LIST\n        ]\n    }\n\n    if(loading) {\n        return <WaitingPane/>\n    }\n\n    return <div className={'entity-details'}>\n        <div className=\"admin-details-header\">\n            <div style={{display: 'flex', marginBottom: '1rem'}}>\n              <p className=\"page-title\" style={LifecycleStyle}>{item.attributes.name}</p>\n              <LifecycleAndTypeStatus item={item}/>\n            </div>\n            {headerActions()}\n        </div>\n\n        <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-x\" className={\"admin-nav-tabs\"}>\n              <Tab eventKey=\"1\" title=\"Details\">\n                      <div style={{\n                        marginBottom: '2rem',\n                        paddingBottom: '1rem'\n                      }}>\n                          <p className=\" form-error\">{errors}</p>\n                           <AttributeListGroup\n                              canEdit={true}\n                              standardFooterActions=\"true\"\n                              containerId={props.containerId}\n                              attributesListConfig={attributesList}\n                              data={item}/>\n                       </div>\n\n                       {/*Accordion_1*/}\n                        <Accordion title={\"Metadonnées\"}\n                                    expanded={true}\n                                    content={\n                                        <>\n                                            <PersistenceInfo\n                                                {...props}\n                                                data={item}\n                                                containerId={props.containerId}\n                                                displayHeader={true}/>\n                                        </>\n                        }/>\n                        <Accordion title={\"Historique\"}\n                       expanded={true}\n                       content={ <LifecycleManagedHistory\n                                   {...props}\n                                   item={item}/>\n                       }/>\n\n{/*Accordion_2*/}\n              </Tab>\n              {/*tabs*/}\n        </Tabs>\n    </div>\n\n}\n\nexport default CreditDetails;\n\nconst LifecycleStyle = {\n    width: '50%'\n}\n\n\n// FOOTER\n","import React, {Component, useEffect, useState} from 'react';\nimport {DataTable, EmptyPane, WaitingPane, Wizard, WizardConfirm} from \"_components/_common\";\nimport CreditAdd from \"_generated/Credit/CreditAdd\";\nimport {CreditService} from \"_services/_generated/Credit.services\";\nimport CreditDetails from \"_generated/Credit/CreditDetails\";\nimport {Input} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\nimport queryString from 'query-string';\nimport {coreUri} from '_helpers/CoreUri';\nimport { commons } from '_helpers/commons.js';\nimport {toast} from \"react-toastify\";\n\nimport {DataExportService} from \"_services/DataExport.services\";\nimport FileSaver from \"file-saver\";\nimport {StatusHelper} from \"_helpers/StatusHelper\";\n// IMPORT\n\nfunction CreditList(props) {\n\n    const[pageSize, setPageSize] = useState(14)\n    const[loading, setLoading] = useState(true)\n    const[datas, setDatas] = useState([])\n    const[page, setPage] = useState(0)\n    const[subviewMode, setSubviewMode] = useState('list')\n    const[metaData, setMetaData] = useState()\n    const[searchTerm, setSearchTerm] = useState()\n\n\n    const runExport = async () => {\n    var form = {}\n    form['separator.char'] = '|'\n    form['comment.char'] = '#'\n    form['domain'] = commons.getWorkingContainerPath(props.userContext)\n    form['container'] = commons.getWorkingContainerPath(props.userContext)\n    form['attach.discarded.file'] = false\n    form['attach.log.file'] = false\n    form['log.file.extension'] = '.log'\n    form['notify.on.error'] = 'false'\n    form['notify.on.success'] = 'false'\n    form['mail.on.success'] = false\n    form['mail.on.error'] = false\n\n    const containerId = props.containerId\n    const exportConfig = await DataExportService.getByInternalName('EXPORT_CREDIT', containerId).then(response => {\n        return response\n    })\n\n    if(!commons.isRequestError(exportConfig)){\n        const id = exportConfig.data.attributes.id\n        DataExportService.runExport(id, form, containerId).then(response => {\n            if(response.ok) {\n                return response.text()\n            }\n            else {\n                toast.error(\"Echec de l'export des données\")\n            }\n\n            return null;\n        }).then(response => {\n            if(response){\n                var blob = new Blob([response], {type:\"plain/text;charset=UTF-8\"});\n                FileSaver.saveAs(blob, \"Credit.csv\");\n            }\n        }).catch(error => {\n            toast.error(\"Echec de l'export des données\")\n        })\n    }\n    else {\n        toast.error(\"Configuration introuvable pour l'export\")\n    }\n\n}\nconst typeOf =  (v, i) => {\n        return <td width={'20%'} className=\"td-center\">\n           <div className='type-badge-display type-badge-display-inherit'>               {i.businessType?.displayName ? i.businessType.displayName.substring(0,2) : ''}           </div>\n        </td>\n    }\n\n\t\nconst status = (v, i) => {\n        return <td className={'td-center'}  width={'10%'}>\n            <div className=\"table-status\">               {v.lifecycleInfo?.currentState ? StatusHelper.uiDisplay(v.lifecycleInfo.currentState) : ''}            </div>\n        </td>\n    }\n\n// METHOD\n\n    const onCreateSuccess = (wizardCloseFunction) => {\n        wizardCloseFunction()\n        loadDatas(page)\n    }\n\n    const wizardContent = (wizardCloseFunction) => {\n        return <CreditAdd onCreateSuccess={() => onCreateSuccess(wizardCloseFunction)} {...props}/>\n    }\n\n    useEffect(() => {\n        loadDatas(0)\n    }, [])\n\n    const goToPage = (index) => {\n      loadDatas(index)\n    }\n\n    const refresh = () => {\n        loadDatas(page)\n    }\n\n    const loadDatas = (index) => {\n        setLoading(true)\n        const statusFromUrl = commons.getValueFromUrl('status');\n        const params = {\n          status: statusFromUrl ? statusFromUrl : \"\"\n        }\n        CreditService.listEntity(index, pageSize, props.containerId, params).then(response => {\n            if(!commons.isRequestError(response)){\n                setPage(index)\n                setDatas(response.data)\n                setSubviewMode('list')\n                setMetaData(response.metaData)\n                setLoading(false)\n             }\n             else {\n                setDatas([])\n                setLoading(false)\n             }\n        })\n\n    }\n\n    const searchTermUpdated = (e) => {\n        setLoading(true)\n        let searchTerm = e.target.value\n        if(searchTerm){\n            CreditService.searchEntity(0, 10, searchTerm , props.containerId).then(response => {\n                setPage(0)\n                setDatas(response.data)\n                setSubviewMode('search')\n                setMetaData(response.metaData)\n                setSearchTerm(searchTerm)\n                setLoading(false)\n            })\n        }\n        else {\n            loadDatas(0)\n        }\n    }\n\n    const getRootObjectForDetailsId = () => {\n        const queryUrlParams = queryString.parse(props.location.search);\n        let objectforDetailsId = queryUrlParams.rootId;\n        return objectforDetailsId\n    }\n\n    const displayDetails = (e, id) => {\n        if(e) e.preventDefault();\n        let tabName = commons.getValueFromUrl('tab');\n        let view = commons.getValueFromUrl('name');\n        const url = coreUri.backOfficeViewURL(tabName, view, [\"rootId=\" +  id]);\n        props.history.push(url);\n    }\n\n    const deleteRow = (id) => {\n        CreditService.deleteEntity(id, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(error) {\n                toast.error(commons.toastError(response));\n            }\n            else {\n                loadDatas(page)\n                toast(commons.toastSuccess(\"L'élément a été supprimé\"));\n            }\n        })\n    }\n\n    const deleteRowAction = (id) => {\n        return <>\n            <WizardConfirm\n                buttonIconComp={<i className={'fa fa-trash fa-lg'}></i>}\n                onConfirm={() => deleteRow(id)}\n                dialogMessage=\"Voulez vous supprimer l'élément?\"\n                dialogTitle='Supprimer'\n            />\n        </>\n    }\n\n    // METHOD\n\n    const tableActions = (v, i) => {\n        return <td width={'20%'} className=\"td-right\">\n            <div className=\"btn-toolbar-right table-info-link\">\n                <button onClick={(e) => displayDetails(e, v.id)}>\n                    <i className={'fa fa-info fa-lg'}></i>\n                </button>\n                 {deleteRowAction(v.id)}\n            </div>\n        </td>\n    }\n\n    const itemsDatatableRowItemName = (v, i) => {\n        return <td className={'td-left table-info-link'}>\n            <a href='#/details' onClick={(e) => displayDetails(e, v.id)}>\n                {v.dateExpiration && v.dateExpiration.length > 0 ? v.dateExpiration : \"> Infos\"}\n            </a>\n        </td>\n    }\n\n    const table = () => {\n        if(!datas || datas.length === 0){\n            return <EmptyPane />\n        }\n\n        let tableConfig ={\n            columnsConfig: [\n                {name:'DateExpiration', displayComponent: (v, i) => itemsDatatableRowItemName(v,i), dataField: 'attributes', headerClass: 'td-left'},\n{name: \"Consumed\", dataField: \"attributes.consumed\", type: \"number\", headerClass: \"td-left\", className: \"td-left\"},\n{name: \"Quantity\", dataField: \"attributes.quantity\", type: \"number\", headerClass: \"td-left\", className: \"td-left\"},\n{name:'Type', dataField: 'attributes',  displayComponent: (v, i) => typeOf(v,i), headerClass: 'td-center', className: 'td-center'},\n\t{name:'Statut', dataField: 'attributes', displayComponent:(v,i) => status(v,i), headerClass: 'td-center', className: 'td-center'},\n// DATA_TABLE_ATTRIBUTES_LIST\n                {dataField: 'attributes', displayComponent: (v,i) => tableActions(v,i), headerClass: 'td-left', className: 'td-left'},\n            ],\n        }\n        var datatable = <DataTable items={JSON.stringify(datas)}\n                                       tableConfig={tableConfig}\n                                       pagination={true}\n                                       goToPage={goToPage}\n                                       metaData={JSON.stringify(metaData)}\n                                       displayTotalElements={true}\n                                       paginate={subviewMode === 'list' ? true : false}/>\n\n        return datatable\n    }\n\n\n    let objectforDetailsId = getRootObjectForDetailsId()\n    if(!objectforDetailsId) {\n        var content;\n        if (loading) {\n            content = <WaitingPane/>\n        } else {\n            content = table();\n        }\n\n        return <div className=\"portlet-box\">\n                <div className=\"admin-filters-root\">\n                    <Input type=\"text\"\n                           className=\"admin-hover-input\"\n                           name=\"input1-group2\"\n                           placeholder=\"Chercher un élément\"\n                           autocomplete=\"off\"\n                           onChange={(e) => searchTermUpdated(e)}\n                           defaultValue={searchTerm}/>\n                    <div className=\"btn-toolbar btn-toolbar-right\">\n                        <Wizard buttonTitle={'Ajouter'}\n                                buttonIcon={'fa fa-plus fa-md'}\n                                hideFooter={true}\n                                dialogSize=\"md\"\n                                dialogTitle=\"Ajouter une entité\"\n                                dialogContentProvider={(wizardCloseFunction) => wizardContent(wizardCloseFunction)}/>\n                        <button onClick={runExport}><i className={'fa fa-sm fa-file-excel-o'}></i>&nbsp;Exporter</button>\n{/*ACTIONS*/}\n                        <button onClick={refresh}>Refresh</button>\n                    </div>\n            </div>\n            <div className=\"portlet-content\">\n                {content}\n            </div>\n        </div>\n    }\n    else {\n        return <CreditDetails {...props} refresh={refresh} forwardToDetailsUrl={null}/>\n    }\n}\n\nexport default CreditList;\n\n\n// FOOTER\n","import { _doPost,_doGet,_doPut, API_ROOT, _doDelete, buildURLQuery } from '../utils/services.config';\n\nexport const DemandeService = {\n    createEntity,\n    listEntity,\n    updateEntity,\n    updateEntityMaster,\n    deleteEntity,\n    detailsEntity,\n    searchEntity,\n    // EXPORT\n}\n\nasync function createEntity(formData, containerId){\n    const uri = '/katappult/cloud/app/v1/secured/api/demande/create';\n    var url = `${API_ROOT}` + uri + \"?containerId=\" + containerId\n    return _doPost(url, JSON.stringify(formData))\n}\n\nasync function listEntity(page, pageSize, containerId, params){\n    const uri = \"/katappult/cloud/app/v1/secured/api/demande/list?page=\" + page + \"&pageSize=\" + pageSize + \"&containerId=\" + containerId;\n    let url = `${API_ROOT}` + uri;\n    if(params){\n       var p = buildURLQuery(params);\n       url = url + '&' + p;\n    }\n\n    return _doGet(url);\n}\n\nasync function updateEntity(entityId, formdata, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/demande/update\".concat(\"?containerId=\").concat(containerId).concat(\"&entityId=\" + entityId);\n    const url = `${API_ROOT}` + uri;\n    return _doPut(url, formdata);\n}\n\nasync function updateEntityMaster(entityId, formdata, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/demande/updateMaster\".concat(\"?containerId=\").concat(containerId).concat(\"&entityId=\" + entityId);\n    const url = `${API_ROOT}` + uri;\n    return _doPut(url, formdata);\n}\n\nasync function detailsEntity(entityId, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/demande/details?entityId=\" + entityId + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function deleteEntity(entityId, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/demande/delete?entityId=\" + entityId + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doDelete(url);\n}\n\nasync function searchEntity(page, pageSize, searchTerm, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/demande/search?searchTerm=\" + searchTerm+ \"&page=\"  + page + \"&pageSize=\" + pageSize + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\n// FUNCTIONS\n","import React, {useEffect, useState} from 'react';\nimport {AttributeListGroup, WaitingPane} from \"_components/_common\";\nimport {DemandeService} from \"_services/_generated/Demande.services\";\nimport {toast} from \"react-toastify\";\nimport {commons} from \"_helpers/commons\";\nimport {typeService} from \"_services/type.services\";\nimport Form from \"react-bootstrap/Form\";\n// IMPORT\n\nfunction DemandeAdd(props) {\n\n    const[formData, setFormData] = useState()\n    const[loading, setLoading] = useState(false)\n    const[errors, setErrors] = useState([])\nconst[types, setTypes] = useState([])\n    const[businessType, setBusinessType] = useState('com.katappult.online.types.DemandeType')\n// CONST\n\n    const findFormErrors = (form) => {\n        const { title,theme,description/*FORM ERRORS ATTR*/} = form\n        const newErrors = {}\n\nif (!title || title === '') newErrors.title = 'Champs invalide';\nif (!theme || theme === '') newErrors.theme = 'Champs invalide';\nif (!description || description === '') newErrors.description = 'Champs invalide';\n/*FORM ERRORS VALIDATION*/\n        return newErrors;\n    }\n\n    const create = (formData) => {\n        setFormData(formData)\n        setLoading(true)\n\n        formData.containerId = props.containerId;\nformData.businessType = businessType// ADDITIONAL_ATTRIBUTES\n\n        DemandeService.createEntity(formData, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(error) {\n                setLoading(false)\n                let message = response.errorFamily + ' - ' + response.message\n                toast.error(commons.toastError(response));\n                setErrors([message])\n            }\n            else {\n                setLoading(false)\n                props.onCreateSuccess();\n                toast(commons.toastSuccess(\"Un élément a été créé\"));\n            }\n        })\n    }\n\n    const attributesList = () => {\n        const attributesList = {\n            saveButtonTitle: 'CRÉER',\n            onSubmit: (formData) => create(formData),\n            formValidity: (formData) => findFormErrors(formData),\n            attributes: [\n{name: \"Titre de la demande\", dataField: \"title\",  required: true,  placeHolder: \"Titre de la demande\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n{name: \"Theme\", dataField: \"theme\",  required: true,  placeHolder: \"Theme\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n{name: \"Description\", dataField: \"description\",  required: true,  placeHolder: \"Description\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n// CREATE_FORM_ATTRIBUTES_LIST\n            ]\n        }\n\n        return attributesList;\n    }\n\nuseEffect(() => {\n        const rootType = businessType\n        const containerId = props.containerId\n        typeService.getByPath(rootType, containerId).then(response => {\n            const id = response.data.attributes.id\n            const firstElement = [response.data]\n            typeService.getSubtypeOf(id, true, containerId).then(types => {\n                const typeDatas = types.data\n                setTypes(firstElement.concat(typeDatas))\n                setBusinessType(rootType)\n            })\n        })\n    }, [])\n\n    const typeSelectionChange = (e) => {\n        setBusinessType(e.target.value)\n    }\n\n    const typesSelect = () => {\n        const options = types.map(type =>\n            <option value={type.attributes.logicalPath}>{type.attributes.displayName}</option>\n        )\n\n        return <Form.Control as=\"select\" onChange={typeSelectionChange}>\n            {options}\n        </Form.Control>\n    }\n\n// METHOD\n\n    if(loading){\n        return <WaitingPane/>\n    }\n\n    const form = {...formData}\n    const attributes = {\n\n        // INITIAL_ATTRIBUTES_VALUE\n    }\n    form['attributes'] = attributes;\n\n    return (\n        <div className=\"container-create-root\">\n            <p className=\" form-error\">{errors}</p>\n<Form.Group className=\"field field-string attributes-list\">\n                <Form.Label>Type</Form.Label>\n                {typesSelect()}\n            </Form.Group>\n\n{/*FORM*/}\n            <AttributeListGroup\n                attributesListConfig={attributesList()}\n                data={form}\n                standardFooterActions=\"true\"\n                formMode='create_object'/>\n        </div>\n    )\n}\n\nexport default DemandeAdd;\n\n// FOOTER\n","import React, {useEffect, useState} from 'react';\nimport {AttributeListGroup, PersistenceInfo, WaitingPane, Accordion} from \"_components/_common\";\nimport queryString from 'query-string';\nimport {DemandeService} from \"_services/_generated/Demande.services\";\nimport {commons} from \"_helpers/commons\";\nimport LifecycleAndTypeStatus from \"_components/_common/LifecycleAndTypeStatus\";\nimport {toast} from \"react-toastify\";\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\nimport ContentHolderPrimaryInfo from \"_components/_common/ContentHolder/ContentHolderInfo/ContentHolderPrimaryInfo\";\n\nimport LifecycleManagedActions from '_components/_admin/Lifecycles/LifecycleManagedActions';\nimport LifecycleManagedHistory from \"_components/_admin/Lifecycles/LifecycleManagedHistory/LifecycleManagedHistory\";\nimport {StatusHelper} from \"_helpers/StatusHelper\";\n// IMPORT\n\nfunction DemandeDetails(props)  {\n\n    const[loading, setLoading] = useState(true)\n    const[item, setItem] = useState()\n    const[errors, setErrors] = useState([])\n    // CONST\n\n    const getRootObjectForDetailsId = () => {\n        const queryUrlParams = queryString.parse(props.location.search);\n        let objectforDetailsId = queryUrlParams.rootId;\n        return objectforDetailsId\n    }\n\n    useEffect(() => {\n        refresh()\n    }, [props.location.search]);\n\n    const refresh = () => {\n        var itemId = getRootObjectForDetailsId();\n        loadDatas(itemId)\n    }\n\n    const loadDatas = (itemId) => {\n        setLoading(true)\n        DemandeService.detailsEntity(itemId, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(!error){\n                setItem(response.data)\n            }\n\n            setLoading(false)\n        })\n    }\n\n    const updateDatas = (formData) => {\n        var form = formData;\n        form.containerId = props.containerId;\n\n        var itemId = getRootObjectForDetailsId();\n        DemandeService.updateEntity(itemId, form, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(error) {\n                toast.error(commons.toastError(response));\n                let message = response.errorFamily + ' - ' + response.message\n                setErrors([message])\n            }\n            else {\n                loadDatas(itemId);\n                setErrors([])\n                toast(commons.toastSuccess(\"L'élément a été mis à jour\"));\n                props.refresh()\n            }\n        })\n    }\n\n    // FUNCTIONS\n\n    const headerActions = () => {\n        \n\tconst lifecycleManagedId = item.attributes.id;\n    const currentState = item.attributes?.lifecycleInfo?.currentState;\n    var lifecycleManagedActions = <LifecycleManagedActions\n\t\t\t{...props}\n\t\t\tinlineButtons={true}\n\t\t\tbyActionName='SET_STATE'\n\t\t\trefreshCallBack={refresh}\n\t\t\tlifecycleManagedId={lifecycleManagedId}\n\t\t\tcurrentState={currentState}/>\n\n// ACTIONS VARIABLES\n\n         return <div className=\"btn-toolbar btn-toolbar-right\">\n        \t\t\t{lifecycleManagedActions}\n{/*ACTIONS_BUTTON*/}\n         </div>\n    }\n\n\n    const attributesList = {\n        onSubmit: (formData) => updateDatas(formData),\n        attributes: [\n            {name: \"Titre de la demande\", dataField: \"title\",  required: true,  placeHolder: \"Titre de la demande\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n{name: \"Theme\", dataField: \"theme\",  required: true,  placeHolder: \"Theme\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n{name: \"Description\", dataField: \"description\",  required: true,  placeHolder: \"Description\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n\t\t{name: 'Reference', dataField: 'attributes.number', readOnly: true},\n// DETAILS_ATTRIBUTES_LIST\n        ]\n    }\n\n    if(loading) {\n        return <WaitingPane/>\n    }\n\n    return <div className={'entity-details'}>\n        <div className=\"admin-details-header\">\n            <div style={{display: 'flex', marginBottom: '1rem'}}>\n              <p className=\"page-title\" style={LifecycleStyle}>{item.attributes.name}</p>\n              <LifecycleAndTypeStatus item={item}/>\n            </div>\n            {headerActions()}\n        </div>\n\n        <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-x\" className={\"admin-nav-tabs\"}>\n              <Tab eventKey=\"1\" title=\"Details\">\n                      <div style={{\n                        marginBottom: '2rem',\n                        paddingBottom: '1rem'\n                      }}>\n                          <p className=\" form-error\">{errors}</p>\n                           <AttributeListGroup\n                              canEdit={true}\n                              standardFooterActions=\"true\"\n                              containerId={props.containerId}\n                              attributesListConfig={attributesList}\n                              data={item}/>\n                       </div>\n\n                        <Accordion title={\"Contenu\"}\n                       expanded={false}\n                       content={\n                           <ContentHolderPrimaryInfo\n                                containerId={props.containerId}\n                                contentHolderId={item.attributes.id}\n                                canUpload={true}/>\n                       }/>\n{/*Accordion_1*/}\n                        <Accordion title={\"Metadonnées\"}\n                                    expanded={true}\n                                    content={\n                                        <>\n                                            <PersistenceInfo\n                                                {...props}\n                                                data={item}\n                                                containerId={props.containerId}\n                                                displayHeader={true}/>\n                                        </>\n                        }/>\n                        <Accordion title={\"Historique\"}\n                       expanded={true}\n                       content={ <LifecycleManagedHistory\n                                   {...props}\n                                   item={item}/>\n                       }/>\n\n{/*Accordion_2*/}\n              </Tab>\n              {/*tabs*/}\n        </Tabs>\n    </div>\n\n}\n\nexport default DemandeDetails;\n\nconst LifecycleStyle = {\n    width: '50%'\n}\n\n\n// FOOTER\n","import React, {Component, useEffect, useState} from 'react';\nimport {DataTable, EmptyPane, WaitingPane, Wizard, WizardConfirm} from \"_components/_common\";\nimport DemandeAdd from \"_generated/Demande/DemandeAdd\";\nimport {DemandeService} from \"_services/_generated/Demande.services\";\nimport DemandeDetails from \"_generated/Demande/DemandeDetails\";\nimport {Input} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\nimport queryString from 'query-string';\nimport {coreUri} from '_helpers/CoreUri';\nimport { commons } from '_helpers/commons.js';\nimport {toast} from \"react-toastify\";\n\nimport {DataExportService} from \"_services/DataExport.services\";\nimport FileSaver from \"file-saver\";\nimport {StatusHelper} from \"_helpers/StatusHelper\";\n// IMPORT\n\nfunction DemandeList(props) {\n\n    const[pageSize, setPageSize] = useState(14)\n    const[loading, setLoading] = useState(true)\n    const[datas, setDatas] = useState([])\n    const[page, setPage] = useState(0)\n    const[subviewMode, setSubviewMode] = useState('list')\n    const[metaData, setMetaData] = useState()\n    const[searchTerm, setSearchTerm] = useState()\n\n\n    const runExport = async () => {\n    var form = {}\n    form['separator.char'] = '|'\n    form['comment.char'] = '#'\n    form['domain'] = commons.getWorkingContainerPath(props.userContext)\n    form['container'] = commons.getWorkingContainerPath(props.userContext)\n    form['attach.discarded.file'] = false\n    form['attach.log.file'] = false\n    form['log.file.extension'] = '.log'\n    form['notify.on.error'] = 'false'\n    form['notify.on.success'] = 'false'\n    form['mail.on.success'] = false\n    form['mail.on.error'] = false\n\n    const containerId = props.containerId\n    const exportConfig = await DataExportService.getByInternalName('EXPORT_DEMANDE', containerId).then(response => {\n        return response\n    })\n\n    if(!commons.isRequestError(exportConfig)){\n        const id = exportConfig.data.attributes.id\n        DataExportService.runExport(id, form, containerId).then(response => {\n            if(response.ok) {\n                return response.text()\n            }\n            else {\n                toast.error(\"Echec de l'export des données\")\n            }\n\n            return null;\n        }).then(response => {\n            if(response){\n                var blob = new Blob([response], {type:\"plain/text;charset=UTF-8\"});\n                FileSaver.saveAs(blob, \"Demande.csv\");\n            }\n        }).catch(error => {\n            toast.error(\"Echec de l'export des données\")\n        })\n    }\n    else {\n        toast.error(\"Configuration introuvable pour l'export\")\n    }\n\n}\nconst typeOf =  (v, i) => {\n        return <td width={'20%'} className=\"td-center\">\n           <div className='type-badge-display type-badge-display-inherit'>               {i.businessType?.displayName ? i.businessType.displayName.substring(0,2) : ''}           </div>\n        </td>\n    }\n\n\t\nconst status = (v, i) => {\n        return <td className={'td-center'}  width={'10%'}>\n            <div className=\"table-status\">               {v.lifecycleInfo?.currentState ? StatusHelper.uiDisplay(v.lifecycleInfo.currentState) : ''}            </div>\n        </td>\n    }\n\n// METHOD\n\n    const onCreateSuccess = (wizardCloseFunction) => {\n        wizardCloseFunction()\n        loadDatas(page)\n    }\n\n    const wizardContent = (wizardCloseFunction) => {\n        return <DemandeAdd onCreateSuccess={() => onCreateSuccess(wizardCloseFunction)} {...props}/>\n    }\n\n    useEffect(() => {\n        loadDatas(0)\n    }, [])\n\n    const goToPage = (index) => {\n      loadDatas(index)\n    }\n\n    const refresh = () => {\n        loadDatas(page)\n    }\n\n    const loadDatas = (index) => {\n        setLoading(true)\n        const statusFromUrl = commons.getValueFromUrl('status');\n        const params = {\n          status: statusFromUrl ? statusFromUrl : \"\"\n        }\n        DemandeService.listEntity(index, pageSize, props.containerId, params).then(response => {\n            if(!commons.isRequestError(response)){\n                setPage(index)\n                setDatas(response.data)\n                setSubviewMode('list')\n                setMetaData(response.metaData)\n                setLoading(false)\n             }\n             else {\n                setDatas([])\n                setLoading(false)\n             }\n        })\n\n    }\n\n    const searchTermUpdated = (e) => {\n        setLoading(true)\n        let searchTerm = e.target.value\n        if(searchTerm){\n            DemandeService.searchEntity(0, 10, searchTerm , props.containerId).then(response => {\n                setPage(0)\n                setDatas(response.data)\n                setSubviewMode('search')\n                setMetaData(response.metaData)\n                setSearchTerm(searchTerm)\n                setLoading(false)\n            })\n        }\n        else {\n            loadDatas(0)\n        }\n    }\n\n    const getRootObjectForDetailsId = () => {\n        const queryUrlParams = queryString.parse(props.location.search);\n        let objectforDetailsId = queryUrlParams.rootId;\n        return objectforDetailsId\n    }\n\n    const displayDetails = (e, id) => {\n        if(e) e.preventDefault();\n        let tabName = commons.getValueFromUrl('tab');\n        let view = commons.getValueFromUrl('name');\n        const url = coreUri.backOfficeViewURL(tabName, view, [\"rootId=\" +  id]);\n        props.history.push(url);\n    }\n\n    const deleteRow = (id) => {\n        DemandeService.deleteEntity(id, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(error) {\n                toast.error(commons.toastError(response));\n            }\n            else {\n                loadDatas(page)\n                toast(commons.toastSuccess(\"L'élément a été supprimé\"));\n            }\n        })\n    }\n\n    const deleteRowAction = (id) => {\n        return <>\n            <WizardConfirm\n                buttonIconComp={<i className={'fa fa-trash fa-lg'}></i>}\n                onConfirm={() => deleteRow(id)}\n                dialogMessage=\"Voulez vous supprimer l'élément?\"\n                dialogTitle='Supprimer'\n            />\n        </>\n    }\n\n    // METHOD\n\n    const tableActions = (v, i) => {\n        return <td width={'20%'} className=\"td-right\">\n            <div className=\"btn-toolbar-right table-info-link\">\n                <button onClick={(e) => displayDetails(e, v.id)}>\n                    <i className={'fa fa-info fa-lg'}></i>\n                </button>\n                 {deleteRowAction(v.id)}\n            </div>\n        </td>\n    }\n\n    const itemsDatatableRowItemName = (v, i) => {\n        return <td className={'td-left table-info-link'}>\n            <a href='#/details' onClick={(e) => displayDetails(e, v.id)}>\n                {v.title && v.title.length > 0 ? v.title : \"> Infos\"}\n            </a>\n        </td>\n    }\n\n    const table = () => {\n        if(!datas || datas.length === 0){\n            return <EmptyPane />\n        }\n\n        let tableConfig ={\n            columnsConfig: [\n                {name:'Titre de la demande', displayComponent: (v, i) => itemsDatatableRowItemName(v,i), dataField: 'attributes', headerClass: 'td-left'},\n{name: \"Theme\", dataField: \"attributes.theme\", headerClass: \"td-left\", className: \"td-left\"},\n{name: \"Description\", dataField: \"attributes.description\", headerClass: \"td-left\", className: \"td-left\"},\n{name:'Type', dataField: 'attributes',  displayComponent: (v, i) => typeOf(v,i), headerClass: 'td-center', className: 'td-center'},\n\t{name:'Statut', dataField: 'attributes', displayComponent:(v,i) => status(v,i), headerClass: 'td-center', className: 'td-center'},\n\t\t{name:'Reference', dataField: 'attributes.number', headerClass: 'td-center', className: 'td-center'},\n// DATA_TABLE_ATTRIBUTES_LIST\n                {dataField: 'attributes', displayComponent: (v,i) => tableActions(v,i), headerClass: 'td-left', className: 'td-left'},\n            ],\n        }\n        var datatable = <DataTable items={JSON.stringify(datas)}\n                                       tableConfig={tableConfig}\n                                       pagination={true}\n                                       goToPage={goToPage}\n                                       metaData={JSON.stringify(metaData)}\n                                       displayTotalElements={true}\n                                       paginate={subviewMode === 'list' ? true : false}/>\n\n        return datatable\n    }\n\n\n    let objectforDetailsId = getRootObjectForDetailsId()\n    if(!objectforDetailsId) {\n        var content;\n        if (loading) {\n            content = <WaitingPane/>\n        } else {\n            content = table();\n        }\n\n        return <div className=\"portlet-box\">\n                <div className=\"admin-filters-root\">\n                    <Input type=\"text\"\n                           className=\"admin-hover-input\"\n                           name=\"input1-group2\"\n                           placeholder=\"Chercher un élément\"\n                           autocomplete=\"off\"\n                           onChange={(e) => searchTermUpdated(e)}\n                           defaultValue={searchTerm}/>\n                    <div className=\"btn-toolbar btn-toolbar-right\">\n                        <Wizard buttonTitle={'Ajouter'}\n                                buttonIcon={'fa fa-plus fa-md'}\n                                hideFooter={true}\n                                dialogSize=\"md\"\n                                dialogTitle=\"Ajouter une entité\"\n                                dialogContentProvider={(wizardCloseFunction) => wizardContent(wizardCloseFunction)}/>\n                        <button onClick={runExport}><i className={'fa fa-sm fa-file-excel-o'}></i>&nbsp;Exporter</button>\n{/*ACTIONS*/}\n                        <button onClick={refresh}>Refresh</button>\n                    </div>\n            </div>\n            <div className=\"portlet-content\">\n                {content}\n            </div>\n        </div>\n    }\n    else {\n        return <DemandeDetails {...props} refresh={refresh} forwardToDetailsUrl={null}/>\n    }\n}\n\nexport default DemandeList;\n\n\n// FOOTER\n","import { _doPost,_doGet,_doPut, API_ROOT, _doDelete, buildURLQuery } from '../utils/services.config';\n\nexport const ReplayService = {\n    createEntity,\n    listEntity,\n    updateEntity,\n    updateEntityMaster,\n    deleteEntity,\n    detailsEntity,\n    searchEntity,\n    // EXPORT\n}\n\nasync function createEntity(formData, containerId){\n    const uri = '/katappult/cloud/app/v1/secured/api/replay/create';\n    var url = `${API_ROOT}` + uri + \"?containerId=\" + containerId\n    return _doPost(url, JSON.stringify(formData))\n}\n\nasync function listEntity(page, pageSize, containerId, params){\n    const uri = \"/katappult/cloud/app/v1/secured/api/replay/list?page=\" + page + \"&pageSize=\" + pageSize + \"&containerId=\" + containerId;\n    let url = `${API_ROOT}` + uri;\n    if(params){\n       var p = buildURLQuery(params);\n       url = url + '&' + p;\n    }\n\n    return _doGet(url);\n}\n\nasync function updateEntity(entityId, formdata, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/replay/update\".concat(\"?containerId=\").concat(containerId).concat(\"&entityId=\" + entityId);\n    const url = `${API_ROOT}` + uri;\n    return _doPut(url, formdata);\n}\n\nasync function updateEntityMaster(entityId, formdata, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/replay/updateMaster\".concat(\"?containerId=\").concat(containerId).concat(\"&entityId=\" + entityId);\n    const url = `${API_ROOT}` + uri;\n    return _doPut(url, formdata);\n}\n\nasync function detailsEntity(entityId, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/replay/details?entityId=\" + entityId + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function deleteEntity(entityId, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/replay/delete?entityId=\" + entityId + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doDelete(url);\n}\n\nasync function searchEntity(page, pageSize, searchTerm, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/replay/search?searchTerm=\" + searchTerm+ \"&page=\"  + page + \"&pageSize=\" + pageSize + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\n// FUNCTIONS\n","import React, {useEffect, useState} from 'react';\nimport {AttributeListGroup, WaitingPane} from \"_components/_common\";\nimport {ReplayService} from \"_services/_generated/Replay.services\";\nimport {toast} from \"react-toastify\";\nimport {commons} from \"_helpers/commons\";\n// IMPORT\n\nfunction ReplayAdd(props) {\n\n    const[formData, setFormData] = useState()\n    const[loading, setLoading] = useState(false)\n    const[errors, setErrors] = useState([])\n// CONST\n\n    const findFormErrors = (form) => {\n        const { title,description,mediaType,externalLink,webinarSource/*FORM ERRORS ATTR*/} = form\n        const newErrors = {}\n\nif (!title || title === '') newErrors.title = 'Champs invalide';\nif (!description || description === '') newErrors.description = 'Champs invalide';\nif (!mediaType || mediaType === '') newErrors.mediaType = 'Champs invalide';\nif (!externalLink || externalLink === '') newErrors.externalLink = 'Champs invalide';\nif (!webinarSource || webinarSource === '') newErrors.webinarSource = 'Champs invalide';\n/*FORM ERRORS VALIDATION*/\n        return newErrors;\n    }\n\n    const create = (formData) => {\n        setFormData(formData)\n        setLoading(true)\n\n        formData.containerId = props.containerId;\n// ADDITIONAL_ATTRIBUTES\n\n        ReplayService.createEntity(formData, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(error) {\n                setLoading(false)\n                let message = response.errorFamily + ' - ' + response.message\n                toast.error(commons.toastError(response));\n                setErrors([message])\n            }\n            else {\n                setLoading(false)\n                props.onCreateSuccess();\n                toast(commons.toastSuccess(\"Un élément a été créé\"));\n            }\n        })\n    }\n\n    const attributesList = () => {\n        const attributesList = {\n            saveButtonTitle: 'CRÉER',\n            onSubmit: (formData) => create(formData),\n            formValidity: (formData) => findFormErrors(formData),\n            attributes: [\n{name: \"Titre\", dataField: \"title\",  required: true,  placeHolder: \"Titre\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n{name: \"Description\", dataField: \"description\",  required: true,  placeHolder: \"Description\", type: \"textarea\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n{name: \"MediaType\", dataField: \"mediaType\",  required: true,  placeHolder: \"MediaType\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n{name: \"ExternalLink\", dataField: \"externalLink\",  required: true,  placeHolder: \"ExternalLink\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n{name: \"WebinarSource\", dataField: \"webinarSource\",  required: true,  placeHolder: \"WebinarSource\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n// CREATE_FORM_ATTRIBUTES_LIST\n            ]\n        }\n\n        return attributesList;\n    }\n\n// METHOD\n\n    if(loading){\n        return <WaitingPane/>\n    }\n\n    const form = {...formData}\n    const attributes = {\n\n        // INITIAL_ATTRIBUTES_VALUE\n    }\n    form['attributes'] = attributes;\n\n    return (\n        <div className=\"container-create-root\">\n            <p className=\" form-error\">{errors}</p>\n{/*FORM*/}\n            <AttributeListGroup\n                attributesListConfig={attributesList()}\n                data={form}\n                standardFooterActions=\"true\"\n                formMode='create_object'/>\n        </div>\n    )\n}\n\nexport default ReplayAdd;\n\n// FOOTER\n","import React, {useEffect, useState} from 'react';\nimport {AttributeListGroup, PersistenceInfo, WaitingPane, Accordion} from \"_components/_common\";\nimport queryString from 'query-string';\nimport {ReplayService} from \"_services/_generated/Replay.services\";\nimport {commons} from \"_helpers/commons\";\nimport LifecycleAndTypeStatus from \"_components/_common/LifecycleAndTypeStatus\";\nimport {toast} from \"react-toastify\";\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\n// IMPORT\n\nfunction ReplayDetails(props)  {\n\n    const[loading, setLoading] = useState(true)\n    const[item, setItem] = useState()\n    const[errors, setErrors] = useState([])\n    // CONST\n\n    const getRootObjectForDetailsId = () => {\n        const queryUrlParams = queryString.parse(props.location.search);\n        let objectforDetailsId = queryUrlParams.rootId;\n        return objectforDetailsId\n    }\n\n    useEffect(() => {\n        refresh()\n    }, [props.location.search]);\n\n    const refresh = () => {\n        var itemId = getRootObjectForDetailsId();\n        loadDatas(itemId)\n    }\n\n    const loadDatas = (itemId) => {\n        setLoading(true)\n        ReplayService.detailsEntity(itemId, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(!error){\n                setItem(response.data)\n            }\n\n            setLoading(false)\n        })\n    }\n\n    const updateDatas = (formData) => {\n        var form = formData;\n        form.containerId = props.containerId;\n\n        var itemId = getRootObjectForDetailsId();\n        ReplayService.updateEntity(itemId, form, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(error) {\n                toast.error(commons.toastError(response));\n                let message = response.errorFamily + ' - ' + response.message\n                setErrors([message])\n            }\n            else {\n                loadDatas(itemId);\n                setErrors([])\n                toast(commons.toastSuccess(\"L'élément a été mis à jour\"));\n                props.refresh()\n            }\n        })\n    }\n\n    // FUNCTIONS\n\n    const headerActions = () => {\n        // ACTIONS VARIABLES\n\n         return <div className=\"btn-toolbar btn-toolbar-right\">\n        {/*ACTIONS_BUTTON*/}\n         </div>\n    }\n\n\n    const attributesList = {\n        onSubmit: (formData) => updateDatas(formData),\n        attributes: [\n            {name: \"Titre\", dataField: \"title\",  required: true,  placeHolder: \"Titre\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n{name: \"Description\", dataField: \"description\",  required: true,  placeHolder: \"Description\", type: \"textarea\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n{name: \"MediaType\", dataField: \"mediaType\",  required: true,  placeHolder: \"MediaType\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n{name: \"ExternalLink\", dataField: \"externalLink\",  required: true,  placeHolder: \"ExternalLink\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n{name: \"WebinarSource\", dataField: \"webinarSource\",  required: true,  placeHolder: \"WebinarSource\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n// DETAILS_ATTRIBUTES_LIST\n        ]\n    }\n\n    if(loading) {\n        return <WaitingPane/>\n    }\n\n    return <div className={'entity-details'}>\n        <div className=\"admin-details-header\">\n            <div style={{display: 'flex', marginBottom: '1rem'}}>\n              <p className=\"page-title\" style={LifecycleStyle}>{item.attributes.name}</p>\n              <LifecycleAndTypeStatus item={item}/>\n            </div>\n            {headerActions()}\n        </div>\n\n        <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-x\" className={\"admin-nav-tabs\"}>\n              <Tab eventKey=\"1\" title=\"Details\">\n                      <div style={{\n                        marginBottom: '2rem',\n                        paddingBottom: '1rem'\n                      }}>\n                          <p className=\" form-error\">{errors}</p>\n                           <AttributeListGroup\n                              canEdit={true}\n                              standardFooterActions=\"true\"\n                              containerId={props.containerId}\n                              attributesListConfig={attributesList}\n                              data={item}/>\n                       </div>\n\n                       {/*Accordion_1*/}\n                        <Accordion title={\"Metadonnées\"}\n                                    expanded={true}\n                                    content={\n                                        <>\n                                            <PersistenceInfo\n                                                {...props}\n                                                data={item}\n                                                containerId={props.containerId}\n                                                displayHeader={true}/>\n                                        </>\n                        }/>\n                        {/*Accordion_2*/}\n              </Tab>\n              {/*tabs*/}\n        </Tabs>\n    </div>\n\n}\n\nexport default ReplayDetails;\n\nconst LifecycleStyle = {\n    width: '50%'\n}\n\n\n// FOOTER\n","import React, {Component, useEffect, useState} from 'react';\nimport {DataTable, EmptyPane, WaitingPane, Wizard, WizardConfirm} from \"_components/_common\";\nimport ReplayAdd from \"_generated/Replay/ReplayAdd\";\nimport {ReplayService} from \"_services/_generated/Replay.services\";\nimport ReplayDetails from \"_generated/Replay/ReplayDetails\";\nimport {Input} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\nimport queryString from 'query-string';\nimport {coreUri} from '_helpers/CoreUri';\nimport { commons } from '_helpers/commons.js';\nimport {toast} from \"react-toastify\";\n\nimport {DataExportService} from \"_services/DataExport.services\";\nimport FileSaver from \"file-saver\";\n// IMPORT\n\nfunction ReplayList(props) {\n\n    const[pageSize, setPageSize] = useState(14)\n    const[loading, setLoading] = useState(true)\n    const[datas, setDatas] = useState([])\n    const[page, setPage] = useState(0)\n    const[subviewMode, setSubviewMode] = useState('list')\n    const[metaData, setMetaData] = useState()\n    const[searchTerm, setSearchTerm] = useState()\n\n\n    const runExport = async () => {\n    var form = {}\n    form['separator.char'] = '|'\n    form['comment.char'] = '#'\n    form['domain'] = commons.getWorkingContainerPath(props.userContext)\n    form['container'] = commons.getWorkingContainerPath(props.userContext)\n    form['attach.discarded.file'] = false\n    form['attach.log.file'] = false\n    form['log.file.extension'] = '.log'\n    form['notify.on.error'] = 'false'\n    form['notify.on.success'] = 'false'\n    form['mail.on.success'] = false\n    form['mail.on.error'] = false\n\n    const containerId = props.containerId\n    const exportConfig = await DataExportService.getByInternalName('EXPORT_REPLAY', containerId).then(response => {\n        return response\n    })\n\n    if(!commons.isRequestError(exportConfig)){\n        const id = exportConfig.data.attributes.id\n        DataExportService.runExport(id, form, containerId).then(response => {\n            if(response.ok) {\n                return response.text()\n            }\n            else {\n                toast.error(\"Echec de l'export des données\")\n            }\n\n            return null;\n        }).then(response => {\n            if(response){\n                var blob = new Blob([response], {type:\"plain/text;charset=UTF-8\"});\n                FileSaver.saveAs(blob, \"Replay.csv\");\n            }\n        }).catch(error => {\n            toast.error(\"Echec de l'export des données\")\n        })\n    }\n    else {\n        toast.error(\"Configuration introuvable pour l'export\")\n    }\n\n}\n// METHOD\n\n    const onCreateSuccess = (wizardCloseFunction) => {\n        wizardCloseFunction()\n        loadDatas(page)\n    }\n\n    const wizardContent = (wizardCloseFunction) => {\n        return <ReplayAdd onCreateSuccess={() => onCreateSuccess(wizardCloseFunction)} {...props}/>\n    }\n\n    useEffect(() => {\n        loadDatas(0)\n    }, [])\n\n    const goToPage = (index) => {\n      loadDatas(index)\n    }\n\n    const refresh = () => {\n        loadDatas(page)\n    }\n\n    const loadDatas = (index) => {\n        setLoading(true)\n        const statusFromUrl = commons.getValueFromUrl('status');\n        const params = {\n          status: statusFromUrl ? statusFromUrl : \"\"\n        }\n        ReplayService.listEntity(index, pageSize, props.containerId, params).then(response => {\n            if(!commons.isRequestError(response)){\n                setPage(index)\n                setDatas(response.data)\n                setSubviewMode('list')\n                setMetaData(response.metaData)\n                setLoading(false)\n             }\n             else {\n                setDatas([])\n                setLoading(false)\n             }\n        })\n\n    }\n\n    const searchTermUpdated = (e) => {\n        setLoading(true)\n        let searchTerm = e.target.value\n        if(searchTerm){\n            ReplayService.searchEntity(0, 10, searchTerm , props.containerId).then(response => {\n                setPage(0)\n                setDatas(response.data)\n                setSubviewMode('search')\n                setMetaData(response.metaData)\n                setSearchTerm(searchTerm)\n                setLoading(false)\n            })\n        }\n        else {\n            loadDatas(0)\n        }\n    }\n\n    const getRootObjectForDetailsId = () => {\n        const queryUrlParams = queryString.parse(props.location.search);\n        let objectforDetailsId = queryUrlParams.rootId;\n        return objectforDetailsId\n    }\n\n    const displayDetails = (e, id) => {\n        if(e) e.preventDefault();\n        let tabName = commons.getValueFromUrl('tab');\n        let view = commons.getValueFromUrl('name');\n        const url = coreUri.backOfficeViewURL(tabName, view, [\"rootId=\" +  id]);\n        props.history.push(url);\n    }\n\n    const deleteRow = (id) => {\n        ReplayService.deleteEntity(id, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(error) {\n                toast.error(commons.toastError(response));\n            }\n            else {\n                loadDatas(page)\n                toast(commons.toastSuccess(\"L'élément a été supprimé\"));\n            }\n        })\n    }\n\n    const deleteRowAction = (id) => {\n        return <>\n            <WizardConfirm\n                buttonIconComp={<i className={'fa fa-trash fa-lg'}></i>}\n                onConfirm={() => deleteRow(id)}\n                dialogMessage=\"Voulez vous supprimer l'élément?\"\n                dialogTitle='Supprimer'\n            />\n        </>\n    }\n\n    // METHOD\n\n    const tableActions = (v, i) => {\n        return <td width={'20%'} className=\"td-right\">\n            <div className=\"btn-toolbar-right table-info-link\">\n                <button onClick={(e) => displayDetails(e, v.id)}>\n                    <i className={'fa fa-info fa-lg'}></i>\n                </button>\n                 {deleteRowAction(v.id)}\n            </div>\n        </td>\n    }\n\n    const itemsDatatableRowItemName = (v, i) => {\n        return <td className={'td-left table-info-link'}>\n            <a href='#/details' onClick={(e) => displayDetails(e, v.id)}>\n                {v.title && v.title.length > 0 ? v.title : \"> Infos\"}\n            </a>\n        </td>\n    }\n\n    const table = () => {\n        if(!datas || datas.length === 0){\n            return <EmptyPane />\n        }\n\n        let tableConfig ={\n            columnsConfig: [\n                {name:'Titre', displayComponent: (v, i) => itemsDatatableRowItemName(v,i), dataField: 'attributes', headerClass: 'td-left'},\n{name: \"Description\", dataField: \"attributes.description\", type: \"textarea\", headerClass: \"td-left\", className: \"td-left\"},\n{name: \"MediaType\", dataField: \"attributes.mediaType\", headerClass: \"td-left\", className: \"td-left\"},\n{name: \"ExternalLink\", dataField: \"attributes.externalLink\", headerClass: \"td-left\", className: \"td-left\"},\n{name: \"WebinarSource\", dataField: \"attributes.webinarSource\", headerClass: \"td-left\", className: \"td-left\"},\n// DATA_TABLE_ATTRIBUTES_LIST\n                {dataField: 'attributes', displayComponent: (v,i) => tableActions(v,i), headerClass: 'td-left', className: 'td-left'},\n            ],\n        }\n        var datatable = <DataTable items={JSON.stringify(datas)}\n                                       tableConfig={tableConfig}\n                                       pagination={true}\n                                       goToPage={goToPage}\n                                       metaData={JSON.stringify(metaData)}\n                                       displayTotalElements={true}\n                                       paginate={subviewMode === 'list' ? true : false}/>\n\n        return datatable\n    }\n\n\n    let objectforDetailsId = getRootObjectForDetailsId()\n    if(!objectforDetailsId) {\n        var content;\n        if (loading) {\n            content = <WaitingPane/>\n        } else {\n            content = table();\n        }\n\n        return <div className=\"portlet-box\">\n                <div className=\"admin-filters-root\">\n                    <Input type=\"text\"\n                           className=\"admin-hover-input\"\n                           name=\"input1-group2\"\n                           placeholder=\"Chercher un élément\"\n                           autocomplete=\"off\"\n                           onChange={(e) => searchTermUpdated(e)}\n                           defaultValue={searchTerm}/>\n                    <div className=\"btn-toolbar btn-toolbar-right\">\n                        <Wizard buttonTitle={'Ajouter'}\n                                buttonIcon={'fa fa-plus fa-md'}\n                                hideFooter={true}\n                                dialogSize=\"md\"\n                                dialogTitle=\"Ajouter une entité\"\n                                dialogContentProvider={(wizardCloseFunction) => wizardContent(wizardCloseFunction)}/>\n                        <button onClick={runExport}><i className={'fa fa-sm fa-file-excel-o'}></i>&nbsp;Exporter</button>\n{/*ACTIONS*/}\n                        <button onClick={refresh}>Refresh</button>\n                    </div>\n            </div>\n            <div className=\"portlet-content\">\n                {content}\n            </div>\n        </div>\n    }\n    else {\n        return <ReplayDetails {...props} refresh={refresh} forwardToDetailsUrl={null}/>\n    }\n}\n\nexport default ReplayList;\n\n\n// FOOTER\n","import { _doPost,_doGet,_doPut, API_ROOT, _doDelete, buildURLQuery } from '../utils/services.config';\n\nexport const WebinarService = {\n    createEntity,\n    listEntity,\n    updateEntity,\n    updateEntityMaster,\n    deleteEntity,\n    detailsEntity,\n    searchEntity,\n    // EXPORT\n}\n\nasync function createEntity(formData, containerId){\n    const uri = '/katappult/cloud/app/v1/secured/api/webinar/create';\n    var url = `${API_ROOT}` + uri + \"?containerId=\" + containerId\n    return _doPost(url, JSON.stringify(formData))\n}\n\nasync function listEntity(page, pageSize, containerId, params){\n    const uri = \"/katappult/cloud/app/v1/secured/api/webinar/list?page=\" + page + \"&pageSize=\" + pageSize + \"&containerId=\" + containerId;\n    let url = `${API_ROOT}` + uri;\n    if(params){\n       var p = buildURLQuery(params);\n       url = url + '&' + p;\n    }\n\n    return _doGet(url);\n}\n\nasync function updateEntity(entityId, formdata, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/webinar/update\".concat(\"?containerId=\").concat(containerId).concat(\"&entityId=\" + entityId);\n    const url = `${API_ROOT}` + uri;\n    return _doPut(url, formdata);\n}\n\nasync function updateEntityMaster(entityId, formdata, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/webinar/updateMaster\".concat(\"?containerId=\").concat(containerId).concat(\"&entityId=\" + entityId);\n    const url = `${API_ROOT}` + uri;\n    return _doPut(url, formdata);\n}\n\nasync function detailsEntity(entityId, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/webinar/details?entityId=\" + entityId + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function deleteEntity(entityId, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/webinar/delete?entityId=\" + entityId + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doDelete(url);\n}\n\nasync function searchEntity(page, pageSize, searchTerm, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/webinar/search?searchTerm=\" + searchTerm+ \"&page=\"  + page + \"&pageSize=\" + pageSize + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\n// FUNCTIONS\n","import React, {useEffect, useState} from 'react';\nimport {AttributeListGroup, WaitingPane} from \"_components/_common\";\nimport {WebinarService} from \"_services/_generated/Webinar.services\";\nimport {toast} from \"react-toastify\";\nimport {commons} from \"_helpers/commons\";\nimport {typeService} from \"_services/type.services\";\nimport Form from \"react-bootstrap/Form\";\n// IMPORT\n\nfunction WebinarAdd(props) {\n\n    const[formData, setFormData] = useState()\n    const[loading, setLoading] = useState(false)\n    const[errors, setErrors] = useState([])\nconst[types, setTypes] = useState([])\n    const[businessType, setBusinessType] = useState('com.katappult.online.types.WebinarType')\n// CONST\n\n    const findFormErrors = (form) => {\n        const { title,description,category,dateDePlanification/*FORM ERRORS ATTR*/} = form\n        const newErrors = {}\n\nif (!title || title === '') newErrors.title = 'Champs invalide';\nif (!description || description === '') newErrors.description = 'Champs invalide';\nif (!category || category === '') newErrors.category = 'Champs invalide';\nif (!dateDePlanification || dateDePlanification === '') newErrors.dateDePlanification = 'Champs invalide';\n/*FORM ERRORS VALIDATION*/\n        return newErrors;\n    }\n\n    const create = (formData) => {\n        setFormData(formData)\n        setLoading(true)\n\n        formData.containerId = props.containerId;\nformData.businessType = businessType// ADDITIONAL_ATTRIBUTES\n\n        WebinarService.createEntity(formData, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(error) {\n                setLoading(false)\n                let message = response.errorFamily + ' - ' + response.message\n                toast.error(commons.toastError(response));\n                setErrors([message])\n            }\n            else {\n                setLoading(false)\n                props.onCreateSuccess();\n                toast(commons.toastSuccess(\"Un élément a été créé\"));\n            }\n        })\n    }\n\n    const attributesList = () => {\n        const attributesList = {\n            saveButtonTitle: 'CRÉER',\n            onSubmit: (formData) => create(formData),\n            formValidity: (formData) => findFormErrors(formData),\n            attributes: [\n{name: \"Titre\", dataField: \"title\",  required: true,  placeHolder: \"Titre\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n{name: \"Description\", dataField: \"description\",  required: true,  placeHolder: \"Description\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n{name: \"Category\", dataField: \"category\",  required: true,  placeHolder: \"Category\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n{name: \"Date De Planification\", dataField: \"dateDePlanification\", required: true, placeHolder: \"Date De Planification\", type: \"date\", dateFormat: \"DD/MM/YYYY\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n// CREATE_FORM_ATTRIBUTES_LIST\n            ]\n        }\n\n        return attributesList;\n    }\n\nuseEffect(() => {\n        const rootType = businessType\n        const containerId = props.containerId\n        typeService.getByPath(rootType, containerId).then(response => {\n            const id = response.data.attributes.id\n            const firstElement = [response.data]\n            typeService.getSubtypeOf(id, true, containerId).then(types => {\n                const typeDatas = types.data\n                setTypes(firstElement.concat(typeDatas))\n                setBusinessType(rootType)\n            })\n        })\n    }, [])\n\n    const typeSelectionChange = (e) => {\n        setBusinessType(e.target.value)\n    }\n\n    const typesSelect = () => {\n        const options = types.map(type =>\n            <option value={type.attributes.logicalPath}>{type.attributes.displayName}</option>\n        )\n\n        return <Form.Control as=\"select\" onChange={typeSelectionChange}>\n            {options}\n        </Form.Control>\n    }\n\n// METHOD\n\n    if(loading){\n        return <WaitingPane/>\n    }\n\n    const form = {...formData}\n    const attributes = {\n\n        // INITIAL_ATTRIBUTES_VALUE\n    }\n    form['attributes'] = attributes;\n\n    return (\n        <div className=\"container-create-root\">\n            <p className=\" form-error\">{errors}</p>\n<Form.Group className=\"field field-string attributes-list\">\n                <Form.Label>Type</Form.Label>\n                {typesSelect()}\n            </Form.Group>\n\n{/*FORM*/}\n            <AttributeListGroup\n                attributesListConfig={attributesList()}\n                data={form}\n                standardFooterActions=\"true\"\n                formMode='create_object'/>\n        </div>\n    )\n}\n\nexport default WebinarAdd;\n\n// FOOTER\n","import React, {useEffect, useState} from 'react';\nimport {AttributeListGroup, PersistenceInfo, WaitingPane, Accordion} from \"_components/_common\";\nimport queryString from 'query-string';\nimport {WebinarService} from \"_services/_generated/Webinar.services\";\nimport {commons} from \"_helpers/commons\";\nimport LifecycleAndTypeStatus from \"_components/_common/LifecycleAndTypeStatus\";\nimport {toast} from \"react-toastify\";\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\n\nimport LifecycleManagedActions from '_components/_admin/Lifecycles/LifecycleManagedActions';\nimport LifecycleManagedHistory from \"_components/_admin/Lifecycles/LifecycleManagedHistory/LifecycleManagedHistory\";\nimport {StatusHelper} from \"_helpers/StatusHelper\";\n// IMPORT\n\nfunction WebinarDetails(props)  {\n\n    const[loading, setLoading] = useState(true)\n    const[item, setItem] = useState()\n    const[errors, setErrors] = useState([])\n    // CONST\n\n    const getRootObjectForDetailsId = () => {\n        const queryUrlParams = queryString.parse(props.location.search);\n        let objectforDetailsId = queryUrlParams.rootId;\n        return objectforDetailsId\n    }\n\n    useEffect(() => {\n        refresh()\n    }, [props.location.search]);\n\n    const refresh = () => {\n        var itemId = getRootObjectForDetailsId();\n        loadDatas(itemId)\n    }\n\n    const loadDatas = (itemId) => {\n        setLoading(true)\n        WebinarService.detailsEntity(itemId, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(!error){\n                setItem(response.data)\n            }\n\n            setLoading(false)\n        })\n    }\n\n    const updateDatas = (formData) => {\n        var form = formData;\n        form.containerId = props.containerId;\n\n        var itemId = getRootObjectForDetailsId();\n        WebinarService.updateEntity(itemId, form, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(error) {\n                toast.error(commons.toastError(response));\n                let message = response.errorFamily + ' - ' + response.message\n                setErrors([message])\n            }\n            else {\n                loadDatas(itemId);\n                setErrors([])\n                toast(commons.toastSuccess(\"L'élément a été mis à jour\"));\n                props.refresh()\n            }\n        })\n    }\n\n    // FUNCTIONS\n\n    const headerActions = () => {\n        \n\tconst lifecycleManagedId = item.attributes.id;\n    const currentState = item.attributes?.lifecycleInfo?.currentState;\n    var lifecycleManagedActions = <LifecycleManagedActions\n\t\t\t{...props}\n\t\t\tinlineButtons={true}\n\t\t\tbyActionName='SET_STATE'\n\t\t\trefreshCallBack={refresh}\n\t\t\tlifecycleManagedId={lifecycleManagedId}\n\t\t\tcurrentState={currentState}/>\n\n// ACTIONS VARIABLES\n\n         return <div className=\"btn-toolbar btn-toolbar-right\">\n        \t\t\t{lifecycleManagedActions}\n{/*ACTIONS_BUTTON*/}\n         </div>\n    }\n\n\n    const attributesList = {\n        onSubmit: (formData) => updateDatas(formData),\n        attributes: [\n            {name: \"Titre\", dataField: \"title\",  required: true,  placeHolder: \"Titre\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n{name: \"Description\", dataField: \"description\",  required: true,  placeHolder: \"Description\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n{name: \"Category\", dataField: \"category\",  required: true,  placeHolder: \"Category\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n{name: \"Date De Planification\", dataField: \"dateDePlanification\", required: true, placeHolder: \"Date De Planification\", type: \"date\", dateFormat: \"DD/MM/YYYY\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n// DETAILS_ATTRIBUTES_LIST\n        ]\n    }\n\n    if(loading) {\n        return <WaitingPane/>\n    }\n\n    return <div className={'entity-details'}>\n        <div className=\"admin-details-header\">\n            <div style={{display: 'flex', marginBottom: '1rem'}}>\n              <p className=\"page-title\" style={LifecycleStyle}>{item.attributes.name}</p>\n              <LifecycleAndTypeStatus item={item}/>\n            </div>\n            {headerActions()}\n        </div>\n\n        <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-x\" className={\"admin-nav-tabs\"}>\n              <Tab eventKey=\"1\" title=\"Details\">\n                      <div style={{\n                        marginBottom: '2rem',\n                        paddingBottom: '1rem'\n                      }}>\n                          <p className=\" form-error\">{errors}</p>\n                           <AttributeListGroup\n                              canEdit={true}\n                              standardFooterActions=\"true\"\n                              containerId={props.containerId}\n                              attributesListConfig={attributesList}\n                              data={item}/>\n                       </div>\n\n                       {/*Accordion_1*/}\n                        <Accordion title={\"Metadonnées\"}\n                                    expanded={true}\n                                    content={\n                                        <>\n                                            <PersistenceInfo\n                                                {...props}\n                                                data={item}\n                                                containerId={props.containerId}\n                                                displayHeader={true}/>\n                                        </>\n                        }/>\n                        <Accordion title={\"Historique\"}\n                       expanded={true}\n                       content={ <LifecycleManagedHistory\n                                   {...props}\n                                   item={item}/>\n                       }/>\n\n{/*Accordion_2*/}\n              </Tab>\n              {/*tabs*/}\n        </Tabs>\n    </div>\n\n}\n\nexport default WebinarDetails;\n\nconst LifecycleStyle = {\n    width: '50%'\n}\n\n\n// FOOTER\n","import React, {Component, useEffect, useState} from 'react';\nimport {DataTable, EmptyPane, WaitingPane, Wizard, WizardConfirm} from \"_components/_common\";\nimport WebinarAdd from \"_generated/Webinar/WebinarAdd\";\nimport {WebinarService} from \"_services/_generated/Webinar.services\";\nimport WebinarDetails from \"_generated/Webinar/WebinarDetails\";\nimport {Input} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\nimport queryString from 'query-string';\nimport {coreUri} from '_helpers/CoreUri';\nimport { commons } from '_helpers/commons.js';\nimport {toast} from \"react-toastify\";\n\nimport {DataExportService} from \"_services/DataExport.services\";\nimport FileSaver from \"file-saver\";\nimport {StatusHelper} from \"_helpers/StatusHelper\";\n// IMPORT\n\nfunction WebinarList(props) {\n\n    const[pageSize, setPageSize] = useState(14)\n    const[loading, setLoading] = useState(true)\n    const[datas, setDatas] = useState([])\n    const[page, setPage] = useState(0)\n    const[subviewMode, setSubviewMode] = useState('list')\n    const[metaData, setMetaData] = useState()\n    const[searchTerm, setSearchTerm] = useState()\n\n\n    const runExport = async () => {\n    var form = {}\n    form['separator.char'] = '|'\n    form['comment.char'] = '#'\n    form['domain'] = commons.getWorkingContainerPath(props.userContext)\n    form['container'] = commons.getWorkingContainerPath(props.userContext)\n    form['attach.discarded.file'] = false\n    form['attach.log.file'] = false\n    form['log.file.extension'] = '.log'\n    form['notify.on.error'] = 'false'\n    form['notify.on.success'] = 'false'\n    form['mail.on.success'] = false\n    form['mail.on.error'] = false\n\n    const containerId = props.containerId\n    const exportConfig = await DataExportService.getByInternalName('EXPORT_WEBINAR', containerId).then(response => {\n        return response\n    })\n\n    if(!commons.isRequestError(exportConfig)){\n        const id = exportConfig.data.attributes.id\n        DataExportService.runExport(id, form, containerId).then(response => {\n            if(response.ok) {\n                return response.text()\n            }\n            else {\n                toast.error(\"Echec de l'export des données\")\n            }\n\n            return null;\n        }).then(response => {\n            if(response){\n                var blob = new Blob([response], {type:\"plain/text;charset=UTF-8\"});\n                FileSaver.saveAs(blob, \"Webinar.csv\");\n            }\n        }).catch(error => {\n            toast.error(\"Echec de l'export des données\")\n        })\n    }\n    else {\n        toast.error(\"Configuration introuvable pour l'export\")\n    }\n\n}\nconst typeOf =  (v, i) => {\n        return <td width={'20%'} className=\"td-center\">\n           <div className='type-badge-display type-badge-display-inherit'>               {i.businessType?.displayName ? i.businessType.displayName.substring(0,2) : ''}           </div>\n        </td>\n    }\n\n\t\nconst status = (v, i) => {\n        return <td className={'td-center'}  width={'10%'}>\n            <div className=\"table-status\">               {v.lifecycleInfo?.currentState ? StatusHelper.uiDisplay(v.lifecycleInfo.currentState) : ''}            </div>\n        </td>\n    }\n\n// METHOD\n\n    const onCreateSuccess = (wizardCloseFunction) => {\n        wizardCloseFunction()\n        loadDatas(page)\n    }\n\n    const wizardContent = (wizardCloseFunction) => {\n        return <WebinarAdd onCreateSuccess={() => onCreateSuccess(wizardCloseFunction)} {...props}/>\n    }\n\n    useEffect(() => {\n        loadDatas(0)\n    }, [])\n\n    const goToPage = (index) => {\n      loadDatas(index)\n    }\n\n    const refresh = () => {\n        loadDatas(page)\n    }\n\n    const loadDatas = (index) => {\n        setLoading(true)\n        const statusFromUrl = commons.getValueFromUrl('status');\n        const params = {\n          status: statusFromUrl ? statusFromUrl : \"\"\n        }\n        WebinarService.listEntity(index, pageSize, props.containerId, params).then(response => {\n            if(!commons.isRequestError(response)){\n                setPage(index)\n                setDatas(response.data)\n                setSubviewMode('list')\n                setMetaData(response.metaData)\n                setLoading(false)\n             }\n             else {\n                setDatas([])\n                setLoading(false)\n             }\n        })\n\n    }\n\n    const searchTermUpdated = (e) => {\n        setLoading(true)\n        let searchTerm = e.target.value\n        if(searchTerm){\n            WebinarService.searchEntity(0, 10, searchTerm , props.containerId).then(response => {\n                setPage(0)\n                setDatas(response.data)\n                setSubviewMode('search')\n                setMetaData(response.metaData)\n                setSearchTerm(searchTerm)\n                setLoading(false)\n            })\n        }\n        else {\n            loadDatas(0)\n        }\n    }\n\n    const getRootObjectForDetailsId = () => {\n        const queryUrlParams = queryString.parse(props.location.search);\n        let objectforDetailsId = queryUrlParams.rootId;\n        return objectforDetailsId\n    }\n\n    const displayDetails = (e, id) => {\n        if(e) e.preventDefault();\n        let tabName = commons.getValueFromUrl('tab');\n        let view = commons.getValueFromUrl('name');\n        const url = coreUri.backOfficeViewURL(tabName, view, [\"rootId=\" +  id]);\n        props.history.push(url);\n    }\n\n    const deleteRow = (id) => {\n        WebinarService.deleteEntity(id, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(error) {\n                toast.error(commons.toastError(response));\n            }\n            else {\n                loadDatas(page)\n                toast(commons.toastSuccess(\"L'élément a été supprimé\"));\n            }\n        })\n    }\n\n    const deleteRowAction = (id) => {\n        return <>\n            <WizardConfirm\n                buttonIconComp={<i className={'fa fa-trash fa-lg'}></i>}\n                onConfirm={() => deleteRow(id)}\n                dialogMessage=\"Voulez vous supprimer l'élément?\"\n                dialogTitle='Supprimer'\n            />\n        </>\n    }\n\n    // METHOD\n\n    const tableActions = (v, i) => {\n        return <td width={'20%'} className=\"td-right\">\n            <div className=\"btn-toolbar-right table-info-link\">\n                <button onClick={(e) => displayDetails(e, v.id)}>\n                    <i className={'fa fa-info fa-lg'}></i>\n                </button>\n                 {deleteRowAction(v.id)}\n            </div>\n        </td>\n    }\n\n    const itemsDatatableRowItemName = (v, i) => {\n        return <td className={'td-left table-info-link'}>\n            <a href='#/details' onClick={(e) => displayDetails(e, v.id)}>\n                {v.title && v.title.length > 0 ? v.title : \"> Infos\"}\n            </a>\n        </td>\n    }\n\n    const table = () => {\n        if(!datas || datas.length === 0){\n            return <EmptyPane />\n        }\n\n        let tableConfig ={\n            columnsConfig: [\n                {name:'Titre', displayComponent: (v, i) => itemsDatatableRowItemName(v,i), dataField: 'attributes', headerClass: 'td-left'},\n{name: \"Description\", dataField: \"attributes.description\", headerClass: \"td-left\", className: \"td-left\"},\n{name: \"Category\", dataField: \"attributes.category\", headerClass: \"td-left\", className: \"td-left\"},\n{name: \"Date De Planification\", dataField: \"attributes.dateDePlanification\", type: \"date\", dateFormat: \"DD/MM/YYYY\", headerClass: \"td-left\", className: \"td-left\"},\n{name:'Type', dataField: 'attributes',  displayComponent: (v, i) => typeOf(v,i), headerClass: 'td-center', className: 'td-center'},\n\t{name:'Statut', dataField: 'attributes', displayComponent:(v,i) => status(v,i), headerClass: 'td-center', className: 'td-center'},\n// DATA_TABLE_ATTRIBUTES_LIST\n                {dataField: 'attributes', displayComponent: (v,i) => tableActions(v,i), headerClass: 'td-left', className: 'td-left'},\n            ],\n        }\n        var datatable = <DataTable items={JSON.stringify(datas)}\n                                       tableConfig={tableConfig}\n                                       pagination={true}\n                                       goToPage={goToPage}\n                                       metaData={JSON.stringify(metaData)}\n                                       displayTotalElements={true}\n                                       paginate={subviewMode === 'list' ? true : false}/>\n\n        return datatable\n    }\n\n\n    let objectforDetailsId = getRootObjectForDetailsId()\n    if(!objectforDetailsId) {\n        var content;\n        if (loading) {\n            content = <WaitingPane/>\n        } else {\n            content = table();\n        }\n\n        return <div className=\"portlet-box\">\n                <div className=\"admin-filters-root\">\n                    <Input type=\"text\"\n                           className=\"admin-hover-input\"\n                           name=\"input1-group2\"\n                           placeholder=\"Chercher un élément\"\n                           autocomplete=\"off\"\n                           onChange={(e) => searchTermUpdated(e)}\n                           defaultValue={searchTerm}/>\n                    <div className=\"btn-toolbar btn-toolbar-right\">\n                        <Wizard buttonTitle={'Ajouter'}\n                                buttonIcon={'fa fa-plus fa-md'}\n                                hideFooter={true}\n                                dialogSize=\"md\"\n                                dialogTitle=\"Ajouter une entité\"\n                                dialogContentProvider={(wizardCloseFunction) => wizardContent(wizardCloseFunction)}/>\n                        <button onClick={runExport}><i className={'fa fa-sm fa-file-excel-o'}></i>&nbsp;Exporter</button>\n{/*ACTIONS*/}\n                        <button onClick={refresh}>Refresh</button>\n                    </div>\n            </div>\n            <div className=\"portlet-content\">\n                {content}\n            </div>\n        </div>\n    }\n    else {\n        return <WebinarDetails {...props} refresh={refresh} forwardToDetailsUrl={null}/>\n    }\n}\n\nexport default WebinarList;\n\n\n// FOOTER\n","import { _doPost,_doGet,_doPut, API_ROOT, _doDelete, buildURLQuery } from '../utils/services.config';\n\nexport const ExpertCategoryService = {\n    createEntity,\n    listEntity,\n    updateEntity,\n    updateEntityMaster,\n    deleteEntity,\n    detailsEntity,\n    searchEntity,\n    // EXPORT\n}\n\nasync function createEntity(formData, containerId){\n    const uri = '/katappult/cloud/app/v1/secured/api/expertcategory/create';\n    var url = `${API_ROOT}` + uri + \"?containerId=\" + containerId\n    return _doPost(url, JSON.stringify(formData))\n}\n\nasync function listEntity(page, pageSize, containerId, params){\n    const uri = \"/katappult/cloud/app/v1/secured/api/expertcategory/list?page=\" + page + \"&pageSize=\" + pageSize + \"&containerId=\" + containerId;\n    let url = `${API_ROOT}` + uri;\n    if(params){\n       var p = buildURLQuery(params);\n       url = url + '&' + p;\n    }\n\n    return _doGet(url);\n}\n\nasync function updateEntity(entityId, formdata, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/expertcategory/update\".concat(\"?containerId=\").concat(containerId).concat(\"&entityId=\" + entityId);\n    const url = `${API_ROOT}` + uri;\n    return _doPut(url, formdata);\n}\n\nasync function updateEntityMaster(entityId, formdata, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/expertcategory/updateMaster\".concat(\"?containerId=\").concat(containerId).concat(\"&entityId=\" + entityId);\n    const url = `${API_ROOT}` + uri;\n    return _doPut(url, formdata);\n}\n\nasync function detailsEntity(entityId, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/expertcategory/details?entityId=\" + entityId + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function deleteEntity(entityId, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/expertcategory/delete?entityId=\" + entityId + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doDelete(url);\n}\n\nasync function searchEntity(page, pageSize, searchTerm, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/expertcategory/search?searchTerm=\" + searchTerm+ \"&page=\"  + page + \"&pageSize=\" + pageSize + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\n// FUNCTIONS\n","import React, {useEffect, useState} from 'react';\nimport {AttributeListGroup, WaitingPane} from \"_components/_common\";\nimport {ExpertCategoryService} from \"_services/_generated/ExpertCategory.services\";\nimport {toast} from \"react-toastify\";\nimport {commons} from \"_helpers/commons\";\n// IMPORT\n\nfunction ExpertCategoryAdd(props) {\n\n    const[formData, setFormData] = useState()\n    const[loading, setLoading] = useState(false)\n    const[errors, setErrors] = useState([])\n// CONST\n\n    const findFormErrors = (form) => {\n        const { nom/*FORM ERRORS ATTR*/} = form\n        const newErrors = {}\n\nif (!nom || nom === '') newErrors.nom = 'Champs invalide';\n/*FORM ERRORS VALIDATION*/\n        return newErrors;\n    }\n\n    const create = (formData) => {\n        setFormData(formData)\n        setLoading(true)\n\n        formData.containerId = props.containerId;\n// ADDITIONAL_ATTRIBUTES\n\n        ExpertCategoryService.createEntity(formData, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(error) {\n                setLoading(false)\n                let message = response.errorFamily + ' - ' + response.message\n                toast.error(commons.toastError(response));\n                setErrors([message])\n            }\n            else {\n                setLoading(false)\n                props.onCreateSuccess();\n                toast(commons.toastSuccess(\"Un élément a été créé\"));\n            }\n        })\n    }\n\n    const attributesList = () => {\n        const attributesList = {\n            saveButtonTitle: 'CRÉER',\n            onSubmit: (formData) => create(formData),\n            formValidity: (formData) => findFormErrors(formData),\n            attributes: [\n{name: \"Nom\", dataField: \"nom\",  required: true,  placeHolder: \"Nom\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n// CREATE_FORM_ATTRIBUTES_LIST\n            ]\n        }\n\n        return attributesList;\n    }\n\n// METHOD\n\n    if(loading){\n        return <WaitingPane/>\n    }\n\n    const form = {...formData}\n    const attributes = {\n\n        // INITIAL_ATTRIBUTES_VALUE\n    }\n    form['attributes'] = attributes;\n\n    return (\n        <div className=\"container-create-root\">\n            <p className=\" form-error\">{errors}</p>\n{/*FORM*/}\n            <AttributeListGroup\n                attributesListConfig={attributesList()}\n                data={form}\n                standardFooterActions=\"true\"\n                formMode='create_object'/>\n        </div>\n    )\n}\n\nexport default ExpertCategoryAdd;\n\n// FOOTER\n","import React, {useEffect, useState} from 'react';\nimport {AttributeListGroup, PersistenceInfo, WaitingPane, Accordion} from \"_components/_common\";\nimport queryString from 'query-string';\nimport {ExpertCategoryService} from \"_services/_generated/ExpertCategory.services\";\nimport {commons} from \"_helpers/commons\";\nimport LifecycleAndTypeStatus from \"_components/_common/LifecycleAndTypeStatus\";\nimport {toast} from \"react-toastify\";\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\n// IMPORT\n\nfunction ExpertCategoryDetails(props)  {\n\n    const[loading, setLoading] = useState(true)\n    const[item, setItem] = useState()\n    const[errors, setErrors] = useState([])\n    // CONST\n\n    const getRootObjectForDetailsId = () => {\n        const queryUrlParams = queryString.parse(props.location.search);\n        let objectforDetailsId = queryUrlParams.rootId;\n        return objectforDetailsId\n    }\n\n    useEffect(() => {\n        refresh()\n    }, [props.location.search]);\n\n    const refresh = () => {\n        var itemId = getRootObjectForDetailsId();\n        loadDatas(itemId)\n    }\n\n    const loadDatas = (itemId) => {\n        setLoading(true)\n        ExpertCategoryService.detailsEntity(itemId, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(!error){\n                setItem(response.data)\n            }\n\n            setLoading(false)\n        })\n    }\n\n    const updateDatas = (formData) => {\n        var form = formData;\n        form.containerId = props.containerId;\n\n        var itemId = getRootObjectForDetailsId();\n        ExpertCategoryService.updateEntity(itemId, form, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(error) {\n                toast.error(commons.toastError(response));\n                let message = response.errorFamily + ' - ' + response.message\n                setErrors([message])\n            }\n            else {\n                loadDatas(itemId);\n                setErrors([])\n                toast(commons.toastSuccess(\"L'élément a été mis à jour\"));\n                props.refresh()\n            }\n        })\n    }\n\n    // FUNCTIONS\n\n    const headerActions = () => {\n        // ACTIONS VARIABLES\n\n         return <div className=\"btn-toolbar btn-toolbar-right\">\n        {/*ACTIONS_BUTTON*/}\n         </div>\n    }\n\n\n    const attributesList = {\n        onSubmit: (formData) => updateDatas(formData),\n        attributes: [\n            {name: \"Nom\", dataField: \"nom\",  required: true,  placeHolder: \"Nom\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n\t\t{name: 'Reference', dataField: 'attributes.number', readOnly: true},\n// DETAILS_ATTRIBUTES_LIST\n        ]\n    }\n\n    if(loading) {\n        return <WaitingPane/>\n    }\n\n    return <div className={'entity-details'}>\n        <div className=\"admin-details-header\">\n            <div style={{display: 'flex', marginBottom: '1rem'}}>\n              <p className=\"page-title\" style={LifecycleStyle}>{item.attributes.name}</p>\n              <LifecycleAndTypeStatus item={item}/>\n            </div>\n            {headerActions()}\n        </div>\n\n        <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-x\" className={\"admin-nav-tabs\"}>\n              <Tab eventKey=\"1\" title=\"Details\">\n                      <div style={{\n                        marginBottom: '2rem',\n                        paddingBottom: '1rem'\n                      }}>\n                          <p className=\" form-error\">{errors}</p>\n                           <AttributeListGroup\n                              canEdit={true}\n                              standardFooterActions=\"true\"\n                              containerId={props.containerId}\n                              attributesListConfig={attributesList}\n                              data={item}/>\n                       </div>\n\n                       {/*Accordion_1*/}\n                        <Accordion title={\"Metadonnées\"}\n                                    expanded={true}\n                                    content={\n                                        <>\n                                            <PersistenceInfo\n                                                {...props}\n                                                data={item}\n                                                containerId={props.containerId}\n                                                displayHeader={true}/>\n                                        </>\n                        }/>\n                        {/*Accordion_2*/}\n              </Tab>\n              {/*tabs*/}\n        </Tabs>\n    </div>\n\n}\n\nexport default ExpertCategoryDetails;\n\nconst LifecycleStyle = {\n    width: '50%'\n}\n\n\n// FOOTER\n","import React, {Component, useEffect, useState} from 'react';\nimport {DataTable, EmptyPane, WaitingPane, Wizard, WizardConfirm} from \"_components/_common\";\nimport ExpertCategoryAdd from \"_generated/ExpertCategory/ExpertCategoryAdd\";\nimport {ExpertCategoryService} from \"_services/_generated/ExpertCategory.services\";\nimport ExpertCategoryDetails from \"_generated/ExpertCategory/ExpertCategoryDetails\";\nimport {Input} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\nimport queryString from 'query-string';\nimport {coreUri} from '_helpers/CoreUri';\nimport { commons } from '_helpers/commons.js';\nimport {toast} from \"react-toastify\";\n\nimport {DataExportService} from \"_services/DataExport.services\";\nimport FileSaver from \"file-saver\";\n// IMPORT\n\nfunction ExpertCategoryList(props) {\n\n    const[pageSize, setPageSize] = useState(14)\n    const[loading, setLoading] = useState(true)\n    const[datas, setDatas] = useState([])\n    const[page, setPage] = useState(0)\n    const[subviewMode, setSubviewMode] = useState('list')\n    const[metaData, setMetaData] = useState()\n    const[searchTerm, setSearchTerm] = useState()\n\n\n    const runExport = async () => {\n    var form = {}\n    form['separator.char'] = '|'\n    form['comment.char'] = '#'\n    form['domain'] = commons.getWorkingContainerPath(props.userContext)\n    form['container'] = commons.getWorkingContainerPath(props.userContext)\n    form['attach.discarded.file'] = false\n    form['attach.log.file'] = false\n    form['log.file.extension'] = '.log'\n    form['notify.on.error'] = 'false'\n    form['notify.on.success'] = 'false'\n    form['mail.on.success'] = false\n    form['mail.on.error'] = false\n\n    const containerId = props.containerId\n    const exportConfig = await DataExportService.getByInternalName('EXPORT_EXPERTCATEGORY', containerId).then(response => {\n        return response\n    })\n\n    if(!commons.isRequestError(exportConfig)){\n        const id = exportConfig.data.attributes.id\n        DataExportService.runExport(id, form, containerId).then(response => {\n            if(response.ok) {\n                return response.text()\n            }\n            else {\n                toast.error(\"Echec de l'export des données\")\n            }\n\n            return null;\n        }).then(response => {\n            if(response){\n                var blob = new Blob([response], {type:\"plain/text;charset=UTF-8\"});\n                FileSaver.saveAs(blob, \"ExpertCategory.csv\");\n            }\n        }).catch(error => {\n            toast.error(\"Echec de l'export des données\")\n        })\n    }\n    else {\n        toast.error(\"Configuration introuvable pour l'export\")\n    }\n\n}\n// METHOD\n\n    const onCreateSuccess = (wizardCloseFunction) => {\n        wizardCloseFunction()\n        loadDatas(page)\n    }\n\n    const wizardContent = (wizardCloseFunction) => {\n        return <ExpertCategoryAdd onCreateSuccess={() => onCreateSuccess(wizardCloseFunction)} {...props}/>\n    }\n\n    useEffect(() => {\n        loadDatas(0)\n    }, [])\n\n    const goToPage = (index) => {\n      loadDatas(index)\n    }\n\n    const refresh = () => {\n        loadDatas(page)\n    }\n\n    const loadDatas = (index) => {\n        setLoading(true)\n        const statusFromUrl = commons.getValueFromUrl('status');\n        const params = {\n          status: statusFromUrl ? statusFromUrl : \"\"\n        }\n        ExpertCategoryService.listEntity(index, pageSize, props.containerId, params).then(response => {\n            if(!commons.isRequestError(response)){\n                setPage(index)\n                setDatas(response.data)\n                setSubviewMode('list')\n                setMetaData(response.metaData)\n                setLoading(false)\n             }\n             else {\n                setDatas([])\n                setLoading(false)\n             }\n        })\n\n    }\n\n    const searchTermUpdated = (e) => {\n        setLoading(true)\n        let searchTerm = e.target.value\n        if(searchTerm){\n            ExpertCategoryService.searchEntity(0, 10, searchTerm , props.containerId).then(response => {\n                setPage(0)\n                setDatas(response.data)\n                setSubviewMode('search')\n                setMetaData(response.metaData)\n                setSearchTerm(searchTerm)\n                setLoading(false)\n            })\n        }\n        else {\n            loadDatas(0)\n        }\n    }\n\n    const getRootObjectForDetailsId = () => {\n        const queryUrlParams = queryString.parse(props.location.search);\n        let objectforDetailsId = queryUrlParams.rootId;\n        return objectforDetailsId\n    }\n\n    const displayDetails = (e, id) => {\n        if(e) e.preventDefault();\n        let tabName = commons.getValueFromUrl('tab');\n        let view = commons.getValueFromUrl('name');\n        const url = coreUri.backOfficeViewURL(tabName, view, [\"rootId=\" +  id]);\n        props.history.push(url);\n    }\n\n    const deleteRow = (id) => {\n        ExpertCategoryService.deleteEntity(id, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(error) {\n                toast.error(commons.toastError(response));\n            }\n            else {\n                loadDatas(page)\n                toast(commons.toastSuccess(\"L'élément a été supprimé\"));\n            }\n        })\n    }\n\n    const deleteRowAction = (id) => {\n        return <>\n            <WizardConfirm\n                buttonIconComp={<i className={'fa fa-trash fa-lg'}></i>}\n                onConfirm={() => deleteRow(id)}\n                dialogMessage=\"Voulez vous supprimer l'élément?\"\n                dialogTitle='Supprimer'\n            />\n        </>\n    }\n\n    // METHOD\n\n    const tableActions = (v, i) => {\n        return <td width={'20%'} className=\"td-right\">\n            <div className=\"btn-toolbar-right table-info-link\">\n                <button onClick={(e) => displayDetails(e, v.id)}>\n                    <i className={'fa fa-info fa-lg'}></i>\n                </button>\n                 {deleteRowAction(v.id)}\n            </div>\n        </td>\n    }\n\n    const itemsDatatableRowItemName = (v, i) => {\n        return <td className={'td-left table-info-link'}>\n            <a href='#/details' onClick={(e) => displayDetails(e, v.id)}>\n                {v.nom && v.nom.length > 0 ? v.nom : \"> Infos\"}\n            </a>\n        </td>\n    }\n\n    const table = () => {\n        if(!datas || datas.length === 0){\n            return <EmptyPane />\n        }\n\n        let tableConfig ={\n            columnsConfig: [\n                {name:'Nom', displayComponent: (v, i) => itemsDatatableRowItemName(v,i), dataField: 'attributes', headerClass: 'td-left'},\n\t\t{name:'Reference', dataField: 'attributes.number', headerClass: 'td-center', className: 'td-center'},\n// DATA_TABLE_ATTRIBUTES_LIST\n                {dataField: 'attributes', displayComponent: (v,i) => tableActions(v,i), headerClass: 'td-left', className: 'td-left'},\n            ],\n        }\n        var datatable = <DataTable items={JSON.stringify(datas)}\n                                       tableConfig={tableConfig}\n                                       pagination={true}\n                                       goToPage={goToPage}\n                                       metaData={JSON.stringify(metaData)}\n                                       displayTotalElements={true}\n                                       paginate={subviewMode === 'list' ? true : false}/>\n\n        return datatable\n    }\n\n\n    let objectforDetailsId = getRootObjectForDetailsId()\n    if(!objectforDetailsId) {\n        var content;\n        if (loading) {\n            content = <WaitingPane/>\n        } else {\n            content = table();\n        }\n\n        return <div className=\"portlet-box\">\n                <div className=\"admin-filters-root\">\n                    <Input type=\"text\"\n                           className=\"admin-hover-input\"\n                           name=\"input1-group2\"\n                           placeholder=\"Chercher un élément\"\n                           autocomplete=\"off\"\n                           onChange={(e) => searchTermUpdated(e)}\n                           defaultValue={searchTerm}/>\n                    <div className=\"btn-toolbar btn-toolbar-right\">\n                        <Wizard buttonTitle={'Ajouter'}\n                                buttonIcon={'fa fa-plus fa-md'}\n                                hideFooter={true}\n                                dialogSize=\"md\"\n                                dialogTitle=\"Ajouter une entité\"\n                                dialogContentProvider={(wizardCloseFunction) => wizardContent(wizardCloseFunction)}/>\n                        <button onClick={runExport}><i className={'fa fa-sm fa-file-excel-o'}></i>&nbsp;Exporter</button>\n{/*ACTIONS*/}\n                        <button onClick={refresh}>Refresh</button>\n                    </div>\n            </div>\n            <div className=\"portlet-content\">\n                {content}\n            </div>\n        </div>\n    }\n    else {\n        return <ExpertCategoryDetails {...props} refresh={refresh} forwardToDetailsUrl={null}/>\n    }\n}\n\nexport default ExpertCategoryList;\n\n\n// FOOTER\n","import { _doPost,_doGet,_doPut, API_ROOT, _doDelete, buildURLQuery } from '../utils/services.config';\n\nexport const AgentFacilitateurCategoryService = {\n    createEntity,\n    listEntity,\n    updateEntity,\n    updateEntityMaster,\n    deleteEntity,\n    detailsEntity,\n    searchEntity,\n    // EXPORT\n}\n\nasync function createEntity(formData, containerId){\n    const uri = '/katappult/cloud/app/v1/secured/api/agentfacilitateurcategory/create';\n    var url = `${API_ROOT}` + uri + \"?containerId=\" + containerId\n    return _doPost(url, JSON.stringify(formData))\n}\n\nasync function listEntity(page, pageSize, containerId, params){\n    const uri = \"/katappult/cloud/app/v1/secured/api/agentfacilitateurcategory/list?page=\" + page + \"&pageSize=\" + pageSize + \"&containerId=\" + containerId;\n    let url = `${API_ROOT}` + uri;\n    if(params){\n       var p = buildURLQuery(params);\n       url = url + '&' + p;\n    }\n\n    return _doGet(url);\n}\n\nasync function updateEntity(entityId, formdata, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/agentfacilitateurcategory/update\".concat(\"?containerId=\").concat(containerId).concat(\"&entityId=\" + entityId);\n    const url = `${API_ROOT}` + uri;\n    return _doPut(url, formdata);\n}\n\nasync function updateEntityMaster(entityId, formdata, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/agentfacilitateurcategory/updateMaster\".concat(\"?containerId=\").concat(containerId).concat(\"&entityId=\" + entityId);\n    const url = `${API_ROOT}` + uri;\n    return _doPut(url, formdata);\n}\n\nasync function detailsEntity(entityId, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/agentfacilitateurcategory/details?entityId=\" + entityId + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function deleteEntity(entityId, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/agentfacilitateurcategory/delete?entityId=\" + entityId + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doDelete(url);\n}\n\nasync function searchEntity(page, pageSize, searchTerm, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/agentfacilitateurcategory/search?searchTerm=\" + searchTerm+ \"&page=\"  + page + \"&pageSize=\" + pageSize + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\n// FUNCTIONS\n","import React, {useEffect, useState} from 'react';\nimport {AttributeListGroup, WaitingPane} from \"_components/_common\";\nimport {AgentFacilitateurCategoryService} from \"_services/_generated/AgentFacilitateurCategory.services\";\nimport {toast} from \"react-toastify\";\nimport {commons} from \"_helpers/commons\";\n// IMPORT\n\nfunction AgentFacilitateurCategoryAdd(props) {\n\n    const[formData, setFormData] = useState()\n    const[loading, setLoading] = useState(false)\n    const[errors, setErrors] = useState([])\n// CONST\n\n    const findFormErrors = (form) => {\n        const { nom/*FORM ERRORS ATTR*/} = form\n        const newErrors = {}\n\nif (!nom || nom === '') newErrors.nom = 'Champs invalide';\n/*FORM ERRORS VALIDATION*/\n        return newErrors;\n    }\n\n    const create = (formData) => {\n        setFormData(formData)\n        setLoading(true)\n\n        formData.containerId = props.containerId;\n// ADDITIONAL_ATTRIBUTES\n\n        AgentFacilitateurCategoryService.createEntity(formData, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(error) {\n                setLoading(false)\n                let message = response.errorFamily + ' - ' + response.message\n                toast.error(commons.toastError(response));\n                setErrors([message])\n            }\n            else {\n                setLoading(false)\n                props.onCreateSuccess();\n                toast(commons.toastSuccess(\"Un élément a été créé\"));\n            }\n        })\n    }\n\n    const attributesList = () => {\n        const attributesList = {\n            saveButtonTitle: 'CRÉER',\n            onSubmit: (formData) => create(formData),\n            formValidity: (formData) => findFormErrors(formData),\n            attributes: [\n{name: \"Nom\", dataField: \"nom\",  required: true,  placeHolder: \"Nom\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n// CREATE_FORM_ATTRIBUTES_LIST\n            ]\n        }\n\n        return attributesList;\n    }\n\n// METHOD\n\n    if(loading){\n        return <WaitingPane/>\n    }\n\n    const form = {...formData}\n    const attributes = {\n\n        // INITIAL_ATTRIBUTES_VALUE\n    }\n    form['attributes'] = attributes;\n\n    return (\n        <div className=\"container-create-root\">\n            <p className=\" form-error\">{errors}</p>\n{/*FORM*/}\n            <AttributeListGroup\n                attributesListConfig={attributesList()}\n                data={form}\n                standardFooterActions=\"true\"\n                formMode='create_object'/>\n        </div>\n    )\n}\n\nexport default AgentFacilitateurCategoryAdd;\n\n// FOOTER\n","import React, {useEffect, useState} from 'react';\nimport {AttributeListGroup, PersistenceInfo, WaitingPane, Accordion} from \"_components/_common\";\nimport queryString from 'query-string';\nimport {AgentFacilitateurCategoryService} from \"_services/_generated/AgentFacilitateurCategory.services\";\nimport {commons} from \"_helpers/commons\";\nimport LifecycleAndTypeStatus from \"_components/_common/LifecycleAndTypeStatus\";\nimport {toast} from \"react-toastify\";\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\n// IMPORT\n\nfunction AgentFacilitateurCategoryDetails(props)  {\n\n    const[loading, setLoading] = useState(true)\n    const[item, setItem] = useState()\n    const[errors, setErrors] = useState([])\n    // CONST\n\n    const getRootObjectForDetailsId = () => {\n        const queryUrlParams = queryString.parse(props.location.search);\n        let objectforDetailsId = queryUrlParams.rootId;\n        return objectforDetailsId\n    }\n\n    useEffect(() => {\n        refresh()\n    }, [props.location.search]);\n\n    const refresh = () => {\n        var itemId = getRootObjectForDetailsId();\n        loadDatas(itemId)\n    }\n\n    const loadDatas = (itemId) => {\n        setLoading(true)\n        AgentFacilitateurCategoryService.detailsEntity(itemId, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(!error){\n                setItem(response.data)\n            }\n\n            setLoading(false)\n        })\n    }\n\n    const updateDatas = (formData) => {\n        var form = formData;\n        form.containerId = props.containerId;\n\n        var itemId = getRootObjectForDetailsId();\n        AgentFacilitateurCategoryService.updateEntity(itemId, form, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(error) {\n                toast.error(commons.toastError(response));\n                let message = response.errorFamily + ' - ' + response.message\n                setErrors([message])\n            }\n            else {\n                loadDatas(itemId);\n                setErrors([])\n                toast(commons.toastSuccess(\"L'élément a été mis à jour\"));\n                props.refresh()\n            }\n        })\n    }\n\n    // FUNCTIONS\n\n    const headerActions = () => {\n        // ACTIONS VARIABLES\n\n         return <div className=\"btn-toolbar btn-toolbar-right\">\n        {/*ACTIONS_BUTTON*/}\n         </div>\n    }\n\n\n    const attributesList = {\n        onSubmit: (formData) => updateDatas(formData),\n        attributes: [\n            {name: \"Nom\", dataField: \"nom\",  required: true,  placeHolder: \"Nom\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n\t\t{name: 'Reference', dataField: 'attributes.number', readOnly: true},\n// DETAILS_ATTRIBUTES_LIST\n        ]\n    }\n\n    if(loading) {\n        return <WaitingPane/>\n    }\n\n    return <div className={'entity-details'}>\n        <div className=\"admin-details-header\">\n            <div style={{display: 'flex', marginBottom: '1rem'}}>\n              <p className=\"page-title\" style={LifecycleStyle}>{item.attributes.name}</p>\n              <LifecycleAndTypeStatus item={item}/>\n            </div>\n            {headerActions()}\n        </div>\n\n        <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-x\" className={\"admin-nav-tabs\"}>\n              <Tab eventKey=\"1\" title=\"Details\">\n                      <div style={{\n                        marginBottom: '2rem',\n                        paddingBottom: '1rem'\n                      }}>\n                          <p className=\" form-error\">{errors}</p>\n                           <AttributeListGroup\n                              canEdit={true}\n                              standardFooterActions=\"true\"\n                              containerId={props.containerId}\n                              attributesListConfig={attributesList}\n                              data={item}/>\n                       </div>\n\n                       {/*Accordion_1*/}\n                        <Accordion title={\"Metadonnées\"}\n                                    expanded={true}\n                                    content={\n                                        <>\n                                            <PersistenceInfo\n                                                {...props}\n                                                data={item}\n                                                containerId={props.containerId}\n                                                displayHeader={true}/>\n                                        </>\n                        }/>\n                        {/*Accordion_2*/}\n              </Tab>\n              {/*tabs*/}\n        </Tabs>\n    </div>\n\n}\n\nexport default AgentFacilitateurCategoryDetails;\n\nconst LifecycleStyle = {\n    width: '50%'\n}\n\n\n// FOOTER\n","import React, {Component, useEffect, useState} from 'react';\nimport {DataTable, EmptyPane, WaitingPane, Wizard, WizardConfirm} from \"_components/_common\";\nimport AgentFacilitateurCategoryAdd from \"_generated/AgentFacilitateurCategory/AgentFacilitateurCategoryAdd\";\nimport {AgentFacilitateurCategoryService} from \"_services/_generated/AgentFacilitateurCategory.services\";\nimport AgentFacilitateurCategoryDetails from \"_generated/AgentFacilitateurCategory/AgentFacilitateurCategoryDetails\";\nimport {Input} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\nimport queryString from 'query-string';\nimport {coreUri} from '_helpers/CoreUri';\nimport { commons } from '_helpers/commons.js';\nimport {toast} from \"react-toastify\";\n\nimport {DataExportService} from \"_services/DataExport.services\";\nimport FileSaver from \"file-saver\";\n// IMPORT\n\nfunction AgentFacilitateurCategoryList(props) {\n\n    const[pageSize, setPageSize] = useState(14)\n    const[loading, setLoading] = useState(true)\n    const[datas, setDatas] = useState([])\n    const[page, setPage] = useState(0)\n    const[subviewMode, setSubviewMode] = useState('list')\n    const[metaData, setMetaData] = useState()\n    const[searchTerm, setSearchTerm] = useState()\n\n\n    const runExport = async () => {\n    var form = {}\n    form['separator.char'] = '|'\n    form['comment.char'] = '#'\n    form['domain'] = commons.getWorkingContainerPath(props.userContext)\n    form['container'] = commons.getWorkingContainerPath(props.userContext)\n    form['attach.discarded.file'] = false\n    form['attach.log.file'] = false\n    form['log.file.extension'] = '.log'\n    form['notify.on.error'] = 'false'\n    form['notify.on.success'] = 'false'\n    form['mail.on.success'] = false\n    form['mail.on.error'] = false\n\n    const containerId = props.containerId\n    const exportConfig = await DataExportService.getByInternalName('EXPORT_AGENTFACILITATEURCATEGORY', containerId).then(response => {\n        return response\n    })\n\n    if(!commons.isRequestError(exportConfig)){\n        const id = exportConfig.data.attributes.id\n        DataExportService.runExport(id, form, containerId).then(response => {\n            if(response.ok) {\n                return response.text()\n            }\n            else {\n                toast.error(\"Echec de l'export des données\")\n            }\n\n            return null;\n        }).then(response => {\n            if(response){\n                var blob = new Blob([response], {type:\"plain/text;charset=UTF-8\"});\n                FileSaver.saveAs(blob, \"AgentFacilitateurCategory.csv\");\n            }\n        }).catch(error => {\n            toast.error(\"Echec de l'export des données\")\n        })\n    }\n    else {\n        toast.error(\"Configuration introuvable pour l'export\")\n    }\n\n}\n// METHOD\n\n    const onCreateSuccess = (wizardCloseFunction) => {\n        wizardCloseFunction()\n        loadDatas(page)\n    }\n\n    const wizardContent = (wizardCloseFunction) => {\n        return <AgentFacilitateurCategoryAdd onCreateSuccess={() => onCreateSuccess(wizardCloseFunction)} {...props}/>\n    }\n\n    useEffect(() => {\n        loadDatas(0)\n    }, [])\n\n    const goToPage = (index) => {\n      loadDatas(index)\n    }\n\n    const refresh = () => {\n        loadDatas(page)\n    }\n\n    const loadDatas = (index) => {\n        setLoading(true)\n        const statusFromUrl = commons.getValueFromUrl('status');\n        const params = {\n          status: statusFromUrl ? statusFromUrl : \"\"\n        }\n        AgentFacilitateurCategoryService.listEntity(index, pageSize, props.containerId, params).then(response => {\n            if(!commons.isRequestError(response)){\n                setPage(index)\n                setDatas(response.data)\n                setSubviewMode('list')\n                setMetaData(response.metaData)\n                setLoading(false)\n             }\n             else {\n                setDatas([])\n                setLoading(false)\n             }\n        })\n\n    }\n\n    const searchTermUpdated = (e) => {\n        setLoading(true)\n        let searchTerm = e.target.value\n        if(searchTerm){\n            AgentFacilitateurCategoryService.searchEntity(0, 10, searchTerm , props.containerId).then(response => {\n                setPage(0)\n                setDatas(response.data)\n                setSubviewMode('search')\n                setMetaData(response.metaData)\n                setSearchTerm(searchTerm)\n                setLoading(false)\n            })\n        }\n        else {\n            loadDatas(0)\n        }\n    }\n\n    const getRootObjectForDetailsId = () => {\n        const queryUrlParams = queryString.parse(props.location.search);\n        let objectforDetailsId = queryUrlParams.rootId;\n        return objectforDetailsId\n    }\n\n    const displayDetails = (e, id) => {\n        if(e) e.preventDefault();\n        let tabName = commons.getValueFromUrl('tab');\n        let view = commons.getValueFromUrl('name');\n        const url = coreUri.backOfficeViewURL(tabName, view, [\"rootId=\" +  id]);\n        props.history.push(url);\n    }\n\n    const deleteRow = (id) => {\n        AgentFacilitateurCategoryService.deleteEntity(id, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(error) {\n                toast.error(commons.toastError(response));\n            }\n            else {\n                loadDatas(page)\n                toast(commons.toastSuccess(\"L'élément a été supprimé\"));\n            }\n        })\n    }\n\n    const deleteRowAction = (id) => {\n        return <>\n            <WizardConfirm\n                buttonIconComp={<i className={'fa fa-trash fa-lg'}></i>}\n                onConfirm={() => deleteRow(id)}\n                dialogMessage=\"Voulez vous supprimer l'élément?\"\n                dialogTitle='Supprimer'\n            />\n        </>\n    }\n\n    // METHOD\n\n    const tableActions = (v, i) => {\n        return <td width={'20%'} className=\"td-right\">\n            <div className=\"btn-toolbar-right table-info-link\">\n                <button onClick={(e) => displayDetails(e, v.id)}>\n                    <i className={'fa fa-info fa-lg'}></i>\n                </button>\n                 {deleteRowAction(v.id)}\n            </div>\n        </td>\n    }\n\n    const itemsDatatableRowItemName = (v, i) => {\n        return <td className={'td-left table-info-link'}>\n            <a href='#/details' onClick={(e) => displayDetails(e, v.id)}>\n                {v.nom && v.nom.length > 0 ? v.nom : \"> Infos\"}\n            </a>\n        </td>\n    }\n\n    const table = () => {\n        if(!datas || datas.length === 0){\n            return <EmptyPane />\n        }\n\n        let tableConfig ={\n            columnsConfig: [\n                {name:'Nom', displayComponent: (v, i) => itemsDatatableRowItemName(v,i), dataField: 'attributes', headerClass: 'td-left'},\n\t\t{name:'Reference', dataField: 'attributes.number', headerClass: 'td-center', className: 'td-center'},\n// DATA_TABLE_ATTRIBUTES_LIST\n                {dataField: 'attributes', displayComponent: (v,i) => tableActions(v,i), headerClass: 'td-left', className: 'td-left'},\n            ],\n        }\n        var datatable = <DataTable items={JSON.stringify(datas)}\n                                       tableConfig={tableConfig}\n                                       pagination={true}\n                                       goToPage={goToPage}\n                                       metaData={JSON.stringify(metaData)}\n                                       displayTotalElements={true}\n                                       paginate={subviewMode === 'list' ? true : false}/>\n\n        return datatable\n    }\n\n\n    let objectforDetailsId = getRootObjectForDetailsId()\n    if(!objectforDetailsId) {\n        var content;\n        if (loading) {\n            content = <WaitingPane/>\n        } else {\n            content = table();\n        }\n\n        return <div className=\"portlet-box\">\n                <div className=\"admin-filters-root\">\n                    <Input type=\"text\"\n                           className=\"admin-hover-input\"\n                           name=\"input1-group2\"\n                           placeholder=\"Chercher un élément\"\n                           autocomplete=\"off\"\n                           onChange={(e) => searchTermUpdated(e)}\n                           defaultValue={searchTerm}/>\n                    <div className=\"btn-toolbar btn-toolbar-right\">\n                        <Wizard buttonTitle={'Ajouter'}\n                                buttonIcon={'fa fa-plus fa-md'}\n                                hideFooter={true}\n                                dialogSize=\"md\"\n                                dialogTitle=\"Ajouter une entité\"\n                                dialogContentProvider={(wizardCloseFunction) => wizardContent(wizardCloseFunction)}/>\n                        <button onClick={runExport}><i className={'fa fa-sm fa-file-excel-o'}></i>&nbsp;Exporter</button>\n{/*ACTIONS*/}\n                        <button onClick={refresh}>Refresh</button>\n                    </div>\n            </div>\n            <div className=\"portlet-content\">\n                {content}\n            </div>\n        </div>\n    }\n    else {\n        return <AgentFacilitateurCategoryDetails {...props} refresh={refresh} forwardToDetailsUrl={null}/>\n    }\n}\n\nexport default AgentFacilitateurCategoryList;\n\n\n// FOOTER\n","import { _doPost,_doGet,_doPut, API_ROOT, _doDelete, buildURLQuery } from '../utils/services.config';\n\nexport const AmbassadeurCategoryService = {\n    createEntity,\n    listEntity,\n    updateEntity,\n    updateEntityMaster,\n    deleteEntity,\n    detailsEntity,\n    searchEntity,\n    // EXPORT\n}\n\nasync function createEntity(formData, containerId){\n    const uri = '/katappult/cloud/app/v1/secured/api/ambassadeurcategory/create';\n    var url = `${API_ROOT}` + uri + \"?containerId=\" + containerId\n    return _doPost(url, JSON.stringify(formData))\n}\n\nasync function listEntity(page, pageSize, containerId, params){\n    const uri = \"/katappult/cloud/app/v1/secured/api/ambassadeurcategory/list?page=\" + page + \"&pageSize=\" + pageSize + \"&containerId=\" + containerId;\n    let url = `${API_ROOT}` + uri;\n    if(params){\n       var p = buildURLQuery(params);\n       url = url + '&' + p;\n    }\n\n    return _doGet(url);\n}\n\nasync function updateEntity(entityId, formdata, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/ambassadeurcategory/update\".concat(\"?containerId=\").concat(containerId).concat(\"&entityId=\" + entityId);\n    const url = `${API_ROOT}` + uri;\n    return _doPut(url, formdata);\n}\n\nasync function updateEntityMaster(entityId, formdata, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/ambassadeurcategory/updateMaster\".concat(\"?containerId=\").concat(containerId).concat(\"&entityId=\" + entityId);\n    const url = `${API_ROOT}` + uri;\n    return _doPut(url, formdata);\n}\n\nasync function detailsEntity(entityId, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/ambassadeurcategory/details?entityId=\" + entityId + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\nasync function deleteEntity(entityId, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/ambassadeurcategory/delete?entityId=\" + entityId + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doDelete(url);\n}\n\nasync function searchEntity(page, pageSize, searchTerm, containerId){\n    const uri = \"/katappult/cloud/app/v1/secured/api/ambassadeurcategory/search?searchTerm=\" + searchTerm+ \"&page=\"  + page + \"&pageSize=\" + pageSize + \"&containerId=\" + containerId;\n    const url = `${API_ROOT}` + uri;\n    return _doGet(url);\n}\n\n// FUNCTIONS\n","import React, {useEffect, useState} from 'react';\nimport {AttributeListGroup, WaitingPane} from \"_components/_common\";\nimport {AmbassadeurCategoryService} from \"_services/_generated/AmbassadeurCategory.services\";\nimport {toast} from \"react-toastify\";\nimport {commons} from \"_helpers/commons\";\n// IMPORT\n\nfunction AmbassadeurCategoryAdd(props) {\n\n    const[formData, setFormData] = useState()\n    const[loading, setLoading] = useState(false)\n    const[errors, setErrors] = useState([])\n// CONST\n\n    const findFormErrors = (form) => {\n        const { nom/*FORM ERRORS ATTR*/} = form\n        const newErrors = {}\n\nif (!nom || nom === '') newErrors.nom = 'Champs invalide';\n/*FORM ERRORS VALIDATION*/\n        return newErrors;\n    }\n\n    const create = (formData) => {\n        setFormData(formData)\n        setLoading(true)\n\n        formData.containerId = props.containerId;\n// ADDITIONAL_ATTRIBUTES\n\n        AmbassadeurCategoryService.createEntity(formData, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(error) {\n                setLoading(false)\n                let message = response.errorFamily + ' - ' + response.message\n                toast.error(commons.toastError(response));\n                setErrors([message])\n            }\n            else {\n                setLoading(false)\n                props.onCreateSuccess();\n                toast(commons.toastSuccess(\"Un élément a été créé\"));\n            }\n        })\n    }\n\n    const attributesList = () => {\n        const attributesList = {\n            saveButtonTitle: 'CRÉER',\n            onSubmit: (formData) => create(formData),\n            formValidity: (formData) => findFormErrors(formData),\n            attributes: [\n{name: \"Nom\", dataField: \"nom\",  required: true,  placeHolder: \"Nom\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n// CREATE_FORM_ATTRIBUTES_LIST\n            ]\n        }\n\n        return attributesList;\n    }\n\n// METHOD\n\n    if(loading){\n        return <WaitingPane/>\n    }\n\n    const form = {...formData}\n    const attributes = {\n\n        // INITIAL_ATTRIBUTES_VALUE\n    }\n    form['attributes'] = attributes;\n\n    return (\n        <div className=\"container-create-root\">\n            <p className=\" form-error\">{errors}</p>\n{/*FORM*/}\n            <AttributeListGroup\n                attributesListConfig={attributesList()}\n                data={form}\n                standardFooterActions=\"true\"\n                formMode='create_object'/>\n        </div>\n    )\n}\n\nexport default AmbassadeurCategoryAdd;\n\n// FOOTER\n","import React, {useEffect, useState} from 'react';\nimport {AttributeListGroup, PersistenceInfo, WaitingPane, Accordion} from \"_components/_common\";\nimport queryString from 'query-string';\nimport {AmbassadeurCategoryService} from \"_services/_generated/AmbassadeurCategory.services\";\nimport {commons} from \"_helpers/commons\";\nimport LifecycleAndTypeStatus from \"_components/_common/LifecycleAndTypeStatus\";\nimport {toast} from \"react-toastify\";\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\n// IMPORT\n\nfunction AmbassadeurCategoryDetails(props)  {\n\n    const[loading, setLoading] = useState(true)\n    const[item, setItem] = useState()\n    const[errors, setErrors] = useState([])\n    // CONST\n\n    const getRootObjectForDetailsId = () => {\n        const queryUrlParams = queryString.parse(props.location.search);\n        let objectforDetailsId = queryUrlParams.rootId;\n        return objectforDetailsId\n    }\n\n    useEffect(() => {\n        refresh()\n    }, [props.location.search]);\n\n    const refresh = () => {\n        var itemId = getRootObjectForDetailsId();\n        loadDatas(itemId)\n    }\n\n    const loadDatas = (itemId) => {\n        setLoading(true)\n        AmbassadeurCategoryService.detailsEntity(itemId, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(!error){\n                setItem(response.data)\n            }\n\n            setLoading(false)\n        })\n    }\n\n    const updateDatas = (formData) => {\n        var form = formData;\n        form.containerId = props.containerId;\n\n        var itemId = getRootObjectForDetailsId();\n        AmbassadeurCategoryService.updateEntity(itemId, form, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(error) {\n                toast.error(commons.toastError(response));\n                let message = response.errorFamily + ' - ' + response.message\n                setErrors([message])\n            }\n            else {\n                loadDatas(itemId);\n                setErrors([])\n                toast(commons.toastSuccess(\"L'élément a été mis à jour\"));\n                props.refresh()\n            }\n        })\n    }\n\n    // FUNCTIONS\n\n    const headerActions = () => {\n        // ACTIONS VARIABLES\n\n         return <div className=\"btn-toolbar btn-toolbar-right\">\n        {/*ACTIONS_BUTTON*/}\n         </div>\n    }\n\n\n    const attributesList = {\n        onSubmit: (formData) => updateDatas(formData),\n        attributes: [\n            {name: \"Nom\", dataField: \"nom\",  required: true,  placeHolder: \"Nom\", type: \"text\", invalidFeedBack: \"Veuillez renseigner ce champs\"},\n// DETAILS_ATTRIBUTES_LIST\n        ]\n    }\n\n    if(loading) {\n        return <WaitingPane/>\n    }\n\n    return <div className={'entity-details'}>\n        <div className=\"admin-details-header\">\n            <div style={{display: 'flex', marginBottom: '1rem'}}>\n              <p className=\"page-title\" style={LifecycleStyle}>{item.attributes.name}</p>\n              <LifecycleAndTypeStatus item={item}/>\n            </div>\n            {headerActions()}\n        </div>\n\n        <Tabs defaultActiveKey=\"1\" id=\"uncontrolled-tab-x\" className={\"admin-nav-tabs\"}>\n              <Tab eventKey=\"1\" title=\"Details\">\n                      <div style={{\n                        marginBottom: '2rem',\n                        paddingBottom: '1rem'\n                      }}>\n                          <p className=\" form-error\">{errors}</p>\n                           <AttributeListGroup\n                              canEdit={true}\n                              standardFooterActions=\"true\"\n                              containerId={props.containerId}\n                              attributesListConfig={attributesList}\n                              data={item}/>\n                       </div>\n\n                       {/*Accordion_1*/}\n                        <Accordion title={\"Metadonnées\"}\n                                    expanded={true}\n                                    content={\n                                        <>\n                                            <PersistenceInfo\n                                                {...props}\n                                                data={item}\n                                                containerId={props.containerId}\n                                                displayHeader={true}/>\n                                        </>\n                        }/>\n                        {/*Accordion_2*/}\n              </Tab>\n              {/*tabs*/}\n        </Tabs>\n    </div>\n\n}\n\nexport default AmbassadeurCategoryDetails;\n\nconst LifecycleStyle = {\n    width: '50%'\n}\n\n\n// FOOTER\n","import React, {Component, useEffect, useState} from 'react';\nimport {DataTable, EmptyPane, WaitingPane, Wizard, WizardConfirm} from \"_components/_common\";\nimport AmbassadeurCategoryAdd from \"_generated/AmbassadeurCategory/AmbassadeurCategoryAdd\";\nimport {AmbassadeurCategoryService} from \"_services/_generated/AmbassadeurCategory.services\";\nimport AmbassadeurCategoryDetails from \"_generated/AmbassadeurCategory/AmbassadeurCategoryDetails\";\nimport {Input} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\nimport queryString from 'query-string';\nimport {coreUri} from '_helpers/CoreUri';\nimport { commons } from '_helpers/commons.js';\nimport {toast} from \"react-toastify\";\n\nimport {DataExportService} from \"_services/DataExport.services\";\nimport FileSaver from \"file-saver\";\n// IMPORT\n\nfunction AmbassadeurCategoryList(props) {\n\n    const[pageSize, setPageSize] = useState(14)\n    const[loading, setLoading] = useState(true)\n    const[datas, setDatas] = useState([])\n    const[page, setPage] = useState(0)\n    const[subviewMode, setSubviewMode] = useState('list')\n    const[metaData, setMetaData] = useState()\n    const[searchTerm, setSearchTerm] = useState()\n\n\n    const runExport = async () => {\n    var form = {}\n    form['separator.char'] = '|'\n    form['comment.char'] = '#'\n    form['domain'] = commons.getWorkingContainerPath(props.userContext)\n    form['container'] = commons.getWorkingContainerPath(props.userContext)\n    form['attach.discarded.file'] = false\n    form['attach.log.file'] = false\n    form['log.file.extension'] = '.log'\n    form['notify.on.error'] = 'false'\n    form['notify.on.success'] = 'false'\n    form['mail.on.success'] = false\n    form['mail.on.error'] = false\n\n    const containerId = props.containerId\n    const exportConfig = await DataExportService.getByInternalName('EXPORT_AMBASSADEURCATEGORY', containerId).then(response => {\n        return response\n    })\n\n    if(!commons.isRequestError(exportConfig)){\n        const id = exportConfig.data.attributes.id\n        DataExportService.runExport(id, form, containerId).then(response => {\n            if(response.ok) {\n                return response.text()\n            }\n            else {\n                toast.error(\"Echec de l'export des données\")\n            }\n\n            return null;\n        }).then(response => {\n            if(response){\n                var blob = new Blob([response], {type:\"plain/text;charset=UTF-8\"});\n                FileSaver.saveAs(blob, \"AmbassadeurCategory.csv\");\n            }\n        }).catch(error => {\n            toast.error(\"Echec de l'export des données\")\n        })\n    }\n    else {\n        toast.error(\"Configuration introuvable pour l'export\")\n    }\n\n}\n// METHOD\n\n    const onCreateSuccess = (wizardCloseFunction) => {\n        wizardCloseFunction()\n        loadDatas(page)\n    }\n\n    const wizardContent = (wizardCloseFunction) => {\n        return <AmbassadeurCategoryAdd onCreateSuccess={() => onCreateSuccess(wizardCloseFunction)} {...props}/>\n    }\n\n    useEffect(() => {\n        loadDatas(0)\n    }, [])\n\n    const goToPage = (index) => {\n      loadDatas(index)\n    }\n\n    const refresh = () => {\n        loadDatas(page)\n    }\n\n    const loadDatas = (index) => {\n        setLoading(true)\n        const statusFromUrl = commons.getValueFromUrl('status');\n        const params = {\n          status: statusFromUrl ? statusFromUrl : \"\"\n        }\n        AmbassadeurCategoryService.listEntity(index, pageSize, props.containerId, params).then(response => {\n            if(!commons.isRequestError(response)){\n                setPage(index)\n                setDatas(response.data)\n                setSubviewMode('list')\n                setMetaData(response.metaData)\n                setLoading(false)\n             }\n             else {\n                setDatas([])\n                setLoading(false)\n             }\n        })\n\n    }\n\n    const searchTermUpdated = (e) => {\n        setLoading(true)\n        let searchTerm = e.target.value\n        if(searchTerm){\n            AmbassadeurCategoryService.searchEntity(0, 10, searchTerm , props.containerId).then(response => {\n                setPage(0)\n                setDatas(response.data)\n                setSubviewMode('search')\n                setMetaData(response.metaData)\n                setSearchTerm(searchTerm)\n                setLoading(false)\n            })\n        }\n        else {\n            loadDatas(0)\n        }\n    }\n\n    const getRootObjectForDetailsId = () => {\n        const queryUrlParams = queryString.parse(props.location.search);\n        let objectforDetailsId = queryUrlParams.rootId;\n        return objectforDetailsId\n    }\n\n    const displayDetails = (e, id) => {\n        if(e) e.preventDefault();\n        let tabName = commons.getValueFromUrl('tab');\n        let view = commons.getValueFromUrl('name');\n        const url = coreUri.backOfficeViewURL(tabName, view, [\"rootId=\" +  id]);\n        props.history.push(url);\n    }\n\n    const deleteRow = (id) => {\n        AmbassadeurCategoryService.deleteEntity(id, props.containerId).then(response => {\n            const error = commons.isRequestError(response)\n            if(error) {\n                toast.error(commons.toastError(response));\n            }\n            else {\n                loadDatas(page)\n                toast(commons.toastSuccess(\"L'élément a été supprimé\"));\n            }\n        })\n    }\n\n    const deleteRowAction = (id) => {\n        return <>\n            <WizardConfirm\n                buttonIconComp={<i className={'fa fa-trash fa-lg'}></i>}\n                onConfirm={() => deleteRow(id)}\n                dialogMessage=\"Voulez vous supprimer l'élément?\"\n                dialogTitle='Supprimer'\n            />\n        </>\n    }\n\n    // METHOD\n\n    const tableActions = (v, i) => {\n        return <td width={'20%'} className=\"td-right\">\n            <div className=\"btn-toolbar-right table-info-link\">\n                <button onClick={(e) => displayDetails(e, v.id)}>\n                    <i className={'fa fa-info fa-lg'}></i>\n                </button>\n                 {deleteRowAction(v.id)}\n            </div>\n        </td>\n    }\n\n    const itemsDatatableRowItemName = (v, i) => {\n        return <td className={'td-left table-info-link'}>\n            <a href='#/details' onClick={(e) => displayDetails(e, v.id)}>\n                {v.nom && v.nom.length > 0 ? v.nom : \"> Infos\"}\n            </a>\n        </td>\n    }\n\n    const table = () => {\n        if(!datas || datas.length === 0){\n            return <EmptyPane />\n        }\n\n        let tableConfig ={\n            columnsConfig: [\n                {name:'Nom', displayComponent: (v, i) => itemsDatatableRowItemName(v,i), dataField: 'attributes', headerClass: 'td-left'},\n// DATA_TABLE_ATTRIBUTES_LIST\n                {dataField: 'attributes', displayComponent: (v,i) => tableActions(v,i), headerClass: 'td-left', className: 'td-left'},\n            ],\n        }\n        var datatable = <DataTable items={JSON.stringify(datas)}\n                                       tableConfig={tableConfig}\n                                       pagination={true}\n                                       goToPage={goToPage}\n                                       metaData={JSON.stringify(metaData)}\n                                       displayTotalElements={true}\n                                       paginate={subviewMode === 'list' ? true : false}/>\n\n        return datatable\n    }\n\n\n    let objectforDetailsId = getRootObjectForDetailsId()\n    if(!objectforDetailsId) {\n        var content;\n        if (loading) {\n            content = <WaitingPane/>\n        } else {\n            content = table();\n        }\n\n        return <div className=\"portlet-box\">\n                <div className=\"admin-filters-root\">\n                    <Input type=\"text\"\n                           className=\"admin-hover-input\"\n                           name=\"input1-group2\"\n                           placeholder=\"Chercher un élément\"\n                           autocomplete=\"off\"\n                           onChange={(e) => searchTermUpdated(e)}\n                           defaultValue={searchTerm}/>\n                    <div className=\"btn-toolbar btn-toolbar-right\">\n                        <Wizard buttonTitle={'Ajouter'}\n                                buttonIcon={'fa fa-plus fa-md'}\n                                hideFooter={true}\n                                dialogSize=\"md\"\n                                dialogTitle=\"Ajouter une entité\"\n                                dialogContentProvider={(wizardCloseFunction) => wizardContent(wizardCloseFunction)}/>\n                        <button onClick={runExport}><i className={'fa fa-sm fa-file-excel-o'}></i>&nbsp;Exporter</button>\n{/*ACTIONS*/}\n                        <button onClick={refresh}>Refresh</button>\n                    </div>\n            </div>\n            <div className=\"portlet-content\">\n                {content}\n            </div>\n        </div>\n    }\n    else {\n        return <AmbassadeurCategoryDetails {...props} refresh={refresh} forwardToDetailsUrl={null}/>\n    }\n}\n\nexport default AmbassadeurCategoryList;\n\n\n// FOOTER\n","import React, { Component } from 'react';\nimport{\n\tAppVersions,\n\tBusinessRules,\n\tLifecycles,\n\tEmailTemplates,\n\tFolderTemplates,\n\tTeamTemplates,\n\tTypes,\n\tDataLoaderHistory,\n\tContainerSwitcher,\n}\n\tfrom '_components/_admin';\nimport{\n\tManageContainerUsers,\n\tAppBreadcrumb,\n\tEnumerations,\n\tWaitingPane\n}\n\tfrom '_components/_common';\nimport { connect } from 'react-redux';\nimport { commons } from '_helpers/commons';\nimport queryString from 'query-string';\nimport DataExportList from \"_components/_admin/DataExport/DataExportList\";\nimport CronTaskList from \"_components/_admin/CronTask/CronTaskList\";\nimport DataImport from \"_components/_admin/Dataloader/DataImport\";\nimport ErrorCodeList from \"_components/_admin/ErrorCode/ErrorCodeList\";\nimport PrimaryContextMenu from \"pages/AdminPages/GenericManagementPage/PrimaryContextMenu\";\nimport {coreUri} from \"_helpers/CoreUri\";\nimport CreditList from \"_generated/Credit/CreditList\";\nimport DemandeList from \"_generated/Demande/DemandeList\";\nimport ReplayList from \"_generated/Replay/ReplayList\";\nimport WebinarList from \"_generated/Webinar/WebinarList\";\nimport ExpertCategoryList from \"_generated/ExpertCategory/ExpertCategoryList\";\nimport AgentFacilitateurCategoryList from \"_generated/AgentFacilitateurCategory/AgentFacilitateurCategoryList\";\nimport AmbassadeurCategoryList from \"_generated/AmbassadeurCategory/AmbassadeurCategoryList\";\n// IMPORT\n\nconst mapStateToProps = store => ({\n\tmanagementPageSelectedTab: store.navigationConfig.config,\n})\n\nconst mapDispatchToProps = (disptach) => ({\n\tsetManagementPageSelectedTab: (e) => disptach(setManagementPageSelectedTab(e)),\n})\n\nclass GenericManagementPage extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloading: false,\n\t\t\tsidebarOpen: true,\n\t\t}\n\n\t\tthis.setDisplayedView = this.setDisplayedView.bind(this);\n\t\tthis.pushBreadCrumb = this.pushBreadCrumb.bind(this);\n\t\tthis.popBreadCrumb = this.popBreadCrumb.bind(this);\n\t\tthis.popView = this.popView.bind(this);\n\t\tthis.selectHomePage = this.selectHomePage.bind(this);\n\t\tthis.popBreadCrumbAt = this.popBreadCrumbAt.bind(this);\n\t}\n\n\tselectHomePage(){\n\t\tthis.setState({\n\t\t\tviewName: 'businessRules',\n\t\t\tlocation: 'Règles métiers',\n\t\t\tbreadItems:[{href:'#', title:'Règles métiers'}],\n\t\t\tviewMode: 'viewList',\n\t\t\tmenuGroup: 'platform'\n\t\t})\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.selectHomePage();\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\t// url is like this: /view?tab=xx&name=xy\n\t\tlet tabName = commons.getValueFromUrl('tab');\n\t\tlet viewName = commons.getValueFromUrl('name');\n\n\t\tif (viewName !== prevState.viewName) {\n\t\t\tconst payload = this.getViewContentToDisplay(viewName, tabName);\n\t\t\tif (payload) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tviewName: payload.viewName,\n\t\t\t\t\tbreadItems: payload.breadItems,\n\t\t\t\t\tlocation: payload.location,\n\t\t\t\t\tviewMode: payload.viewMode,\n\t\t\t\t\tmenuGroup: tabName,\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tpopView(viewMode){\n\t\tthis.setState({\n\t\t\tviewMode: viewMode\n\t\t})\n\t}\n\n\tsetDisplayedView(e, viewName, tabName){\n\t\te.preventDefault();\n\t\te.stopPropagation()\n\t\tconst url = coreUri.backOfficeViewURL(tabName, viewName);\n\t\tthis.props.history.push(url);\n\t}\n\n\tloading(){\n\t\treturn <WaitingPane />\n\t}\n\n\tpushBreadCrumb(item){\n\t\tlet breadItems = this.state.breadItems ? this.state.breadItems.slice() : [];\n\t\tbreadItems.push(item);\n\t\tthis.setState({\n\t\t\tbreadItems: breadItems,\n\t\t\tviewMode: 'viewDetails',\n\t\t})\n\t}\n\n\tpopBreadCrumb(item){\n\t\tlet index = this.state.breadItems.indexOf(item);\n\t\tif(index === 0 && this.state.breadItems.length > 1){\n\t\t\tlet items = this.state.breadItems.slice();\n\t\t\titems.pop();\n\t\t\tthis.setState({\n\t\t\t\tbreadItems: items,\n\t\t\t\tviewMode: 'viewList'\n\t\t\t})\n\t\t}\n\t}\n\tpopBreadCrumbAt(index){\n\t\tif(index === 0 && this.state.breadItems.length > 1){\n\t\t\tlet items = this.state.breadItems.slice();\n\t\t\titems.pop();\n\t\t\tthis.setState({\n\t\t\t\tbreadItems: items,\n\t\t\t\tviewMode: 'viewList'\n\t\t\t})\n\t\t}\n\t}\n\n\tbusinessRules(){\n\t\tlet comp = <BusinessRules\n\t\t\t{...this.props}\n\t\t\tviewMode={this.state.viewMode}\n\t\t\tpushBreadCrumb={this.pushBreadCrumb}\n\t\t\tpopBreadCrumb={this.popBreadCrumbAt}/>\n\t\treturn this.strechedPage(comp);\n\t}\n\tlifecycles(){\n\t\tlet comp = <Lifecycles\n\t\t\t{...this.props}\n\t\t\tviewMode={this.state.viewMode}\n\t\t\tpushBreadCrumb={this.pushBreadCrumb}/>\n\t\treturn this.strechedPage(comp);\n\t}\n\ttypes(){\n\t\tlet comp = <Types {...this.props}/>\n\t\treturn this.strechedPage(comp);\n\t}\n\tmailTemplates(){\n\t\tlet comp = <EmailTemplates\n\t\t\t{...this.props}\n\t\t\tviewMode={this.state.viewMode}\n\t\t\tpushBreadCrumb={this.pushBreadCrumb}\n\t\t/>\n\t\treturn this.strechedPage(comp);\n\t}\n\tmembers(){\n\t\tlet comp = <ManageContainerUsers\n\t\t\t{...this.props}\n\t\t\tviewMode={this.state.viewMode}\n\t\t\tpushBreadCrumb={this.pushBreadCrumb}/>\n\t\treturn this.strechedPage(comp);\n\t}\n\tswitchContainer(){\n\t\tlet comp = <ContainerSwitcher\n\t\t\t{...this.props}\n\t\t\tviewMode={this.state.viewMode}\n\t\t\tpushBreadCrumb={this.pushBreadCrumb}\n\t\t\tadminPageUrl ='/admin?tab=platform'/>\n\t\treturn this.strechedPage(comp);\n\t}\n\tfolderTemplates(){\n\t\tlet comp =  <FolderTemplates\n\t\t\t{...this.props}\n\t\t\tviewMode={this.state.viewMode}\n\t\t\tpushBreadCrumb={this.pushBreadCrumb}/>\n\t\treturn this.strechedPage(comp);\n\t}\n\tteamTemplates(){\n\t\tlet comp =  <TeamTemplates\n\t\t\t{...this.props}\n\t\t\tviewMode={this.state.viewMode}\n\t\t\tpushBreadCrumb={this.pushBreadCrumb}/>\n\t\treturn this.strechedPage(comp);\n\t}\n\tdataLoader(){\n\t\tlet comp = <DataLoaderHistory\n\t\t\t{...this.props}\n\t\t\tviewMode={this.state.viewMode}\n\t\t\tpushBreadCrumb={this.pushBreadCrumb} />\n\t\treturn this.strechedPage(comp);\n\t}\n\tenumerations(){\n\t\tlet comp =  <Enumerations\n\t\t\t{...this.props}\n\t\t\tviewMode={this.state.viewMode}\n\t\t\tpushBreadCrumb={this.pushBreadCrumb} />\n\t\treturn this.strechedPage(comp);\n\t}\n\tabout() {\n\t\tlet comp = <AppVersions\n\t\t\t{...this.props}\n\t\t\tviewMode={this.state.viewMode}\n\t\t\tpushBreadCrumb={this.pushBreadCrumb}/>\n\t\treturn this.strechedPage(comp);\n\t}\n\n\tgetAllMenuItems () {\n\t\tconst tabName = commons.getValueFromUrl(\"tab\");\n\t\tconst menuContent = [];\n\n\t\tconst allMenus = this.getSuperAdministratorMenu();\n\t\tallMenus.map(entry => {\n\t\t\tif(entry.menuGroup === tabName) {\n\t\t\t\tmenuContent.push(entry);\n\t\t\t}\n\t\t})\n\n\t\treturn menuContent;\n\t}\n\n\tgetViewContentToDisplay(viewName, tabName){\n\t\tlet menuConfig, allMenuContent = this.getAllMenuItems();\n\n\t\tif(tabName) {\n\t\t\tallMenuContent.map(config => {\n\t\t\t\tif(config.key === viewName && config.menuGroup === tabName){\n\t\t\t\t\tmenuConfig = config;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif(!menuConfig) { return; }\n\n\t\t\tlet payload ={}\n\t\t\tpayload.breadItems = menuConfig.breadItems\n\t\t\tpayload.viewName = menuConfig.key;\n\t\t\tpayload.viewMode = 'viewList';\n\t\t\tpayload.menuGroup = menuConfig.menuGroup;\n\t\t\tpayload.location = menuConfig.name\n\t\t\treturn payload;\n\t\t}\n\t}\n\n\texport(){\n\t\tlet comp = <DataExportList {...this.props}/>\n\t\treturn this.strechedPage(comp);\n\t}\n\n\timportDatas(){\n\t\tlet comp = <div className=\"portlet-box\">\n\t\t\t<div className=\"portlet-content\">\n\t\t\t\t<DataImport {...this.props}/>\n\t\t\t</div>\n\t\t</div>\n\t\treturn this.strechedPage(comp);\n\t}\n\n\tcron(){\n\t\tlet comp = <CronTaskList {...this.props}/>\n\t\treturn this.strechedPage(comp);\n\t}\n\n\terrorCodes(){\n\t\treturn <ErrorCodeList  {...this.props}/>\n\t}\n\n\tcredit() {\n    \tvar comp = <CreditList {...this.props}/>\n    \treturn this.strechedPage(comp);\t}\n\ndemande() {\n    \tvar comp = <DemandeList {...this.props}/>\n    \treturn this.strechedPage(comp);\t}\n\nreplay() {\n    \tvar comp = <ReplayList {...this.props}/>\n    \treturn this.strechedPage(comp);\t}\n\nwebinar() {\n    \tvar comp = <WebinarList {...this.props}/>\n    \treturn this.strechedPage(comp);\t}\n\nexpertcategory() {\n    \tvar comp = <ExpertCategoryList {...this.props}/>\n    \treturn this.strechedPage(comp);\t}\n\nagentfacilitateurcategory() {\n    \tvar comp = <AgentFacilitateurCategoryList {...this.props}/>\n    \treturn this.strechedPage(comp);\t}\n\nambassadeurcategory() {\n    \tvar comp = <AmbassadeurCategoryList {...this.props}/>\n    \treturn this.strechedPage(comp);\t}\n\n// METHODS\n\n\tgetSuperAdministratorMenu(){\n\t\tconst adminMenuconfig = [\n\t\t\t{name:\"Règles métiers\", key:\"businessRules\", comp: this.businessRules(), visible: true, className:'fa-map-signs', breadItems:[{href:'#', title:'Business rules'}], menuGroup: 'platform'},\n\t\t\t{name:\"Types métiers\", key:\"types\", comp: this.types(), visible: true, className:'fa-cubes', breadItems:[{href:'#', title:'Business types'}], menuGroup: 'platform'},\n\t\t\t{name:\"Cycles de vie\", key:\"lifecycles\", comp: this.lifecycles(), visible: true, className:'fa-retweet', breadItems:[{href:'#', title:'Lifecycles'}], menuGroup: 'platform'},\n\t\t\t{name:\"Code d'erreurs\", key:\"errorCodes\", comp: this.errorCodes(), visible: true, className:'fa-group', breadItems:[{href:'#', title:\"Code d'erreurs\"}], menuGroup: 'platform'},\n\t\t\t{name:\"Template de mail\", key:\"emailTemplates\", comp: this.mailTemplates(), visible: true, className:'fa-envelope', breadItems:[{href:'#/admin?tab=platform&v=emt&u=va', title:'Email templates'}], menuGroup: 'platform'},\n\t\t\t{name:\"Conteneurs\", key:\"conteneurs\", comp: this.switchContainer(), visible: true, className:'fa-sliders', breadItems:[{href:'#', title:'Conteneurs'}], menuGroup: 'platform'},\n\t\t\t{name:\"Membres\", key:\"members\", comp: this.members(), visible: true, className:'fa-group', breadItems:[{href:'#', title:'Membres'}], menuGroup: 'platform'},\n\t\t\t//{name:\"Folder templates\", key:\"folderTemplates\", comp: this.folderTemplates(), visible: true, className:'fa-folder', breadItems:[{href:'#', title:'Folder templates'}], menuGroup: 'platform'},\n\t\t\t//{name:\"Templates d'équipe\", key:\"teamTemplates\", comp: this.teamTemplates(), visible: true, className:'fa-users', breadItems:[{href:'#', title:'Team templates'}], menuGroup: 'platform'},\n\t\t\t//{name:\"Enumerations\", key:\"enumerations\", comp: this.enumerations(), visible: true, className:'fa-list', breadItems:[{href:'#', title:'Enumerations'}], menuGroup: 'platform'},\n\t\t\t{name:\"Import de données\", key:\"import\", comp: this.importDatas(), visible: true, className:'fa-download', breadItems:[{href:'#', title:'Import'}], menuGroup: 'platform'},\n\t\t\t{name:\"Export de données\", key:\"export\", comp: this.export(), visible: true, className:'fa-upload', breadItems:[{href:'#', title:'Export'}], menuGroup: 'platform'},\n\t\t\t{name:\"Tâches périodiques\", key:\"crons\", comp: this.cron(), visible: true, className:'fa-tasks', breadItems:[{href:'#', title:'Tâches périodiques'}], menuGroup: 'platform'},\n\t\t\t//{name:\"Batchs\", key:\"dataLoader\", comp: this.dataLoader(), visible: true, className:'fa-exchange', breadItems:[{href:'#', title:'Jobs history'}], menuGroup: 'platform'},\n\t\t\t{name:\"Modules\", key:\"about\", comp: this.about(), visible: true, className:'fa-info-circle', dividerAfter:true, breadItems:[{href:'#', title:'Installed modules'}], menuGroup: 'platform'},\n\n\t\t\t\t\t\t\t\t\t{name:\"Credit\", key:\"credit\", comp: this.credit(), visible: true, className:'', breadItems:[{href:'#', title:'Credit'}], menuGroup: 'home'},\n\t\t\t\t\t\t{name:\"Demande\", key:\"demande\", comp: this.demande(), visible: true, className:'', breadItems:[{href:'#', title:'Demande'}], menuGroup: 'home'},\n\t\t\t\t\t\t{name:\"Replay\", key:\"replay\", comp: this.replay(), visible: true, className:'', breadItems:[{href:'#', title:'Replay'}], menuGroup: 'home'},\n\t\t\t\t\t\t{name:\"Webinar\", key:\"webinar\", comp: this.webinar(), visible: true, className:'', breadItems:[{href:'#', title:'Webinar'}], menuGroup: 'home'},\n\t\t\t\t\t\t{name:\"ExpertCategory\", key:\"expertcategory\", comp: this.expertcategory(), visible: true, className:'', breadItems:[{href:'#', title:'ExpertCategory'}], menuGroup: 'home'},\n\t\t\t\t\t\t{name:\"AgentFacilitateurCategory\", key:\"agentfacilitateurcategory\", comp: this.agentfacilitateurcategory(), visible: true, className:'', breadItems:[{href:'#', title:'AgentFacilitateurCategory'}], menuGroup: 'home'},\n\t\t\t\t\t\t{name:\"AmbassadeurCategory\", key:\"ambassadeurcategory\", comp: this.ambassadeurcategory(), visible: true, className:'', breadItems:[{href:'#', title:'AmbassadeurCategory'}], menuGroup: 'home'},\n// MENU\n\t\t];\n\n\t\treturn adminMenuconfig;\n\t}\n\n\tgetHiddenMenu(){\n\t\tconst hiddenMenuConfig = [\n\t\t\t{name:\"Membres\", key:\"members\", comp: this.members(), visible: true, className:'fa-users', breadItems:[{href:'#/admin?tab=platform&v=emailTemplates&u=va', title:'Members'}]},\n\t\t\t{name:\"Conteneurs\", key:\"manageContainers\", comp: this.switchContainer(), visible: true, className:'fa-map-signs', breadItems:[{href:'#', title:'Containers'}]},\n\t\t];\n\t\treturn hiddenMenuConfig;\n\t}\n\n\tstrechedPage(comp){\n\t\treturn comp;\n\t}\n\n\tgoBackToListView(e){\n\t\te.preventDefault();\n\t\tlet pathname = window.location.href.split('?')[0]\n\n\t\tconst queryUrlParams = queryString.parse(this.props.location.search);\n\t\tlet viewName = queryUrlParams.v;\n\t\tlet tab = queryUrlParams.tab;\n\n\t\tthis.props.history.push(pathname.split('#')[1] + '?tab=' + tab + '&name=' + viewName);\n\t}\n\n\trender (){\n\t\tif(this.state.loading === true){\n\t\t\treturn this.loading()\n\t\t}\n\n\t\tlet errors = [];\n\t\tif(this.state.errors && this.state.errors.length > 0) {\n\t\t\tthis.state.errors.map(error => {\n\t\t\t\terrors.push(<p>{error}</p>)\n\t\t\t})\n\t\t}\n\n\t\tlet content, eachMenuItems = this.getAllMenuItems();\n\t\teachMenuItems.map(eachMenuItem => {\n\t\t\tif(eachMenuItem.key === this.state.viewName){\n\t\t\t\tcontent = eachMenuItem.comp;\n\t\t\t}\n\t\t});\n\n\t\tif(!content){\n\t\t\tcontent = <>View name {this.state.viewName} not found</>\n\t\t}\n\n\t\tlet containerName = commons.getWorkingContainerName(this.props.userContext);\n\t\tlet headerClassName = this.state.viewName +'-list-header admin-breadcrumb';\n\t\tlet contentClassName = this.state.viewName +'-list-content'\n\n\t\treturn (<div className=\"admin-content-root\">\n\t\t\t\t<div className=\"admin-content-left-root\">\n\t\t\t\t\t<PrimaryContextMenu\n\t\t\t\t\t\t{...this.props}\n\t\t\t\t\t\thideVerticalMenu={true}\n\t\t\t\t\t\tmenuContent={this.getAllMenuItems()}\n\t\t\t\t\t\tsetDisplayedView={this.setDisplayedView}/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"admin-content-right-root\">\n\t\t\t\t\t<div className={headerClassName}>\n\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t<a href={'#'} onClick={\n\t\t\t\t\t\t\t\t(e)=> {\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\tthis.props.history.goBack();\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i className={'fa fa-lg fa-angle-left'}></i>&nbsp;&nbsp;&nbsp;\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<a href={'#'} onClick={(e)=>this.goBackToListView(e)}>\n\t\t\t\t\t\t\t\t{this.state.location}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<div className=\"admin-breadcrumb-table\">\n\t\t\t\t\t\t\t<AppBreadcrumb\n\t\t\t\t\t\t\t\tpopBreadCrumb={(item)=>this.popBreadCrumb(item)}\n\t\t\t\t\t\t\t\titems={this.state.breadItems}\n\t\t\t\t\t\t\t\thomeUrlAction={(arg)=>this.selectHomePage(arg)}\n\t\t\t\t\t\t\t\thomeLabel={containerName}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={contentClassName}>{content}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (GenericManagementPage)\n\nexport const setManagementPageSelectedTab = (payload) => ({\n\ttype: 'SET_ADMIN_HOME_ACTIVE_TAB',\n\tpayload: payload\n});\n"],"sourceRoot":""}